<?xml version="1.0" encoding="ASCII"?>
<occi:Extension xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:occi="http://schemas.ogf.org/occi/core/ecore" name="spanner" scheme="http://occi/gcpspanner#" description="Cloud Spanner is a managed, mission-critical, globally consistent and scalable relational database service.">
  <import href="http://schemas.ogf.org/occi/core#/"/>
  <kinds name="RollbackRequest" scheme="http://occi/gcpspanner#" title="The request for Rollback.">
    <attributes name="transactionId" required="true" description="Required. The transaction to roll back." type="//@types.0"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Transaction" scheme="http://occi/gcpspanner#" title="A transaction.">
    <attributes name="readTimestamp" required="true" description="For snapshot read-only transactions, the read timestamp chosen&#xA;for the transaction. Not returned by default: see&#xA;TransactionOptions.ReadOnly.return_read_timestamp." type="//@types.0"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="UpdateDatabaseDdlMetadata" scheme="http://occi/gcpspanner#" title="Metadata type for the operation returned by&#xA;UpdateDatabaseDdl.">
    <attributes name="statements" required="true" description="For an update this list contains all the statements. For an&#xA;individual statement, this list contains only that statement." type="//@types.7"/>
    <attributes name="commitTimestamps" required="true" description="Reports the commit timestamps of all statements that have&#xA;succeeded so far, where `commit_timestamps[i]` is the commit&#xA;timestamp for the statement `statements[i]`." type="//@types.7"/>
    <attributes name="database" required="true" description="The database being modified." type="//@types.0"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="StructType" scheme="http://occi/gcpspanner#" title="`StructType` defines the fields of a STRUCT type.">
    <attributes name="fields" required="true" description="The list of fields that make up this struct. Order is&#xA;significant, because values of this struct type are represented as&#xA;lists, where the order of field values matches the order of&#xA;fields in the StructType. In turn, the order of fields&#xA;matches the order of columns in a read request, or the order of&#xA;fields in the `SELECT` clause of a query." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="QueryPlan" scheme="http://occi/gcpspanner#" title="Contains an ordered list of nodes appearing in the query plan.">
    <attributes name="planNodes" required="true" description="The nodes in the query plan. Plan nodes are returned in pre-order starting&#xA;with the plan root. Each PlanNode's `id` corresponds to its index in&#xA;`plan_nodes`." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TypeLink" scheme="http://occi/gcpspanner#" title="The type of the field." source="//@kinds[term='field']" target="//@kinds[term='type']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="Field" scheme="http://occi/gcpspanner#" title="Message representing a single field of a struct.">
    <attributes name="name" required="true" description="The name of the field. For reads, this is the column name. For&#xA;SQL queries, it is the column alias (e.g., `&quot;Word&quot;` in the&#xA;query `&quot;SELECT 'hello' AS Word&quot;`), or the column name (e.g.,&#xA;`&quot;ColName&quot;` in the query `&quot;SELECT ColName FROM Table&quot;`). Some&#xA;columns might have an empty name (e.g., !&quot;SELECT&#xA;UPPER(ColName)&quot;`). Note that a query result can contain&#xA;multiple fields with the same name." type="//@types.0"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TestIamPermissionsRequest" scheme="http://occi/gcpspanner#" title="Request message for `TestIamPermissions` method.">
    <attributes name="permissions" required="true" description="REQUIRED: The set of permissions to check for 'resource'.&#xA;Permissions with wildcards (such as '*', 'spanner.*', 'spanner.instances.*') are not allowed." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="QueryPlanLink" scheme="http://occi/gcpspanner#" title="QueryPlan for the query associated with this result." source="//@kinds[term='resultsetstats']" target="//@kinds[term='queryplan']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ResultSetStats" scheme="http://occi/gcpspanner#" title="Additional statistics about a ResultSet or PartialResultSet.">
    <attributes name="queryStats" required="true" description="Aggregated statistics from the execution of the query. Only present when&#xA;the query is profiled. For example, a query could return the statistics as&#xA;follows:&#xA;&#xA;    {&#xA;      &quot;rows_returned&quot;: &quot;3&quot;,&#xA;      &quot;elapsed_time&quot;: &quot;1.22 secs&quot;,&#xA;      &quot;cpu_time&quot;: &quot;1.19 secs&quot;&#xA;    }" type="//@types.9"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="CommitResponse" scheme="http://occi/gcpspanner#" title="The response for Commit.">
    <attributes name="commitTimestamp" required="true" description="The Cloud Spanner timestamp at which the transaction committed." type="//@types.0"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TypeTypeLink" scheme="http://occi/gcpspanner#" title="If code == ARRAY, then `array_element_type`&#xA;is the type of the array elements." source="//@kinds[term='type']" target="//@kinds[term='type']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="StructTypeLink" scheme="http://occi/gcpspanner#" title="If code == STRUCT, then `struct_type`&#xA;provides type information for the struct's fields." source="//@kinds[term='type']" target="//@kinds[term='structtype']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="Type" scheme="http://occi/gcpspanner#" title="`Type` indicates the type of a Cloud Spanner value, as might be stored in a&#xA;table cell or returned from an SQL query.">
    <attributes name="code" required="true" description="Required. The TypeCode for this type." type="//@types.11"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ShortRepresentationLink" scheme="http://occi/gcpspanner#" title="Condensed representation for SCALAR nodes." source="//@kinds[term='plannode']" target="//@kinds[term='shortrepresentation']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="PlanNode" scheme="http://occi/gcpspanner#" title="Node information for nodes appearing in a QueryPlan.plan_nodes.">
    <attributes name="metadata" required="true" description="Attributes relevant to the node contained in a group of key-value pairs.&#xA;For example, a Parameter Reference node could have the following&#xA;information in its metadata:&#xA;&#xA;    {&#xA;      &quot;parameter_reference&quot;: &quot;param1&quot;,&#xA;      &quot;parameter_type&quot;: &quot;array&quot;&#xA;    }" type="//@types.9"/>
    <attributes name="executionStats" required="true" description="The execution statistics associated with the node, contained in a group of&#xA;key-value pairs. Only present if the plan was returned as a result of a&#xA;profile query. For example, number of executions, number of rows/time per&#xA;execution etc." type="//@types.9"/>
    <attributes name="index" required="true" description="The `PlanNode`'s index in node list." type="//@types.3"/>
    <attributes name="kind" required="true" description="Used to determine the type of node. May be needed for visualizing&#xA;different kinds of nodes differently. For example, If the node is a&#xA;SCALAR node, it will have a condensed representation&#xA;which can be used to directly embed a description of the node in its&#xA;parent." type="//@types.12"/>
    <attributes name="displayName" required="true" description="The display name for the node." type="//@types.12"/>
    <attributes name="childLinks" required="true" description="List of child node `index`es and their relationship to this parent." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="InstanceLink" scheme="http://occi/gcpspanner#" title="The instance being created." source="//@kinds[term='createinstancemetadata']" target="//@kinds[term='instance']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="CreateInstanceMetadata" scheme="http://occi/gcpspanner#" title="Metadata type for the operation returned by&#xA;CreateInstance.">
    <attributes name="cancelTime" required="true" description="The time at which this operation was cancelled. If set, this operation is&#xA;in the process of undoing itself (which is guaranteed to succeed) and&#xA;cannot be cancelled again." type="//@types.12"/>
    <attributes name="endTime" required="true" description="The time at which this operation failed or was completed successfully." type="//@types.12"/>
    <attributes name="startTime" required="true" description="The time at which the&#xA;CreateInstance request was&#xA;received." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ChildLink" scheme="http://occi/gcpspanner#" title="Metadata associated with a parent-child relationship appearing in a&#xA;PlanNode.">
    <attributes name="type" required="true" description="The type of the link. For example, in Hash Joins this could be used to&#xA;distinguish between the build child and the probe child, or in the case&#xA;of the child being an output variable, to represent the tag associated&#xA;with the output variable." type="//@types.12"/>
    <attributes name="childIndex" required="true" description="The node to which the link points." type="//@types.3"/>
    <attributes name="variable" required="true" description="Only present if the child node is SCALAR and corresponds&#xA;to an output variable of the parent node. The field carries the name of&#xA;the output variable.&#xA;For example, a `TableScan` operator that reads rows from a table will&#xA;have child links to the `SCALAR` nodes representing the output variables&#xA;created for each column that is read by the operator. The corresponding&#xA;`variable` fields will be set to the variable names assigned to the&#xA;columns." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="KeySetLink" scheme="http://occi/gcpspanner#" title="Required. The primary keys of the rows within table to delete." source="//@kinds[term='delete']" target="//@kinds[term='keyset']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="Delete" scheme="http://occi/gcpspanner#" title="Arguments to delete operations.">
    <attributes name="table" required="true" description="Required. The table whose rows will be deleted." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TransactionOptionsLink" scheme="http://occi/gcpspanner#" title="Execute mutations in a temporary transaction. Note that unlike&#xA;commit of a previously-started transaction, commit with a&#xA;temporary transaction is non-idempotent. That is, if the&#xA;`CommitRequest` is sent to Cloud Spanner more than once (for&#xA;instance, due to retries in the application, or in the&#xA;transport library), it is possible that the mutations are&#xA;executed more than once. If this is undesirable, use&#xA;BeginTransaction and&#xA;Commit instead." source="//@kinds[term='commitrequest']" target="//@kinds[term='transactionoptions']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="CommitRequest" scheme="http://occi/gcpspanner#" title="The request for Commit.">
    <attributes name="mutations" required="true" description="The mutations to be executed when this transaction commits. All&#xA;mutations are applied atomically, in the order they appear in&#xA;this list." type="//@types.7"/>
    <attributes name="transactionId" required="true" description="Commit a previously-started transaction." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="BeginTransactionRequestTransactionOptionsLink" scheme="http://occi/gcpspanner#" title="Required. Options for the new transaction." source="//@kinds[term='begintransactionrequest']" target="//@kinds[term='transactionoptions']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="BeginTransactionRequest" scheme="http://occi/gcpspanner#" title="The request for BeginTransaction.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ListInstanceConfigsResponse" scheme="http://occi/gcpspanner#" title="The response for ListInstanceConfigs.">
    <attributes name="nextPageToken" required="true" description="`next_page_token` can be sent in a subsequent&#xA;ListInstanceConfigs call to&#xA;fetch more of the matching instance configurations." type="//@types.12"/>
    <attributes name="instanceConfigs" required="true" description="The list of requested instance configurations." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="GetIamPolicyRequest" scheme="http://occi/gcpspanner#" title="Request message for `GetIamPolicy` method.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TestIamPermissionsResponse" scheme="http://occi/gcpspanner#" title="Response message for `TestIamPermissions` method.">
    <attributes name="permissions" required="true" description="A subset of `TestPermissionsRequest.permissions` that the caller is&#xA;allowed." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="CreateDatabaseMetadata" scheme="http://occi/gcpspanner#" title="Metadata type for the operation returned by&#xA;CreateDatabase.">
    <attributes name="database" required="true" description="The database being created." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ListSessionsResponse" scheme="http://occi/gcpspanner#" title="The response for ListSessions.">
    <attributes name="sessions" required="true" description="The list of requested sessions." type="//@types.7"/>
    <attributes name="nextPageToken" required="true" description="`next_page_token` can be sent in a subsequent&#xA;ListSessions call to fetch more of the matching&#xA;sessions." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Session" scheme="http://occi/gcpspanner#" title="A session in the Cloud Spanner API.">
    <attributes name="name" required="true" description="The name of the session." type="//@types.12"/>
    <attributes name="approximateLastUseTime" required="true" description="Output only. The approximate timestamp when the session is last used. It is&#xA;typically earlier than the actual last use time." type="//@types.12"/>
    <attributes name="labels" required="true" description="The labels for the session.&#xA;&#xA; * Label keys must be between 1 and 63 characters long and must conform to&#xA;   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.&#xA; * Label values must be between 0 and 63 characters long and must conform&#xA;   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.&#xA; * No more than 20 labels can be associated with a given session." type="//@types.9"/>
    <attributes name="createTime" required="true" description="Output only. The timestamp when the session is created." type="//@types.12"/>
    <actions name="executeSql" scheme="http://occi/gcpspanner/session/action#" title="Executes an SQL query, returning all rows in a single reply. This&#xA;method cannot be used to return a result set larger than 10 MiB;&#xA;if the query yields more data than that, the query fails with&#xA;a `FAILED_PRECONDITION` error.&#xA;&#xA;Queries inside read-write transactions might return `ABORTED`. If&#xA;this occurs, the application should restart the transaction from&#xA;the beginning. See Transaction for more details.&#xA;&#xA;Larger result sets can be fetched in streaming fashion by calling&#xA;ExecuteStreamingSql instead.">
      <attributes name="session" required="true" description="Required. The session in which the SQL query should be performed." type="//@types.12"/>
    </actions>
    <actions name="list" scheme="http://occi/gcpspanner/session/action#" title="Lists all sessions in a given database.">
      <attributes name="database" required="true" description="Required. The database in which to list sessions." type="//@types.12"/>
      <attributes name="filter" required="true" description="An expression for filtering the results of the request. Filter rules are&#xA;case insensitive. The fields eligible for filtering are:&#xA;&#xA;  * labels.key where key is the name of a label&#xA;&#xA;Some examples of using filters are:&#xA;&#xA;  * labels.env:* --> The session has the label &quot;env&quot;.&#xA;  * labels.env:dev --> The session has the label &quot;env&quot; and the value of&#xA;                       the label contains the string &quot;dev&quot;." type="//@types.12"/>
      <attributes name="pageToken" required="true" description="If non-empty, `page_token` should contain a&#xA;next_page_token from a previous&#xA;ListSessionsResponse." type="//@types.12"/>
      <attributes name="pageSize" required="true" description="Number of sessions to be returned in the response. If 0 or less, defaults&#xA;to the server's maximum allowed page size." type="//@types.3"/>
    </actions>
    <actions name="streamingRead" scheme="http://occi/gcpspanner/session/action#" title="Like Read, except returns the result set as a&#xA;stream. Unlike Read, there is no limit on the&#xA;size of the returned result set. However, no individual row in&#xA;the result set can exceed 100 MiB, and no column value can exceed&#xA;10 MiB.">
      <attributes name="session" required="true" description="Required. The session in which the read should be performed." type="//@types.12"/>
    </actions>
    <actions name="rollback" scheme="http://occi/gcpspanner/session/action#" title="Rolls back a transaction, releasing any locks it holds. It is a good&#xA;idea to call this for any transaction that includes one or more&#xA;Read or ExecuteSql requests and&#xA;ultimately decides not to commit.&#xA;&#xA;`Rollback` returns `OK` if it successfully aborts the transaction, the&#xA;transaction was already aborted, or the transaction is not&#xA;found. `Rollback` never returns `ABORTED`.">
      <attributes name="session" required="true" description="Required. The session in which the transaction to roll back is running." type="//@types.12"/>
    </actions>
    <actions name="create" scheme="http://occi/gcpspanner/session/action#" title="Creates a new session. A session can be used to perform&#xA;transactions that read and/or modify data in a Cloud Spanner database.&#xA;Sessions are meant to be reused for many consecutive&#xA;transactions.&#xA;&#xA;Sessions can only execute one transaction at a time. To execute&#xA;multiple concurrent read-write/write-only transactions, create&#xA;multiple sessions. Note that standalone reads and queries use a&#xA;transaction internally, and count toward the one transaction&#xA;limit.&#xA;&#xA;Cloud Spanner limits the number of sessions that can exist at any given&#xA;time; thus, it is a good idea to delete idle and/or unneeded sessions.&#xA;Aside from explicit deletes, Cloud Spanner can delete sessions for which no&#xA;operations are sent for more than an hour. If a session is deleted,&#xA;requests to it return `NOT_FOUND`.&#xA;&#xA;Idle sessions can be kept alive by sending a trivial SQL query&#xA;periodically, e.g., `&quot;SELECT 1&quot;`.">
      <attributes name="database" required="true" description="Required. The database in which the new session is created." type="//@types.12"/>
    </actions>
    <actions name="read" scheme="http://occi/gcpspanner/session/action#" title="Reads rows from the database using key lookups and scans, as a&#xA;simple key/value style alternative to&#xA;ExecuteSql.  This method cannot be used to&#xA;return a result set larger than 10 MiB; if the read matches more&#xA;data than that, the read fails with a `FAILED_PRECONDITION`&#xA;error.&#xA;&#xA;Reads inside read-write transactions might return `ABORTED`. If&#xA;this occurs, the application should restart the transaction from&#xA;the beginning. See Transaction for more details.&#xA;&#xA;Larger result sets can be yielded in streaming fashion by calling&#xA;StreamingRead instead.">
      <attributes name="session" required="true" description="Required. The session in which the read should be performed." type="//@types.12"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/session/action#" title="Gets a session. Returns `NOT_FOUND` if the session does not exist.&#xA;This is mainly useful for determining whether a session is still&#xA;alive.">
      <attributes name="name" required="true" description="Required. The name of the session to retrieve." type="//@types.12"/>
    </actions>
    <actions name="commit" scheme="http://occi/gcpspanner/session/action#" title="Commits a transaction. The request includes the mutations to be&#xA;applied to rows in the database.&#xA;&#xA;`Commit` might return an `ABORTED` error. This can occur at any time;&#xA;commonly, the cause is conflicts with concurrent&#xA;transactions. However, it can also happen for a variety of other&#xA;reasons. If `Commit` returns `ABORTED`, the caller should re-attempt&#xA;the transaction from the beginning, re-using the same session.">
      <attributes name="session" required="true" description="Required. The session in which the transaction to be committed is running." type="//@types.12"/>
    </actions>
    <actions name="beginTransaction" scheme="http://occi/gcpspanner/session/action#" title="Begins a new transaction. This step can often be skipped:&#xA;Read, ExecuteSql and&#xA;Commit can begin a new transaction as a&#xA;side-effect.">
      <attributes name="session" required="true" description="Required. The session in which the transaction runs." type="//@types.12"/>
    </actions>
    <actions name="executeStreamingSql" scheme="http://occi/gcpspanner/session/action#" title="Like ExecuteSql, except returns the result&#xA;set as a stream. Unlike ExecuteSql, there&#xA;is no limit on the size of the returned result set. However, no&#xA;individual row in the result set can exceed 100 MiB, and no&#xA;column value can exceed 10 MiB.">
      <attributes name="session" required="true" description="Required. The session in which the SQL query should be performed." type="//@types.12"/>
    </actions>
    <actions name="delete" scheme="http://occi/gcpspanner/session/action#" title="Ends a session, releasing server resources associated with it.">
      <attributes name="name" required="true" description="Required. The name of the session to delete." type="//@types.12"/>
    </actions>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="KeyRange" scheme="http://occi/gcpspanner#" title="KeyRange represents a range of rows in a table or index.&#xA;&#xA;A range has a start key and an end key. These keys can be open or&#xA;closed, indicating if the range includes rows with that key.&#xA;&#xA;Keys are represented by lists, where the ith value in the list&#xA;corresponds to the ith component of the table or index primary key.&#xA;Individual values are encoded as described here.&#xA;&#xA;For example, consider the following table definition:&#xA;&#xA;    CREATE TABLE UserEvents (&#xA;      UserName STRING(MAX),&#xA;      EventDate STRING(10)&#xA;    ) PRIMARY KEY(UserName, EventDate);&#xA;&#xA;The following keys name rows in this table:&#xA;&#xA;    &quot;Bob&quot;, &quot;2014-09-23&quot;&#xA;&#xA;Since the `UserEvents` table's `PRIMARY KEY` clause names two&#xA;columns, each `UserEvents` key has two elements; the first is the&#xA;`UserName`, and the second is the `EventDate`.&#xA;&#xA;Key ranges with multiple components are interpreted&#xA;lexicographically by component using the table or index key's declared&#xA;sort order. For example, the following range returns all events for&#xA;user `&quot;Bob&quot;` that occurred in the year 2015:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;Bob&quot;, &quot;2015-01-01&quot;]&#xA;    &quot;end_closed&quot;: [&quot;Bob&quot;, &quot;2015-12-31&quot;]&#xA;&#xA;Start and end keys can omit trailing key components. This affects the&#xA;inclusion and exclusion of rows that exactly match the provided key&#xA;components: if the key is closed, then rows that exactly match the&#xA;provided components are included; if the key is open, then rows&#xA;that exactly match are not included.&#xA;&#xA;For example, the following range includes all events for `&quot;Bob&quot;` that&#xA;occurred during and after the year 2000:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;Bob&quot;, &quot;2000-01-01&quot;]&#xA;    &quot;end_closed&quot;: [&quot;Bob&quot;]&#xA;&#xA;The next example retrieves all events for `&quot;Bob&quot;`:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;Bob&quot;]&#xA;    &quot;end_closed&quot;: [&quot;Bob&quot;]&#xA;&#xA;To retrieve events before the year 2000:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;Bob&quot;]&#xA;    &quot;end_open&quot;: [&quot;Bob&quot;, &quot;2000-01-01&quot;]&#xA;&#xA;The following range includes all rows in the table:&#xA;&#xA;    &quot;start_closed&quot;: []&#xA;    &quot;end_closed&quot;: []&#xA;&#xA;This range returns all users whose `UserName` begins with any&#xA;character from A to C:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;A&quot;]&#xA;    &quot;end_open&quot;: [&quot;D&quot;]&#xA;&#xA;This range returns all users whose `UserName` begins with B:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;B&quot;]&#xA;    &quot;end_open&quot;: [&quot;C&quot;]&#xA;&#xA;Key ranges honor column sort order. For example, suppose a table is&#xA;defined as follows:&#xA;&#xA;    CREATE TABLE DescendingSortedTable {&#xA;      Key INT64,&#xA;      ...&#xA;    ) PRIMARY KEY(Key DESC);&#xA;&#xA;The following range retrieves all rows with key values between 1&#xA;and 100 inclusive:&#xA;&#xA;    &quot;start_closed&quot;: [&quot;100&quot;]&#xA;    &quot;end_closed&quot;: [&quot;1&quot;]&#xA;&#xA;Note that 100 is passed as the start, and 1 is passed as the end,&#xA;because `Key` is a descending column in the schema.">
    <attributes name="startClosed" required="true" description="If the start is closed, then the range includes all rows whose&#xA;first `len(start_closed)` key columns exactly match `start_closed`." type="//@types.7"/>
    <attributes name="startOpen" required="true" description="If the start is open, then the range excludes rows whose first&#xA;`len(start_open)` key columns exactly match `start_open`." type="//@types.7"/>
    <attributes name="endOpen" required="true" description="If the end is open, then the range excludes rows whose first&#xA;`len(end_open)` key columns exactly match `end_open`." type="//@types.7"/>
    <attributes name="endClosed" required="true" description="If the end is closed, then the range includes all rows whose&#xA;first `len(end_closed)` key columns exactly match `end_closed`." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ListInstancesResponse" scheme="http://occi/gcpspanner#" title="The response for ListInstances.">
    <attributes name="nextPageToken" required="true" description="`next_page_token` can be sent in a subsequent&#xA;ListInstances call to fetch more&#xA;of the matching instances." type="//@types.12"/>
    <attributes name="instances" required="true" description="The list of requested instances." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ShortRepresentation" scheme="http://occi/gcpspanner#" title="Condensed representation of a node and its subtree. Only present for&#xA;`SCALAR` PlanNode(s).">
    <attributes name="subqueries" required="true" description="A mapping of (subquery variable name) -> (subquery node id) for cases&#xA;where the `description` string of this node references a `SCALAR`&#xA;subquery contained in the expression subtree rooted at this node. The&#xA;referenced `SCALAR` subquery may not necessarily be a direct child of&#xA;this node." type="//@types.9"/>
    <attributes name="description" required="true" description="A string representation of the expression subtree rooted at this node." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="InstanceConfig" scheme="http://occi/gcpspanner#" title="A possible configuration for a Cloud Spanner instance. Configurations&#xA;define the geographic placement of nodes and their replication.">
    <attributes name="displayName" required="true" description="The name of this instance configuration as it appears in UIs." type="//@types.12"/>
    <attributes name="name" required="true" description="A unique identifier for the instance configuration.  Values&#xA;are of the form&#xA;`projects/&lt;project>/instanceConfigs/a-z*`" type="//@types.12"/>
    <actions name="list" scheme="http://occi/gcpspanner/instanceconfig/action#" title="Lists the supported instance configurations for a given project.">
      <attributes name="parent" required="true" description="Required. The name of the project for which a list of supported instance&#xA;configurations is requested. Values are of the form&#xA;`projects/&lt;project>`." type="//@types.12"/>
      <attributes name="pageToken" required="true" description="If non-empty, `page_token` should contain a&#xA;next_page_token&#xA;from a previous ListInstanceConfigsResponse." type="//@types.12"/>
      <attributes name="pageSize" required="true" description="Number of instance configurations to be returned in the response. If 0 or&#xA;less, defaults to the server's maximum allowed page size." type="//@types.3"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/instanceconfig/action#" title="Gets information about a particular instance configuration.">
      <attributes name="name" required="true" description="Required. The name of the requested instance configuration. Values are of&#xA;the form `projects/&lt;project>/instanceConfigs/&lt;config>`." type="//@types.12"/>
    </actions>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="UpdateInstanceRequestInstanceLink" scheme="http://occi/gcpspanner#" title="Required. The instance to update, which must always include the instance&#xA;name.  Otherwise, only fields mentioned in [][google.spanner.admin.instance.v1.UpdateInstanceRequest.field_mask] need be included." source="//@kinds[term='updateinstancerequest']" target="//@kinds[term='instance']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="UpdateInstanceRequest" scheme="http://occi/gcpspanner#" title="The request for UpdateInstance.">
    <attributes name="fieldMask" required="true" description="Required. A mask specifying which fields in [][google.spanner.admin.instance.v1.UpdateInstanceRequest.instance] should be updated.&#xA;The field mask must always be specified; this prevents any future fields in&#xA;[][google.spanner.admin.instance.v1.Instance] from being erased accidentally by clients that do not know&#xA;about them." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Empty" scheme="http://occi/gcpspanner#" title="A generic empty message that you can re-use to avoid defining duplicated&#xA;empty messages in your APIs. A typical example is to use it as the request&#xA;or the response type of an API method. For instance:&#xA;&#xA;    service Foo {&#xA;      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);&#xA;    }&#xA;&#xA;The JSON representation for `Empty` is empty JSON object `{}`.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ReadWriteLink" scheme="http://occi/gcpspanner#" title="Transaction may write.&#xA;&#xA;Authorization to begin a read-write transaction requires&#xA;`spanner.databases.beginOrRollbackReadWriteTransaction` permission&#xA;on the `session` resource." source="//@kinds[term='transactionoptions']" target="//@kinds[term='readwrite']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ReadOnlyLink" scheme="http://occi/gcpspanner#" title="Transaction will not write.&#xA;&#xA;Authorization to begin a read-only transaction requires&#xA;`spanner.databases.beginReadOnlyTransaction` permission&#xA;on the `session` resource." source="//@kinds[term='transactionoptions']" target="//@kinds[term='readonly']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="TransactionOptions" scheme="http://occi/gcpspanner#" title="# Transactions&#xA;&#xA;&#xA;Each session can have at most one active transaction at a time. After the&#xA;active transaction is completed, the session can immediately be&#xA;re-used for the next transaction. It is not necessary to create a&#xA;new session for each transaction.&#xA;&#xA;# Transaction Modes&#xA;&#xA;Cloud Spanner supports two transaction modes:&#xA;&#xA;  1. Locking read-write. This type of transaction is the only way&#xA;     to write data into Cloud Spanner. These transactions rely on&#xA;     pessimistic locking and, if necessary, two-phase commit.&#xA;     Locking read-write transactions may abort, requiring the&#xA;     application to retry.&#xA;&#xA;  2. Snapshot read-only. This transaction type provides guaranteed&#xA;     consistency across several reads, but does not allow&#xA;     writes. Snapshot read-only transactions can be configured to&#xA;     read at timestamps in the past. Snapshot read-only&#xA;     transactions do not need to be committed.&#xA;&#xA;For transactions that only read, snapshot read-only transactions&#xA;provide simpler semantics and are almost always faster. In&#xA;particular, read-only transactions do not take locks, so they do&#xA;not conflict with read-write transactions. As a consequence of not&#xA;taking locks, they also do not abort, so retry loops are not needed.&#xA;&#xA;Transactions may only read/write data in a single database. They&#xA;may, however, read/write data in different tables within that&#xA;database.&#xA;&#xA;## Locking Read-Write Transactions&#xA;&#xA;Locking transactions may be used to atomically read-modify-write&#xA;data anywhere in a database. This type of transaction is externally&#xA;consistent.&#xA;&#xA;Clients should attempt to minimize the amount of time a transaction&#xA;is active. Faster transactions commit with higher probability&#xA;and cause less contention. Cloud Spanner attempts to keep read locks&#xA;active as long as the transaction continues to do reads, and the&#xA;transaction has not been terminated by&#xA;Commit or&#xA;Rollback.  Long periods of&#xA;inactivity at the client may cause Cloud Spanner to release a&#xA;transaction's locks and abort it.&#xA;&#xA;Reads performed within a transaction acquire locks on the data&#xA;being read. Writes can only be done at commit time, after all reads&#xA;have been completed.&#xA;Conceptually, a read-write transaction consists of zero or more&#xA;reads or SQL queries followed by&#xA;Commit. At any time before&#xA;Commit, the client can send a&#xA;Rollback request to abort the&#xA;transaction.&#xA;&#xA;### Semantics&#xA;&#xA;Cloud Spanner can commit the transaction if all read locks it acquired&#xA;are still valid at commit time, and it is able to acquire write&#xA;locks for all writes. Cloud Spanner can abort the transaction for any&#xA;reason. If a commit attempt returns `ABORTED`, Cloud Spanner guarantees&#xA;that the transaction has not modified any user data in Cloud Spanner.&#xA;&#xA;Unless the transaction commits, Cloud Spanner makes no guarantees about&#xA;how long the transaction's locks were held for. It is an error to&#xA;use Cloud Spanner locks for any sort of mutual exclusion other than&#xA;between Cloud Spanner transactions themselves.&#xA;&#xA;### Retrying Aborted Transactions&#xA;&#xA;When a transaction aborts, the application can choose to retry the&#xA;whole transaction again. To maximize the chances of successfully&#xA;committing the retry, the client should execute the retry in the&#xA;same session as the original attempt. The original session's lock&#xA;priority increases with each consecutive abort, meaning that each&#xA;attempt has a slightly better chance of success than the previous.&#xA;&#xA;Under some circumstances (e.g., many transactions attempting to&#xA;modify the same row(s)), a transaction can abort many times in a&#xA;short period before successfully committing. Thus, it is not a good&#xA;idea to cap the number of retries a transaction can attempt;&#xA;instead, it is better to limit the total amount of wall time spent&#xA;retrying.&#xA;&#xA;### Idle Transactions&#xA;&#xA;A transaction is considered idle if it has no outstanding reads or&#xA;SQL queries and has not started a read or SQL query within the last 10&#xA;seconds. Idle transactions can be aborted by Cloud Spanner so that they&#xA;don't hold on to locks indefinitely. In that case, the commit will&#xA;fail with error `ABORTED`.&#xA;&#xA;If this behavior is undesirable, periodically executing a simple&#xA;SQL query in the transaction (e.g., `SELECT 1`) prevents the&#xA;transaction from becoming idle.&#xA;&#xA;## Snapshot Read-Only Transactions&#xA;&#xA;Snapshot read-only transactions provides a simpler method than&#xA;locking read-write transactions for doing several consistent&#xA;reads. However, this type of transaction does not support writes.&#xA;&#xA;Snapshot transactions do not take locks. Instead, they work by&#xA;choosing a Cloud Spanner timestamp, then executing all reads at that&#xA;timestamp. Since they do not acquire locks, they do not block&#xA;concurrent read-write transactions.&#xA;&#xA;Unlike locking read-write transactions, snapshot read-only&#xA;transactions never abort. They can fail if the chosen read&#xA;timestamp is garbage collected; however, the default garbage&#xA;collection policy is generous enough that most applications do not&#xA;need to worry about this in practice.&#xA;&#xA;Snapshot read-only transactions do not need to call&#xA;Commit or&#xA;Rollback (and in fact are not&#xA;permitted to do so).&#xA;&#xA;To execute a snapshot transaction, the client specifies a timestamp&#xA;bound, which tells Cloud Spanner how to choose a read timestamp.&#xA;&#xA;The types of timestamp bound are:&#xA;&#xA;  - Strong (the default).&#xA;  - Bounded staleness.&#xA;  - Exact staleness.&#xA;&#xA;If the Cloud Spanner database to be read is geographically distributed,&#xA;stale read-only transactions can execute more quickly than strong&#xA;or read-write transaction, because they are able to execute far&#xA;from the leader replica.&#xA;&#xA;Each type of timestamp bound is discussed in detail below.&#xA;&#xA;### Strong&#xA;&#xA;Strong reads are guaranteed to see the effects of all transactions&#xA;that have committed before the start of the read. Furthermore, all&#xA;rows yielded by a single read are consistent with each other -- if&#xA;any part of the read observes a transaction, all parts of the read&#xA;see the transaction.&#xA;&#xA;Strong reads are not repeatable: two consecutive strong read-only&#xA;transactions might return inconsistent results if there are&#xA;concurrent writes. If consistency across reads is required, the&#xA;reads should be executed within a transaction or at an exact read&#xA;timestamp.&#xA;&#xA;See TransactionOptions.ReadOnly.strong.&#xA;&#xA;### Exact Staleness&#xA;&#xA;These timestamp bounds execute reads at a user-specified&#xA;timestamp. Reads at a timestamp are guaranteed to see a consistent&#xA;prefix of the global transaction history: they observe&#xA;modifications done by all transactions with a commit timestamp &lt;=&#xA;the read timestamp, and observe none of the modifications done by&#xA;transactions with a larger commit timestamp. They will block until&#xA;all conflicting transactions that may be assigned commit timestamps&#xA;&lt;= the read timestamp have finished.&#xA;&#xA;The timestamp can either be expressed as an absolute Cloud Spanner commit&#xA;timestamp or a staleness relative to the current time.&#xA;&#xA;These modes do not require a &quot;negotiation phase&quot; to pick a&#xA;timestamp. As a result, they execute slightly faster than the&#xA;equivalent boundedly stale concurrency modes. On the other hand,&#xA;boundedly stale reads usually return fresher results.&#xA;&#xA;See TransactionOptions.ReadOnly.read_timestamp and&#xA;TransactionOptions.ReadOnly.exact_staleness.&#xA;&#xA;### Bounded Staleness&#xA;&#xA;Bounded staleness modes allow Cloud Spanner to pick the read timestamp,&#xA;subject to a user-provided staleness bound. Cloud Spanner chooses the&#xA;newest timestamp within the staleness bound that allows execution&#xA;of the reads at the closest available replica without blocking.&#xA;&#xA;All rows yielded are consistent with each other -- if any part of&#xA;the read observes a transaction, all parts of the read see the&#xA;transaction. Boundedly stale reads are not repeatable: two stale&#xA;reads, even if they use the same staleness bound, can execute at&#xA;different timestamps and thus return inconsistent results.&#xA;&#xA;Boundedly stale reads execute in two phases: the first phase&#xA;negotiates a timestamp among all replicas needed to serve the&#xA;read. In the second phase, reads are executed at the negotiated&#xA;timestamp.&#xA;&#xA;As a result of the two phase execution, bounded staleness reads are&#xA;usually a little slower than comparable exact staleness&#xA;reads. However, they are typically able to return fresher&#xA;results, and are more likely to execute at the closest replica.&#xA;&#xA;Because the timestamp negotiation requires up-front knowledge of&#xA;which rows will be read, it can only be used with single-use&#xA;read-only transactions.&#xA;&#xA;See TransactionOptions.ReadOnly.max_staleness and&#xA;TransactionOptions.ReadOnly.min_read_timestamp.&#xA;&#xA;### Old Read Timestamps and Garbage Collection&#xA;&#xA;Cloud Spanner continuously garbage collects deleted and overwritten data&#xA;in the background to reclaim storage space. This process is known&#xA;as &quot;version GC&quot;. By default, version GC reclaims versions after they&#xA;are one hour old. Because of this, Cloud Spanner cannot perform reads&#xA;at read timestamps more than one hour in the past. This&#xA;restriction also applies to in-progress reads and/or SQL queries whose&#xA;timestamp become too old while executing. Reads and SQL queries with&#xA;too-old read timestamps fail with the error `FAILED_PRECONDITION`.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="CreateDatabaseRequest" scheme="http://occi/gcpspanner#" title="The request for CreateDatabase.">
    <attributes name="createStatement" required="true" description="Required. A `CREATE DATABASE` statement, which specifies the ID of the&#xA;new database.  The database ID must conform to the regular expression&#xA;`a-z*[a-z0-9]` and be between 2 and 30 characters in length.&#xA;If the database ID is a reserved word or if it contains a hyphen, the&#xA;database ID must be enclosed in backticks (`` ` ``)." type="//@types.12"/>
    <attributes name="extraStatements" required="true" description="An optional list of DDL statements to run inside the newly created&#xA;database. Statements can create tables, indexes, etc. These&#xA;statements execute atomically with the creation of the database:&#xA;if there is an error in any statement, the database is not created." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="CreateInstanceRequestInstanceLink" scheme="http://occi/gcpspanner#" title="Required. The instance to create.  The name may be omitted, but if&#xA;specified must be `&lt;parent>/instances/&lt;instance_id>`." source="//@kinds[term='createinstancerequest']" target="//@kinds[term='instance']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="CreateInstanceRequest" scheme="http://occi/gcpspanner#" title="The request for CreateInstance.">
    <attributes name="instanceId" required="true" description="Required. The ID of the instance to create.  Valid identifiers are of the&#xA;form `a-z*[a-z0-9]` and must be between 6 and 30 characters in&#xA;length." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ReadOnly" scheme="http://occi/gcpspanner#" title="Message type to initiate a read-only transaction.">
    <attributes name="strong" required="true" description="Read at a timestamp where all previously committed transactions&#xA;are visible." type="//@types.6"/>
    <attributes name="minReadTimestamp" required="true" description="Executes all reads at a timestamp >= `min_read_timestamp`.&#xA;&#xA;This is useful for requesting fresher data than some previous&#xA;read, or data that is fresh enough to observe the effects of some&#xA;previously committed transaction whose timestamp is known.&#xA;&#xA;Note that this option can only be used in single-use transactions." type="//@types.12"/>
    <attributes name="maxStaleness" required="true" description="Read data at a timestamp >= `NOW - max_staleness`&#xA;seconds. Guarantees that all writes that have committed more&#xA;than the specified number of seconds ago are visible. Because&#xA;Cloud Spanner chooses the exact timestamp, this mode works even if&#xA;the client's local clock is substantially skewed from Cloud Spanner&#xA;commit timestamps.&#xA;&#xA;Useful for reading the freshest data available at a nearby&#xA;replica, while bounding the possible staleness if the local&#xA;replica has fallen behind.&#xA;&#xA;Note that this option can only be used in single-use&#xA;transactions." type="//@types.12"/>
    <attributes name="readTimestamp" required="true" description="Executes all reads at the given timestamp. Unlike other modes,&#xA;reads at a specific timestamp are repeatable; the same read at&#xA;the same timestamp always returns the same data. If the&#xA;timestamp is in the future, the read will block until the&#xA;specified timestamp, modulo the read's deadline.&#xA;&#xA;Useful for large scale consistent reads such as mapreduces, or&#xA;for coordinating many reads against a consistent snapshot of the&#xA;data." type="//@types.12"/>
    <attributes name="returnReadTimestamp" required="true" description="If true, the Cloud Spanner-selected read timestamp is included in&#xA;the Transaction message that describes the transaction." type="//@types.6"/>
    <attributes name="exactStaleness" required="true" description="Executes all reads at a timestamp that is `exact_staleness`&#xA;old. The timestamp is chosen soon after the read is started.&#xA;&#xA;Guarantees that all writes that have committed more than the&#xA;specified number of seconds ago are visible. Because Cloud Spanner&#xA;chooses the exact timestamp, this mode works even if the client's&#xA;local clock is substantially skewed from Cloud Spanner commit&#xA;timestamps.&#xA;&#xA;Useful for reading at nearby replicas without the distributed&#xA;timestamp negotiation overhead of `max_staleness`." type="//@types.12"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TransactionSelectorLink" scheme="http://occi/gcpspanner#" title="The transaction to use. If none is provided, the default is a&#xA;temporary read-only transaction with strong concurrency." source="//@kinds[term='executesqlrequest']" target="//@kinds[term='transactionselector']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ExecuteSqlRequest" scheme="http://occi/gcpspanner#" title="The request for ExecuteSql and&#xA;ExecuteStreamingSql.">
    <attributes name="sql" required="true" description="Required. The SQL query string." type="//@types.12"/>
    <attributes name="params" required="true" description="The SQL query string can contain parameter placeholders. A parameter&#xA;placeholder consists of `'@'` followed by the parameter&#xA;name. Parameter names consist of any combination of letters,&#xA;numbers, and underscores.&#xA;&#xA;Parameters can appear anywhere that a literal value is expected.  The same&#xA;parameter name can be used more than once, for example:&#xA;  `&quot;WHERE id > @msg_id AND id &lt; @msg_id + 100&quot;`&#xA;&#xA;It is an error to execute an SQL query with unbound parameters.&#xA;&#xA;Parameter values are specified using `params`, which is a JSON&#xA;object whose keys are parameter names, and whose values are the&#xA;corresponding parameter values." type="//@types.9"/>
    <attributes name="queryMode" required="true" description="Used to control the amount of debugging information returned in&#xA;ResultSetStats." type="//@types.13"/>
    <attributes name="resumeToken" required="true" description="If this request is resuming a previously interrupted SQL query&#xA;execution, `resume_token` should be copied from the last&#xA;PartialResultSet yielded before the interruption. Doing this&#xA;enables the new SQL query execution to resume where the last one left&#xA;off. The rest of the request parameters must exactly match the&#xA;request that yielded this token." type="//@types.13"/>
    <attributes name="paramTypes" required="true" description="It is not always possible for Cloud Spanner to infer the right SQL type&#xA;from a JSON value.  For example, values of type `BYTES` and values&#xA;of type `STRING` both appear in params as JSON strings.&#xA;&#xA;In these cases, `param_types` can be used to specify the exact&#xA;SQL type for some or all of the SQL query parameters. See the&#xA;definition of Type for more information&#xA;about SQL types." type="//@types.10"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Policy" scheme="http://occi/gcpspanner#" title="Defines an Identity and Access Management (IAM) policy. It is used to&#xA;specify access control policies for Cloud Platform resources.&#xA;&#xA;&#xA;A `Policy` consists of a list of `bindings`. A `Binding` binds a list of&#xA;`members` to a `role`, where the members can be user accounts, Google groups,&#xA;Google domains, and service accounts. A `role` is a named list of permissions&#xA;defined by IAM.&#xA;&#xA;**Example**&#xA;&#xA;    {&#xA;      &quot;bindings&quot;: [&#xA;        {&#xA;          &quot;role&quot;: &quot;roles/owner&quot;,&#xA;          &quot;members&quot;: [&#xA;            &quot;user:mike@example.com&quot;,&#xA;            &quot;group:admins@example.com&quot;,&#xA;            &quot;domain:google.com&quot;,&#xA;            &quot;serviceAccount:my-other-app@appspot.gserviceaccount.com&quot;,&#xA;          ]&#xA;        },&#xA;        {&#xA;          &quot;role&quot;: &quot;roles/viewer&quot;,&#xA;          &quot;members&quot;: [&quot;user:sean@example.com&quot;]&#xA;        }&#xA;      ]&#xA;    }&#xA;&#xA;For a description of IAM and its features, see the&#xA;[IAM developer's guide](https://cloud.google.com/iam).">
    <attributes name="etag" required="true" description="`etag` is used for optimistic concurrency control as a way to help&#xA;prevent simultaneous updates of a policy from overwriting each other.&#xA;It is strongly suggested that systems make use of the `etag` in the&#xA;read-modify-write cycle to perform policy updates in order to avoid race&#xA;conditions: An `etag` is returned in the response to `getIamPolicy`, and&#xA;systems are expected to put that etag in the request to `setIamPolicy` to&#xA;ensure that their change will be applied to the same version of the policy.&#xA;&#xA;If no `etag` is provided in the call to `setIamPolicy`, then the existing&#xA;policy is overwritten blindly." type="//@types.13"/>
    <attributes name="version" required="true" description="Version of the `Policy`. The default version is 0." type="//@types.3"/>
    <attributes name="bindings" required="true" description="Associates a list of `members` to a `role`.&#xA;`bindings` with no members will result in an error." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ReadRequestKeySetLink" scheme="http://occi/gcpspanner#" title="Required. `key_set` identifies the rows to be yielded. `key_set` names the&#xA;primary keys of the rows in table to be yielded, unless index&#xA;is present. If index is present, then key_set instead names&#xA;index keys in index.&#xA;&#xA;Rows are yielded in table primary key order (if index is empty)&#xA;or index key order (if index is non-empty).&#xA;&#xA;It is not an error for the `key_set` to name rows that do not&#xA;exist in the database. Read yields nothing for nonexistent rows." source="//@kinds[term='readrequest']" target="//@kinds[term='keyset']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ReadRequestTransactionSelectorLink" scheme="http://occi/gcpspanner#" title="The transaction to use. If none is provided, the default is a&#xA;temporary read-only transaction with strong concurrency." source="//@kinds[term='readrequest']" target="//@kinds[term='transactionselector']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ReadRequest" scheme="http://occi/gcpspanner#" title="The request for Read and&#xA;StreamingRead.">
    <attributes name="columns" required="true" description="The columns of table to be returned for each row matching&#xA;this request." type="//@types.7"/>
    <attributes name="resumeToken" required="true" description="If this request is resuming a previously interrupted read,&#xA;`resume_token` should be copied from the last&#xA;PartialResultSet yielded before the interruption. Doing this&#xA;enables the new read to resume where the last read left off. The&#xA;rest of the request parameters must exactly match the request&#xA;that yielded this token." type="//@types.13"/>
    <attributes name="table" required="true" description="Required. The name of the table in the database to be read." type="//@types.13"/>
    <attributes name="limit" required="true" description="If greater than zero, only the first `limit` rows are yielded. If `limit`&#xA;is zero, the default is no limit.&#xA;A limit cannot be specified if partition_token is set." type="//@types.13"/>
    <attributes name="index" required="true" description="If non-empty, the name of an index on table. This index is&#xA;used instead of the table primary key when interpreting key_set&#xA;and sorting result rows. See key_set for further information." type="//@types.13"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Write" scheme="http://occi/gcpspanner#" title="Arguments to insert, update, insert_or_update, and&#xA;replace operations.">
    <attributes name="table" required="true" description="Required. The table whose rows will be written." type="//@types.13"/>
    <attributes name="columns" required="true" description="The names of the columns in table to be written.&#xA;&#xA;The list of columns must contain enough columns to allow&#xA;Cloud Spanner to derive values for all primary key columns in the&#xA;row(s) to be modified." type="//@types.7"/>
    <attributes name="values" required="true" description="The values to be written. `values` can contain more than one&#xA;list of values. If it does, then multiple rows are written, one&#xA;for each entry in `values`. Each list in `values` must have&#xA;exactly as many entries as there are entries in columns&#xA;above. Sending multiple lists is equivalent to sending multiple&#xA;`Mutation`s, each containing one `values` entry and repeating&#xA;table and columns. Individual values in each list are&#xA;encoded as described here." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ReadWrite" scheme="http://occi/gcpspanner#" title="Message type to initiate a read-write transaction. Currently this&#xA;transaction type has no options.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="StatusLink" scheme="http://occi/gcpspanner#" title="The error result of the operation in case of failure or cancellation." source="//@kinds[term='operation']" target="//@kinds[term='status']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="Operation" scheme="http://occi/gcpspanner#" title="This resource represents a long-running operation that is the result of a&#xA;network API call.">
    <attributes name="done" required="true" description="If the value is `false`, it means the operation is still in progress.&#xA;If `true`, the operation is completed, and either `error` or `response` is&#xA;available." type="//@types.6"/>
    <attributes name="response" required="true" description="The normal response of the operation in case of success.  If the original&#xA;method returns no data on success, such as `Delete`, the response is&#xA;`google.protobuf.Empty`.  If the original method is standard&#xA;`Get`/`Create`/`Update`, the response should be the resource.  For other&#xA;methods, the response should have the type `XxxResponse`, where `Xxx`&#xA;is the original method name.  For example, if the original method name&#xA;is `TakeSnapshot()`, the inferred response type is&#xA;`TakeSnapshotResponse`." type="//@types.9"/>
    <attributes name="name" required="true" description="The server-assigned name, which is only unique within the same service that&#xA;originally returns it. If you use the default HTTP mapping, the&#xA;`name` should have the format of `operations/some/unique/name`." type="//@types.13"/>
    <attributes name="metadata" required="true" description="Service-specific metadata associated with the operation.  It typically&#xA;contains progress information and common metadata such as create time.&#xA;Some services might not provide such metadata.  Any method that returns a&#xA;long-running operation should document the metadata type, if any." type="//@types.9"/>
    <actions name="cancel" scheme="http://occi/gcpspanner/operation/action#" title="Starts asynchronous cancellation on a long-running operation.  The server&#xA;makes a best effort to cancel the operation, but success is not&#xA;guaranteed.  If the server doesn't support this method, it returns&#xA;`google.rpc.Code.UNIMPLEMENTED`.  Clients can use&#xA;Operations.GetOperation or&#xA;other methods to check whether the cancellation succeeded or whether the&#xA;operation completed despite cancellation. On successful cancellation,&#xA;the operation is not deleted; instead, it becomes an operation with&#xA;an Operation.error value with a google.rpc.Status.code of 1,&#xA;corresponding to `Code.CANCELLED`.">
      <attributes name="name" required="true" description="The name of the operation resource to be cancelled." type="//@types.13"/>
    </actions>
    <actions name="delete" scheme="http://occi/gcpspanner/operation/action#" title="Deletes a long-running operation. This method indicates that the client is&#xA;no longer interested in the operation result. It does not cancel the&#xA;operation. If the server doesn't support this method, it returns&#xA;`google.rpc.Code.UNIMPLEMENTED`.">
      <attributes name="name" required="true" description="The name of the operation resource to be deleted." type="//@types.13"/>
    </actions>
    <actions name="list" scheme="http://occi/gcpspanner/operation/action#" title="Lists operations that match the specified filter in the request. If the&#xA;server doesn't support this method, it returns `UNIMPLEMENTED`.&#xA;&#xA;NOTE: the `name` binding allows API services to override the binding&#xA;to use different resource name schemes, such as `users/*/operations`. To&#xA;override the binding, API services can add a binding such as&#xA;`&quot;/v1/{name=users/*}/operations&quot;` to their service configuration.&#xA;For backwards compatibility, the default name includes the operations&#xA;collection id, however overriding users must ensure the name binding&#xA;is the parent resource, without the operations collection id.">
      <attributes name="name" required="true" description="The name of the operation's parent resource." type="//@types.13"/>
      <attributes name="pageToken" required="true" description="The standard list page token." type="//@types.13"/>
      <attributes name="pageSize" required="true" description="The standard list page size." type="//@types.3"/>
      <attributes name="filter" required="true" description="The standard list filter." type="//@types.13"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/operation/action#" title="Gets the latest state of a long-running operation.  Clients can use this&#xA;method to poll the operation result at intervals as recommended by the API&#xA;service.">
      <attributes name="name" required="true" description="The name of the operation resource." type="//@types.13"/>
    </actions>
    <actions name="cancel" scheme="http://occi/gcpspanner/operation/action#" title="Starts asynchronous cancellation on a long-running operation.  The server&#xA;makes a best effort to cancel the operation, but success is not&#xA;guaranteed.  If the server doesn't support this method, it returns&#xA;`google.rpc.Code.UNIMPLEMENTED`.  Clients can use&#xA;Operations.GetOperation or&#xA;other methods to check whether the cancellation succeeded or whether the&#xA;operation completed despite cancellation. On successful cancellation,&#xA;the operation is not deleted; instead, it becomes an operation with&#xA;an Operation.error value with a google.rpc.Status.code of 1,&#xA;corresponding to `Code.CANCELLED`.">
      <attributes name="name" required="true" description="The name of the operation resource to be cancelled." type="//@types.13"/>
    </actions>
    <actions name="delete" scheme="http://occi/gcpspanner/operation/action#" title="Deletes a long-running operation. This method indicates that the client is&#xA;no longer interested in the operation result. It does not cancel the&#xA;operation. If the server doesn't support this method, it returns&#xA;`google.rpc.Code.UNIMPLEMENTED`.">
      <attributes name="name" required="true" description="The name of the operation resource to be deleted." type="//@types.13"/>
    </actions>
    <actions name="list" scheme="http://occi/gcpspanner/operation/action#" title="Lists operations that match the specified filter in the request. If the&#xA;server doesn't support this method, it returns `UNIMPLEMENTED`.&#xA;&#xA;NOTE: the `name` binding allows API services to override the binding&#xA;to use different resource name schemes, such as `users/*/operations`. To&#xA;override the binding, API services can add a binding such as&#xA;`&quot;/v1/{name=users/*}/operations&quot;` to their service configuration.&#xA;For backwards compatibility, the default name includes the operations&#xA;collection id, however overriding users must ensure the name binding&#xA;is the parent resource, without the operations collection id.">
      <attributes name="name" required="true" description="The name of the operation's parent resource." type="//@types.13"/>
      <attributes name="pageToken" required="true" description="The standard list page token." type="//@types.13"/>
      <attributes name="pageSize" required="true" description="The standard list page size." type="//@types.3"/>
      <attributes name="filter" required="true" description="The standard list filter." type="//@types.13"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/operation/action#" title="Gets the latest state of a long-running operation.  Clients can use this&#xA;method to poll the operation result at intervals as recommended by the API&#xA;service.">
      <attributes name="name" required="true" description="The name of the operation resource." type="//@types.13"/>
    </actions>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ResultSetMetadataLink" scheme="http://occi/gcpspanner#" title="Metadata about the result set, such as row type information." source="//@kinds[term='resultset']" target="//@kinds[term='resultsetmetadata']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ResultSetStatsLink" scheme="http://occi/gcpspanner#" title="Query plan and execution statistics for the query that produced this&#xA;result set. These can be requested by setting&#xA;ExecuteSqlRequest.query_mode." source="//@kinds[term='resultset']" target="//@kinds[term='resultsetstats']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ResultSet" scheme="http://occi/gcpspanner#" title="Results from Read or&#xA;ExecuteSql.">
    <attributes name="rows" required="true" description="Each element in `rows` is a row whose format is defined by&#xA;metadata.row_type. The ith element&#xA;in each row matches the ith field in&#xA;metadata.row_type. Elements are&#xA;encoded based on type as described&#xA;here." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Status" scheme="http://occi/gcpspanner#" title="The `Status` type defines a logical error model that is suitable for different&#xA;programming environments, including REST APIs and RPC APIs. It is used by&#xA;[gRPC](https://github.com/grpc). The error model is designed to be:&#xA;&#xA;- Simple to use and understand for most users&#xA;- Flexible enough to meet unexpected needs&#xA;&#xA;# Overview&#xA;&#xA;The `Status` message contains three pieces of data: error code, error message,&#xA;and error details. The error code should be an enum value of&#xA;google.rpc.Code, but it may accept additional error codes if needed.  The&#xA;error message should be a developer-facing English message that helps&#xA;developers *understand* and *resolve* the error. If a localized user-facing&#xA;error message is needed, put the localized message in the error details or&#xA;localize it in the client. The optional error details may contain arbitrary&#xA;information about the error. There is a predefined set of error detail types&#xA;in the package `google.rpc` that can be used for common error conditions.&#xA;&#xA;# Language mapping&#xA;&#xA;The `Status` message is the logical representation of the error model, but it&#xA;is not necessarily the actual wire format. When the `Status` message is&#xA;exposed in different client libraries and different wire protocols, it can be&#xA;mapped differently. For example, it will likely be mapped to some exceptions&#xA;in Java, but more likely mapped to some error codes in C.&#xA;&#xA;# Other uses&#xA;&#xA;The error model and the `Status` message can be used in a variety of&#xA;environments, either with or without APIs, to provide a&#xA;consistent developer experience across different environments.&#xA;&#xA;Example uses of this error model include:&#xA;&#xA;- Partial errors. If a service needs to return partial errors to the client,&#xA;    it may embed the `Status` in the normal response to indicate the partial&#xA;    errors.&#xA;&#xA;- Workflow errors. A typical workflow has multiple steps. Each step may&#xA;    have a `Status` message for error reporting.&#xA;&#xA;- Batch operations. If a client uses batch request and batch response, the&#xA;    `Status` message should be used directly inside batch response, one for&#xA;    each error sub-response.&#xA;&#xA;- Asynchronous operations. If an API call embeds asynchronous operation&#xA;    results in its response, the status of those operations should be&#xA;    represented directly using the `Status` message.&#xA;&#xA;- Logging. If some API errors are stored in logs, the message `Status` could&#xA;    be used directly after any stripping needed for security/privacy reasons.">
    <attributes name="code" required="true" description="The status code, which should be an enum value of google.rpc.Code." type="//@types.3"/>
    <attributes name="message" required="true" description="A developer-facing error message, which should be in English. Any&#xA;user-facing error message should be localized and sent in the&#xA;google.rpc.Status.details field, or localized by the client." type="//@types.13"/>
    <attributes name="details" required="true" description="A list of messages that carry the error details.  There is a common set of&#xA;message types for APIs to use." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="SessionLink" scheme="http://occi/gcpspanner#" title="The session to create." source="//@kinds[term='createsessionrequest']" target="//@kinds[term='session']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="CreateSessionRequest" scheme="http://occi/gcpspanner#" title="The request for CreateSession.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Binding" scheme="http://occi/gcpspanner#" title="Associates `members` with a `role`.">
    <attributes name="members" required="true" description="Specifies the identities requesting access for a Cloud Platform resource.&#xA;`members` can have the following values:&#xA;&#xA;* `allUsers`: A special identifier that represents anyone who is&#xA;   on the internet; with or without a Google account.&#xA;&#xA;* `allAuthenticatedUsers`: A special identifier that represents anyone&#xA;   who is authenticated with a Google account or a service account.&#xA;&#xA;* `user:{emailid}`: An email address that represents a specific Google&#xA;   account. For example, `alice@gmail.com` or `joe@example.com`.&#xA;&#xA;&#xA;* `serviceAccount:{emailid}`: An email address that represents a service&#xA;   account. For example, `my-other-app@appspot.gserviceaccount.com`.&#xA;&#xA;* `group:{emailid}`: An email address that represents a Google group.&#xA;   For example, `admins@example.com`.&#xA;&#xA;&#xA;* `domain:{domain}`: A Google Apps domain name that represents all the&#xA;   users of that domain. For example, `google.com` or `example.com`.&#xA;&#xA;" type="//@types.7"/>
    <attributes name="role" required="true" description="Role that is assigned to `members`.&#xA;For example, `roles/viewer`, `roles/editor`, or `roles/owner`.&#xA;Required" type="//@types.13"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="UpdateDatabaseDdlRequest" scheme="http://occi/gcpspanner#" title="Enqueues the given DDL statements to be applied, in order but not&#xA;necessarily all at once, to the database schema at some point (or&#xA;points) in the future. The server checks that the statements&#xA;are executable (syntactically valid, name tables that exist, etc.)&#xA;before enqueueing them, but they may still fail upon&#xA;later execution (e.g., if a statement from another batch of&#xA;statements is applied first and it conflicts in some way, or if&#xA;there is some data-related problem like a `NULL` value in a column to&#xA;which `NOT NULL` would be added). If a statement fails, all&#xA;subsequent statements in the batch are automatically cancelled.&#xA;&#xA;Each batch of statements is assigned a name which can be used with&#xA;the Operations API to monitor&#xA;progress. See the&#xA;operation_id field for more&#xA;details.">
    <attributes name="statements" required="true" description="DDL statements to be applied to the database." type="//@types.7"/>
    <attributes name="operationId" required="true" description="If empty, the new update request is assigned an&#xA;automatically-generated operation ID. Otherwise, `operation_id`&#xA;is used to construct the name of the resulting&#xA;Operation.&#xA;&#xA;Specifying an explicit operation ID simplifies determining&#xA;whether the statements were executed in the event that the&#xA;UpdateDatabaseDdl call is replayed,&#xA;or the return value is otherwise lost: the database and&#xA;`operation_id` fields can be combined to form the&#xA;name of the resulting&#xA;longrunning.Operation: `&lt;database>/operations/&lt;operation_id>`.&#xA;&#xA;`operation_id` should be unique within the database, and must be&#xA;a valid identifier: `a-z*`. Note that&#xA;automatically-generated operation IDs always begin with an&#xA;underscore. If the named operation already exists,&#xA;UpdateDatabaseDdl returns&#xA;`ALREADY_EXISTS`." type="//@types.13"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="PartialResultSetResultSetStatsLink" scheme="http://occi/gcpspanner#" title="Query plan and execution statistics for the query that produced this&#xA;streaming result set. These can be requested by setting&#xA;ExecuteSqlRequest.query_mode and are sent&#xA;only once with the last response in the stream." source="//@kinds[term='partialresultset']" target="//@kinds[term='resultsetstats']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="PartialResultSetResultSetMetadataLink" scheme="http://occi/gcpspanner#" title="Metadata about the result set, such as row type information.&#xA;Only present in the first response." source="//@kinds[term='partialresultset']" target="//@kinds[term='resultsetmetadata']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="PartialResultSet" scheme="http://occi/gcpspanner#" title="Partial results from a streaming read or SQL query. Streaming reads and&#xA;SQL queries better tolerate large result sets, large rows, and large&#xA;values, but are a little trickier to consume.">
    <attributes name="chunkedValue" required="true" description="If true, then the final value in values is chunked, and must&#xA;be combined with more values from subsequent `PartialResultSet`s&#xA;to obtain a complete field value." type="//@types.6"/>
    <attributes name="values" required="true" description="A streamed result set consists of a stream of values, which might&#xA;be split into many `PartialResultSet` messages to accommodate&#xA;large rows and/or large values. Every N complete values defines a&#xA;row, where N is equal to the number of entries in&#xA;metadata.row_type.fields.&#xA;&#xA;Most values are encoded based on type as described&#xA;here.&#xA;&#xA;It is possible that the last value in values is &quot;chunked&quot;,&#xA;meaning that the rest of the value is sent in subsequent&#xA;`PartialResultSet`(s). This is denoted by the chunked_value&#xA;field. Two or more chunked values can be merged to form a&#xA;complete value as follows:&#xA;&#xA;  * `bool/number/null`: cannot be chunked&#xA;  * `string`: concatenate the strings&#xA;  * `list`: concatenate the lists. If the last element in a list is a&#xA;    `string`, `list`, or `object`, merge it with the first element in&#xA;    the next list by applying these rules recursively.&#xA;  * `object`: concatenate the (field name, field value) pairs. If a&#xA;    field name is duplicated, then apply these rules recursively&#xA;    to merge the field values.&#xA;&#xA;Some examples of merging:&#xA;&#xA;    # Strings are concatenated.&#xA;    &quot;foo&quot;, &quot;bar&quot; => &quot;foobar&quot;&#xA;&#xA;    # Lists of non-strings are concatenated.&#xA;    [2, 3], [4] => [2, 3, 4]&#xA;&#xA;    # Lists are concatenated, but the last and first elements are merged&#xA;    # because they are strings.&#xA;    [&quot;a&quot;, &quot;b&quot;], [&quot;c&quot;, &quot;d&quot;] => [&quot;a&quot;, &quot;bc&quot;, &quot;d&quot;]&#xA;&#xA;    # Lists are concatenated, but the last and first elements are merged&#xA;    # because they are lists. Recursively, the last and first elements&#xA;    # of the inner lists are merged because they are strings.&#xA;    [&quot;a&quot;, [&quot;b&quot;, &quot;c&quot;]], [[&quot;d&quot;], &quot;e&quot;] => [&quot;a&quot;, [&quot;b&quot;, &quot;cd&quot;], &quot;e&quot;]&#xA;&#xA;    # Non-overlapping object fields are combined.&#xA;    {&quot;a&quot;: &quot;1&quot;}, {&quot;b&quot;: &quot;2&quot;} => {&quot;a&quot;: &quot;1&quot;, &quot;b&quot;: 2&quot;}&#xA;&#xA;    # Overlapping object fields are merged.&#xA;    {&quot;a&quot;: &quot;1&quot;}, {&quot;a&quot;: &quot;2&quot;} => {&quot;a&quot;: &quot;12&quot;}&#xA;&#xA;    # Examples of merging objects containing lists of strings.&#xA;    {&quot;a&quot;: [&quot;1&quot;]}, {&quot;a&quot;: [&quot;2&quot;]} => {&quot;a&quot;: [&quot;12&quot;]}&#xA;&#xA;For a more complete example, suppose a streaming SQL query is&#xA;yielding a result set whose rows contain a single string&#xA;field. The following `PartialResultSet`s might be yielded:&#xA;&#xA;    {&#xA;      &quot;metadata&quot;: { ... }&#xA;      &quot;values&quot;: [&quot;Hello&quot;, &quot;W&quot;]&#xA;      &quot;chunked_value&quot;: true&#xA;      &quot;resume_token&quot;: &quot;Af65...&quot;&#xA;    }&#xA;    {&#xA;      &quot;values&quot;: [&quot;orl&quot;]&#xA;      &quot;chunked_value&quot;: true&#xA;      &quot;resume_token&quot;: &quot;Bqp2...&quot;&#xA;    }&#xA;    {&#xA;      &quot;values&quot;: [&quot;d&quot;]&#xA;      &quot;resume_token&quot;: &quot;Zx1B...&quot;&#xA;    }&#xA;&#xA;This sequence of `PartialResultSet`s encodes two rows, one&#xA;containing the field value `&quot;Hello&quot;`, and a second containing the&#xA;field value `&quot;World&quot; = &quot;W&quot; + &quot;orl&quot; + &quot;d&quot;`." type="//@types.7"/>
    <attributes name="resumeToken" required="true" description="Streaming calls might be interrupted for a variety of reasons, such&#xA;as TCP connection loss. If this occurs, the stream of results can&#xA;be resumed by re-sending the original request and including&#xA;`resume_token`. Note that executing any other transaction in the&#xA;same session invalidates the token." type="//@types.13"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="UpdateInstanceMetadataInstanceLink" scheme="http://occi/gcpspanner#" title="The desired end state of the update." source="//@kinds[term='updateinstancemetadata']" target="//@kinds[term='instance']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="UpdateInstanceMetadata" scheme="http://occi/gcpspanner#" title="Metadata type for the operation returned by&#xA;UpdateInstance.">
    <attributes name="startTime" required="true" description="The time at which UpdateInstance&#xA;request was received." type="//@types.13"/>
    <attributes name="cancelTime" required="true" description="The time at which this operation was cancelled. If set, this operation is&#xA;in the process of undoing itself (which is guaranteed to succeed) and&#xA;cannot be cancelled again." type="//@types.13"/>
    <attributes name="endTime" required="true" description="The time at which this operation failed or was completed successfully." type="//@types.13"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ListOperationsResponse" scheme="http://occi/gcpspanner#" title="The response message for Operations.ListOperations.">
    <attributes name="nextPageToken" required="true" description="The standard List next-page token." type="//@types.13"/>
    <attributes name="operations" required="true" description="A list of operations that matches the specified filter in the request." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TransactionLink" scheme="http://occi/gcpspanner#" title="If the read or SQL query began a transaction as a side-effect, the&#xA;information about the new transaction is yielded here." source="//@kinds[term='resultsetmetadata']" target="//@kinds[term='transaction']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ResultSetMetadataStructTypeLink" scheme="http://occi/gcpspanner#" title="Indicates the field names and types for the rows in the result&#xA;set.  For example, a SQL query like `&quot;SELECT UserId, UserName FROM&#xA;Users&quot;` could return a `row_type` value like:&#xA;&#xA;    &quot;fields&quot;: [&#xA;      { &quot;name&quot;: &quot;UserId&quot;, &quot;type&quot;: { &quot;code&quot;: &quot;INT64&quot; } },&#xA;      { &quot;name&quot;: &quot;UserName&quot;, &quot;type&quot;: { &quot;code&quot;: &quot;STRING&quot; } },&#xA;    ]" source="//@kinds[term='resultsetmetadata']" target="//@kinds[term='structtype']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="ResultSetMetadata" scheme="http://occi/gcpspanner#" title="Metadata about a ResultSet or PartialResultSet.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="TransactionSelectorTransactionOptionsLink" scheme="http://occi/gcpspanner#" title="Execute the read or SQL query in a temporary transaction.&#xA;This is the most efficient way to execute a transaction that&#xA;consists of a single SQL query." source="//@kinds[term='transactionselector']" target="//@kinds[term='transactionoptions']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="TransactionSelectorTransactionOptionsLink" scheme="http://occi/gcpspanner#" title="Begin a new transaction and execute this read or SQL query in&#xA;it. The transaction ID of the new transaction is returned in&#xA;ResultSetMetadata.transaction, which is a Transaction." source="//@kinds[term='transactionselector']" target="//@kinds[term='transactionoptions']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="TransactionSelector" scheme="http://occi/gcpspanner#" title="This message is used to select the transaction in which a&#xA;Read or&#xA;ExecuteSql call runs.&#xA;&#xA;See TransactionOptions for more information about transactions.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="KeySet" scheme="http://occi/gcpspanner#" title="`KeySet` defines a collection of Cloud Spanner keys and/or key ranges. All&#xA;the keys are expected to be in the same table or index. The keys need&#xA;not be sorted in any particular way.&#xA;&#xA;If the same key is specified multiple times in the set (for example&#xA;if two ranges, two keys, or a key and a range overlap), Cloud Spanner&#xA;behaves as if the key were only specified once.">
    <attributes name="ranges" required="true" description="A list of key ranges. See KeyRange for more information about&#xA;key range specifications." type="//@types.7"/>
    <attributes name="keys" required="true" description="A list of specific keys. Entries in `keys` should have exactly as&#xA;many elements as there are columns in the primary or index key&#xA;with which this `KeySet` is used.  Individual key values are&#xA;encoded as described here." type="//@types.7"/>
    <attributes name="all" required="true" description="For convenience `all` can be set to `true` to indicate that this&#xA;`KeySet` matches all keys in the table or index. Note that any keys&#xA;specified in `keys` or `ranges` are only yielded once." type="//@types.6"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="WriteLink" scheme="http://occi/gcpspanner#" title="Like insert, except that if the row already exists, it is&#xA;deleted, and the column values provided are inserted&#xA;instead. Unlike insert_or_update, this means any values not&#xA;explicitly written become `NULL`." source="//@kinds[term='mutation']" target="//@kinds[term='write']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="DeleteLink" scheme="http://occi/gcpspanner#" title="Delete rows from a table. Succeeds whether or not the named&#xA;rows were present." source="//@kinds[term='mutation']" target="//@kinds[term='delete']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="MutationWriteLink" scheme="http://occi/gcpspanner#" title="Insert new rows in a table. If any of the rows already exist,&#xA;the write or transaction fails with error `ALREADY_EXISTS`." source="//@kinds[term='mutation']" target="//@kinds[term='write']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="MutationWriteLink" scheme="http://occi/gcpspanner#" title="Like insert, except that if the row already exists, then&#xA;its column values are overwritten with the ones provided. Any&#xA;column values not explicitly written are preserved." source="//@kinds[term='mutation']" target="//@kinds[term='write']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="MutationWriteLink" scheme="http://occi/gcpspanner#" title="Update existing rows in a table. If any of the rows does not&#xA;already exist, the transaction fails with error `NOT_FOUND`." source="//@kinds[term='mutation']" target="//@kinds[term='write']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="Mutation" scheme="http://occi/gcpspanner#" title="A modification to one or more Cloud Spanner rows.  Mutations can be&#xA;applied to a Cloud Spanner database by sending them in a&#xA;Commit call.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="GetDatabaseDdlResponse" scheme="http://occi/gcpspanner#" title="The response for GetDatabaseDdl.">
    <attributes name="statements" required="true" description="A list of formatted DDL statements defining the schema of the database&#xA;specified in the request." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Database" scheme="http://occi/gcpspanner#" title="A Cloud Spanner database.">
    <attributes name="state" required="true" description="Output only. The current database state." type="//@types.14"/>
    <attributes name="name" required="true" description="Required. The name of the database. Values are of the form&#xA;`projects/&lt;project>/instances/&lt;instance>/databases/&lt;database>`,&#xA;where `&lt;database>` is as specified in the `CREATE DATABASE`&#xA;statement. This name can be passed to other API methods to&#xA;identify the database." type="//@types.14"/>
    <actions name="list" scheme="http://occi/gcpspanner/database/action#" title="Lists Cloud Spanner databases.">
      <attributes name="pageToken" required="true" description="If non-empty, `page_token` should contain a&#xA;next_page_token from a&#xA;previous ListDatabasesResponse." type="//@types.14"/>
      <attributes name="pageSize" required="true" description="Number of databases to be returned in the response. If 0 or less,&#xA;defaults to the server's maximum allowed page size." type="//@types.3"/>
      <attributes name="parent" required="true" description="Required. The instance whose databases should be listed.&#xA;Values are of the form `projects/&lt;project>/instances/&lt;instance>`." type="//@types.14"/>
    </actions>
    <actions name="setIamPolicy" scheme="http://occi/gcpspanner/database/action#" title="Sets the access control policy on a database resource. Replaces any&#xA;existing policy.&#xA;&#xA;Authorization requires `spanner.databases.setIamPolicy` permission on&#xA;resource.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for databases resources." type="//@types.14"/>
    </actions>
    <actions name="create" scheme="http://occi/gcpspanner/database/action#" title="Creates a new Cloud Spanner database and starts to prepare it for serving.&#xA;The returned long-running operation will&#xA;have a name of the format `&lt;database_name>/operations/&lt;operation_id>` and&#xA;can be used to track preparation of the database. The&#xA;metadata field type is&#xA;CreateDatabaseMetadata. The&#xA;response field type is&#xA;Database, if successful.">
      <attributes name="parent" required="true" description="Required. The name of the instance that will serve the new database.&#xA;Values are of the form `projects/&lt;project>/instances/&lt;instance>`." type="//@types.14"/>
    </actions>
    <actions name="getIamPolicy" scheme="http://occi/gcpspanner/database/action#" title="Gets the access control policy for a database resource. Returns an empty&#xA;policy if a database exists but does not have a policy set.&#xA;&#xA;Authorization requires `spanner.databases.getIamPolicy` permission on&#xA;resource.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for database resources." type="//@types.14"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/database/action#" title="Gets the state of a Cloud Spanner database.">
      <attributes name="name" required="true" description="Required. The name of the requested database. Values are of the form&#xA;`projects/&lt;project>/instances/&lt;instance>/databases/&lt;database>`." type="//@types.14"/>
    </actions>
    <actions name="dropDatabase" scheme="http://occi/gcpspanner/database/action#" title="Drops (aka deletes) a Cloud Spanner database.">
      <attributes name="database" required="true" description="Required. The database to be dropped." type="//@types.14"/>
    </actions>
    <actions name="updateDdl" scheme="http://occi/gcpspanner/database/action#" title="Updates the schema of a Cloud Spanner database by&#xA;creating/altering/dropping tables, columns, indexes, etc. The returned&#xA;long-running operation will have a name of&#xA;the format `&lt;database_name>/operations/&lt;operation_id>` and can be used to&#xA;track execution of the schema change(s). The&#xA;metadata field type is&#xA;UpdateDatabaseDdlMetadata.  The operation has no response.">
      <attributes name="database" required="true" description="Required. The database to update." type="//@types.14"/>
    </actions>
    <actions name="testIamPermissions" scheme="http://occi/gcpspanner/database/action#" title="Returns permissions that the caller has on the specified database resource.&#xA;&#xA;Attempting this RPC on a non-existent Cloud Spanner database will result in&#xA;a NOT_FOUND error if the user has `spanner.databases.list` permission on&#xA;the containing Cloud Spanner instance. Otherwise returns an empty set of&#xA;permissions.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for database resources." type="//@types.14"/>
    </actions>
    <actions name="getDdl" scheme="http://occi/gcpspanner/database/action#" title="Returns the schema of a Cloud Spanner database as a list of formatted&#xA;DDL statements. This method does not show pending schema updates, those may&#xA;be queried using the Operations API.">
      <attributes name="database" required="true" description="Required. The database whose schema we wish to get." type="//@types.14"/>
    </actions>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="Instance" scheme="http://occi/gcpspanner#" title="An isolated set of Cloud Spanner resources on which databases can be hosted.">
    <attributes name="displayName" required="true" description="Required. The descriptive name for this instance as it appears in UIs.&#xA;Must be unique per project and between 4 and 30 characters in length." type="//@types.14"/>
    <attributes name="nodeCount" required="true" description="Required. The number of nodes allocated to this instance. This may be zero&#xA;in API responses for instances that are not yet in state `READY`.&#xA;&#xA;Each Spanner node can provide up to 10,000 QPS of reads or 2000 QPS of&#xA;writes (writing single rows at 1KB data per row), and 2 TiB storage.&#xA;&#xA;For optimal performance, we recommend provisioning enough nodes to keep&#xA;overall CPU utilization under 75%.&#xA;&#xA;A minimum of 3 nodes is recommended for production environments.  This&#xA;minimum is required for SLAs to apply to your instance.&#xA;&#xA;Note that Cloud Spanner performance is highly dependent on workload, schema&#xA;design, and dataset characteristics. The performance numbers above are&#xA;estimates, and assume [best practices](https://cloud.google.com/spanner/docs/bulk-loading)&#xA;are followed." type="//@types.3"/>
    <attributes name="labels" required="true" description="Cloud Labels are a flexible and lightweight mechanism for organizing cloud&#xA;resources into groups that reflect a customer's organizational needs and&#xA;deployment strategies. Cloud Labels can be used to filter collections of&#xA;resources. They can be used to control how resource metrics are aggregated.&#xA;And they can be used as arguments to policy management rules (e.g. route,&#xA;firewall, load balancing, etc.).&#xA;&#xA; * Label keys must be between 1 and 63 characters long and must conform to&#xA;   the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`.&#xA; * Label values must be between 0 and 63 characters long and must conform&#xA;   to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`.&#xA; * No more than 64 labels can be associated with a given resource.&#xA;&#xA;See https://goo.gl/xmQnxf for more information on and examples of labels.&#xA;&#xA;If you plan to use labels in your own code, please note that additional&#xA;characters may be allowed in the future. And so you are advised to use an&#xA;internal label representation, such as JSON, which doesn't rely upon&#xA;specific characters being disallowed.  For example, representing labels&#xA;as the string:  name + &quot;_&quot; + value  would prove problematic if we were to&#xA;allow &quot;_&quot; in a future release." type="//@types.9"/>
    <attributes name="config" required="true" description="Required. The name of the instance's configuration. Values are of the form&#xA;`projects/&lt;project>/instanceConfigs/&lt;configuration>`. See&#xA;also InstanceConfig and&#xA;ListInstanceConfigs." type="//@types.14"/>
    <attributes name="state" required="true" description="Output only. The current instance state. For&#xA;CreateInstance, the state must be&#xA;either omitted or set to `CREATING`. For&#xA;UpdateInstance, the state must be&#xA;either omitted or set to `READY`." type="//@types.15"/>
    <attributes name="name" required="true" description="Required. A unique identifier for the instance, which cannot be changed&#xA;after the instance is created. Values are of the form&#xA;`projects/&lt;project>/instances/a-z*[a-z0-9]`. The final&#xA;segment of the name must be between 6 and 30 characters in length." type="//@types.15"/>
    <actions name="setIamPolicy" scheme="http://occi/gcpspanner/instance/action#" title="Sets the access control policy on an instance resource. Replaces any&#xA;existing policy.&#xA;&#xA;Authorization requires `spanner.instances.setIamPolicy` on&#xA;resource.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which the policy is being set. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for databases resources." type="//@types.15"/>
    </actions>
    <actions name="create" scheme="http://occi/gcpspanner/instance/action#" title="Creates an instance and begins preparing it to begin serving. The&#xA;returned long-running operation&#xA;can be used to track the progress of preparing the new&#xA;instance. The instance name is assigned by the caller. If the&#xA;named instance already exists, `CreateInstance` returns&#xA;`ALREADY_EXISTS`.&#xA;&#xA;Immediately upon completion of this request:&#xA;&#xA;  * The instance is readable via the API, with all requested attributes&#xA;    but no allocated resources. Its state is `CREATING`.&#xA;&#xA;Until completion of the returned operation:&#xA;&#xA;  * Cancelling the operation renders the instance immediately unreadable&#xA;    via the API.&#xA;  * The instance can be deleted.&#xA;  * All other attempts to modify the instance are rejected.&#xA;&#xA;Upon completion of the returned operation:&#xA;&#xA;  * Billing for all successfully-allocated resources begins (some types&#xA;    may have lower than the requested levels).&#xA;  * Databases can be created in the instance.&#xA;  * The instance's allocated resource levels are readable via the API.&#xA;  * The instance's state becomes `READY`.&#xA;&#xA;The returned long-running operation will&#xA;have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and&#xA;can be used to track creation of the instance.  The&#xA;metadata field type is&#xA;CreateInstanceMetadata.&#xA;The response field type is&#xA;Instance, if successful.">
      <attributes name="parent" required="true" description="Required. The name of the project in which to create the instance. Values&#xA;are of the form `projects/&lt;project>`." type="//@types.15"/>
    </actions>
    <actions name="getIamPolicy" scheme="http://occi/gcpspanner/instance/action#" title="Gets the access control policy for an instance resource. Returns an empty&#xA;policy if an instance exists but does not have a policy set.&#xA;&#xA;Authorization requires `spanner.instances.getIamPolicy` on&#xA;resource.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which the policy is being retrieved. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for database resources." type="//@types.15"/>
    </actions>
    <actions name="get" scheme="http://occi/gcpspanner/instance/action#" title="Gets information about a particular instance.">
      <attributes name="name" required="true" description="Required. The name of the requested instance. Values are of the form&#xA;`projects/&lt;project>/instances/&lt;instance>`." type="//@types.15"/>
    </actions>
    <actions name="patch" scheme="http://occi/gcpspanner/instance/action#" title="Updates an instance, and begins allocating or releasing resources&#xA;as requested. The returned long-running&#xA;operation can be used to track the&#xA;progress of updating the instance. If the named instance does not&#xA;exist, returns `NOT_FOUND`.&#xA;&#xA;Immediately upon completion of this request:&#xA;&#xA;  * For resource types for which a decrease in the instance's allocation&#xA;    has been requested, billing is based on the newly-requested level.&#xA;&#xA;Until completion of the returned operation:&#xA;&#xA;  * Cancelling the operation sets its metadata's&#xA;    cancel_time, and begins&#xA;    restoring resources to their pre-request values. The operation&#xA;    is guaranteed to succeed at undoing all resource changes,&#xA;    after which point it terminates with a `CANCELLED` status.&#xA;  * All other attempts to modify the instance are rejected.&#xA;  * Reading the instance via the API continues to give the pre-request&#xA;    resource levels.&#xA;&#xA;Upon completion of the returned operation:&#xA;&#xA;  * Billing begins for all successfully-allocated resources (some types&#xA;    may have lower than the requested levels).&#xA;  * All newly-reserved resources are available for serving the instance's&#xA;    tables.&#xA;  * The instance's new resource levels are readable via the API.&#xA;&#xA;The returned long-running operation will&#xA;have a name of the format `&lt;instance_name>/operations/&lt;operation_id>` and&#xA;can be used to track the instance modification.  The&#xA;metadata field type is&#xA;UpdateInstanceMetadata.&#xA;The response field type is&#xA;Instance, if successful.&#xA;&#xA;Authorization requires `spanner.instances.update` permission on&#xA;resource name.">
      <attributes name="name" required="true" description="Required. A unique identifier for the instance, which cannot be changed&#xA;after the instance is created. Values are of the form&#xA;`projects/&lt;project>/instances/a-z*[a-z0-9]`. The final&#xA;segment of the name must be between 6 and 30 characters in length." type="//@types.15"/>
    </actions>
    <actions name="testIamPermissions" scheme="http://occi/gcpspanner/instance/action#" title="Returns permissions that the caller has on the specified instance resource.&#xA;&#xA;Attempting this RPC on a non-existent Cloud Spanner instance resource will&#xA;result in a NOT_FOUND error if the user has `spanner.instances.list`&#xA;permission on the containing Google Cloud Project. Otherwise returns an&#xA;empty set of permissions.">
      <attributes name="resource" required="true" description="REQUIRED: The Cloud Spanner resource for which permissions are being tested. The format is `projects/&lt;project ID>/instances/&lt;instance ID>` for instance resources and `projects/&lt;project ID>/instances/&lt;instance ID>/databases/&lt;database ID>` for database resources." type="//@types.15"/>
    </actions>
    <actions name="delete" scheme="http://occi/gcpspanner/instance/action#" title="Deletes an instance.&#xA;&#xA;Immediately upon completion of the request:&#xA;&#xA;  * Billing ceases for all of the instance's reserved resources.&#xA;&#xA;Soon afterward:&#xA;&#xA;  * The instance and *all of its databases* immediately and&#xA;    irrevocably disappear from the API. All data in the databases&#xA;    is permanently deleted.">
      <attributes name="name" required="true" description="Required. The name of the instance to be deleted. Values are of the form&#xA;`projects/&lt;project>/instances/&lt;instance>`" type="//@types.15"/>
    </actions>
    <actions name="list" scheme="http://occi/gcpspanner/instance/action#" title="Lists all instances in the given project.">
      <attributes name="pageToken" required="true" description="If non-empty, `page_token` should contain a&#xA;next_page_token from a&#xA;previous ListInstancesResponse." type="//@types.15"/>
      <attributes name="pageSize" required="true" description="Number of instances to be returned in the response. If 0 or less, defaults&#xA;to the server's maximum allowed page size." type="//@types.3"/>
      <attributes name="parent" required="true" description="Required. The name of the project for which a list of instances is&#xA;requested. Values are of the form `projects/&lt;project>`." type="//@types.15"/>
      <attributes name="filter" required="true" description="An expression for filtering the results of the request. Filter rules are&#xA;case insensitive. The fields eligible for filtering are:&#xA;&#xA;  * name&#xA;  * display_name&#xA;  * labels.key where key is the name of a label&#xA;&#xA;Some examples of using filters are:&#xA;&#xA;  * name:* --> The instance has a name.&#xA;  * name:Howl --> The instance's name contains the string &quot;howl&quot;.&#xA;  * name:HOWL --> Equivalent to above.&#xA;  * NAME:howl --> Equivalent to above.&#xA;  * labels.env:* --> The instance has the label &quot;env&quot;.&#xA;  * labels.env:dev --> The instance has the label &quot;env&quot; and the value of&#xA;                       the label contains the string &quot;dev&quot;.&#xA;  * name:howl labels.env:dev --> The instance's name contains &quot;howl&quot; and&#xA;                                 it has the label &quot;env&quot; with its value&#xA;                                 containing &quot;dev&quot;." type="//@types.15"/>
    </actions>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="ListDatabasesResponse" scheme="http://occi/gcpspanner#" title="The response for ListDatabases.">
    <attributes name="nextPageToken" required="true" description="`next_page_token` can be sent in a subsequent&#xA;ListDatabases call to fetch more&#xA;of the matching databases." type="//@types.15"/>
    <attributes name="databases" required="true" description="Databases that matched the request." type="//@types.7"/>
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <kinds name="PolicyLink" scheme="http://occi/gcpspanner#" title="REQUIRED: The complete policy to be applied to the `resource`. The size of&#xA;the policy is limited to a few 10s of KB. An empty policy is a&#xA;valid policy but certain Cloud Platform services (such as Projects)&#xA;might reject them." source="//@kinds[term='setiampolicyrequest']" target="//@kinds[term='policy']">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='link']"/>
  </kinds>
  <kinds name="SetIamPolicyRequest" scheme="http://occi/gcpspanner#" title="Request message for `SetIamPolicy` method.">
    <parent href="http://schemas.ogf.org/occi/core#//@kinds[term='resource']"/>
  </kinds>
  <types xsi:type="occi:StringType" name="string"/>
  <types xsi:type="occi:NumericType" name="byte"/>
  <types xsi:type="occi:NumericType" name="double" type="Double"/>
  <types xsi:type="occi:NumericType" name="integer" type="Integer"/>
  <types xsi:type="occi:NumericType" name="float" type="Float"/>
  <types xsi:type="occi:NumericType" name="long" type="Long"/>
  <types xsi:type="occi:BooleanType" name="boolean"/>
  <types xsi:type="occi:ArrayType" name="array" type="//@types.10"/>
  <types xsi:type="occi:NumericType" name="short" type="Short"/>
  <types xsi:type="occi:EObjectType" name="map" instanceClassName="java.util.Map"/>
  <types xsi:type="occi:EObjectType" name="object" instanceClassName="java.lang.Object"/>
  <types xsi:type="occi:EnumerationType" name="code" documentation="Required. The TypeCode for this type.">
    <literals name="TYPE_CODE_UNSPECIFIED" documentation="Not specified."/>
    <literals name="BOOL" documentation="Encoded as JSON `true` or `false`."/>
    <literals name="INT64" documentation="Encoded as `string`, in decimal format."/>
    <literals name="FLOAT64" documentation="Encoded as `number`, or the strings `&quot;NaN&quot;`, `&quot;Infinity&quot;`, or&#xA;`&quot;-Infinity&quot;`."/>
    <literals name="TIMESTAMP" documentation="Encoded as `string` in RFC 3339 timestamp format. The time zone&#xA;must be present, and must be `&quot;Z&quot;`."/>
    <literals name="DATE" documentation="Encoded as `string` in RFC 3339 date format."/>
    <literals name="STRING" documentation="Encoded as `string`."/>
    <literals name="BYTES" documentation="Encoded as a base64-encoded `string`, as described in RFC 4648,&#xA;section 4."/>
    <literals name="ARRAY" documentation="Encoded as `list`, where the list elements are represented&#xA;according to array_element_type."/>
    <literals name="STRUCT" documentation="Encoded as `list`, where list element `i` is represented according&#xA;to [struct_type.fields[i]][google.spanner.v1.StructType.fields]."/>
  </types>
  <types xsi:type="occi:EnumerationType" name="kind" documentation="Used to determine the type of node. May be needed for visualizing&#xA;different kinds of nodes differently. For example, If the node is a&#xA;SCALAR node, it will have a condensed representation&#xA;which can be used to directly embed a description of the node in its&#xA;parent.">
    <literals name="KIND_UNSPECIFIED" documentation="Not specified."/>
    <literals name="RELATIONAL" documentation="Denotes a Relational operator node in the expression tree. Relational&#xA;operators represent iterative processing of rows during query execution.&#xA;For example, a `TableScan` operation that reads rows from a table."/>
    <literals name="SCALAR" documentation="Denotes a Scalar node in the expression tree. Scalar nodes represent&#xA;non-iterable entities in the query plan. For example, constants or&#xA;arithmetic operators appearing inside predicate expressions or references&#xA;to column names."/>
  </types>
  <types xsi:type="occi:EnumerationType" name="queryMode" documentation="Used to control the amount of debugging information returned in&#xA;ResultSetStats.">
    <literals name="NORMAL" documentation="The default mode where only the query result, without any information&#xA;about the query plan is returned."/>
    <literals name="PLAN" documentation="This mode returns only the query plan, without any result rows or&#xA;execution statistics information."/>
    <literals name="PROFILE" documentation="This mode returns both the query plan and the execution statistics along&#xA;with the result rows."/>
  </types>
  <types xsi:type="occi:EnumerationType" name="state" documentation="Output only. The current database state.">
    <literals name="STATE_UNSPECIFIED" documentation="Not specified."/>
    <literals name="CREATING" documentation="The database is still being created. Operations on the database may fail&#xA;with `FAILED_PRECONDITION` in this state."/>
    <literals name="READY" documentation="The database is fully created and ready for use."/>
  </types>
  <types xsi:type="occi:EnumerationType" name="InstanceSstate" documentation="Output only. The current instance state. For&#xA;CreateInstance, the state must be&#xA;either omitted or set to `CREATING`. For&#xA;UpdateInstance, the state must be&#xA;either omitted or set to `READY`.">
    <literals name="STATE_UNSPECIFIED" documentation="Not specified."/>
    <literals name="CREATING" documentation="The instance is still being created. Resources may not be&#xA;available yet, and operations such as database creation may not&#xA;work."/>
    <literals name="READY" documentation="The instance is fully created and ready to do work such as&#xA;creating databases."/>
  </types>
</occi:Extension>
