Kind;Name;Type;Description
appengine.v1.version;name;string; Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1.version;id;string;Relative name of the version within the service. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-". 
appengine.v1.version;inboundServices[];enum(InboundServiceType);Before an application can receive email or XMPP messages, the application must be configured to enable the service. 
appengine.v1.version;instanceClass;string; Instance class that is used to run this version. Valid values are: Defaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.  
appengine.v1.version;network;object(Network);Extra network settings. Only applicable for VM runtimes. 
appengine.v1.version;resources;object(Resources);Machine resources for this version. Only applicable for VM runtimes. 
appengine.v1.version;runtime;string;Desired runtime. Example: python27. 
appengine.v1.version;threadsafe;boolean;Whether multiple requests can be dispatched to this version at once. 
appengine.v1.version;vm;boolean;Whether to deploy this version in a container on a virtual machine. 
appengine.v1.version;betaSettings;map (key: string, value: string); Metadata settings that are supplied to this version to enable beta runtime features. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1.version;env;string; App Engine execution environment for this version. Defaults to standard.  
appengine.v1.version;servingStatus;enum(ServingStatus); Current serving status of this version. Only the versions with a SERVING status create instances and can be billed. SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.  
appengine.v1.version;createdBy;string; Email address of the user who created this version. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1.version;createTime;string (Timestamp format); Time that this version was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z". Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1.version;diskUsageBytes;string (int64 format); Total size in bytes of all the files that are included in this version and curerntly hosted on the App Engine disk. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1.version;handlers[];object(UrlMap); An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;errorHandlers[];object(ErrorHandler); Custom static error pages. Limited to 10KB per page. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;libraries[];object(Library); Configuration for third-party Python runtime libraries that are required by the application. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;apiConfig;object(ApiConfigHandler); Serving configuration for Google Cloud Endpoints. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;envVariables;map (key: string, value: string); Environment variables available to the application. Only returned in GET requests if view=FULL is set. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1.version;defaultExpiration;string (Duration format); Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time. Only returned in GET requests if view=FULL is set. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".  
appengine.v1.version;healthCheck;object(HealthCheck); Configures health checking for VM instances. Unhealthy instances are stopped and replaced with new instances. Only applicable for VM runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;readinessCheck;object(ReadinessCheck); Configures readiness health checking for VM instances. Unhealthy instances are not put into the backend traffic rotation. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;livenessCheck;object(LivenessCheck); Configures liveness health checking for VM instances. Unhealthy instances are stopped and replaced with new instances Only returned in GET requests if view=FULL is set.  
appengine.v1.version;nobuildFilesRegex;string; Files that match this pattern will not be built into this version. Only applicable for Go runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;deployment;object(Deployment); Code and application artifacts that make up this version. Only returned in GET requests if view=FULL is set.  
appengine.v1.version;versionUrl;string; Serving URL for this version. Example: "https://myversion-dot-myservice-dot-myapp.appspot.com" Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1.version;endpointsApiService;object(EndpointsApiService); Cloud Endpoints configuration. If endpointsApiService is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.  
appengine.v1.version;automaticScaling;object(AutomaticScaling);Automatic scaling is based on request rate, response latencies, and other application metrics. 
appengine.v1.version;basicScaling;object(BasicScaling);A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity. 
appengine.v1.version;manualScaling;object(ManualScaling);A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. 
appengine.v1beta4.version;name;string; Full path to the Version resource in the API. Example: apps/myapp/modules/default/versions/v1. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta4.version;id;string;Relative name of the version within the module. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-". 
appengine.v1beta4.version;inboundServices[];enum(InboundServiceType);Before an application can receive email or XMPP messages, the application must be configured to enable the service. 
appengine.v1beta4.version;instanceClass;string; Instance class that is used to run this version. Valid values are: Defaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.  
appengine.v1beta4.version;network;object(Network);Extra network settings. Only applicable for VM runtimes. 
appengine.v1beta4.version;resources;object(Resources);Machine resources for this version. Only applicable for VM runtimes. 
appengine.v1beta4.version;runtime;string;Desired runtime. Example: python27. 
appengine.v1beta4.version;threadsafe;boolean;Whether multiple requests can be dispatched to this version at once. 
appengine.v1beta4.version;vm;boolean;Whether to deploy this version in a container on a virtual machine. 
appengine.v1beta4.version;betaSettings;map (key: string, value: string); Metadata settings that are supplied to this version to enable beta runtime features. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1beta4.version;env;string; App Engine execution environment to use for this version. Defaults to 1.  
appengine.v1beta4.version;servingStatus;enum(ServingStatus); Current serving status of this version. Only the versions with a SERVING status create instances and can be billed. SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.  
appengine.v1beta4.version;deployer;string; Email address of the user who created this version. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta4.version;creationTime;string (Timestamp format); Time that this version was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z". Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta4.version;handlers[];object(UrlMap); An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;errorHandlers[];object(ErrorHandler); Custom static error pages. Limited to 10KB per page. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;libraries[];object(Library); Configuration for third-party Python runtime libraries required by the application. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;apiConfig;object(ApiConfigHandler); Serving configuration for Google Cloud Endpoints. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;envVariables;map (key: string, value: string); Environment variables made available to the application. Only returned in GET requests if view=FULL is set. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1beta4.version;defaultExpiration;string (Duration format); Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time. Only returned in GET requests if view=FULL is set. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".  
appengine.v1beta4.version;healthCheck;object(HealthCheck); Configures health checking for VM instances. Unhealthy instances are stopped and replaced with new instances. Only applicable for VM runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;nobuildFilesRegex;string; Files that match this pattern will not be built into this version. Only applicable for Go runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;deployment;object(Deployment); Code and application artifacts that make up this version. Only returned in GET requests if view=FULL is set.  
appengine.v1beta4.version;automaticScaling;object(AutomaticScaling);Automatic scaling is based on request rate, response latencies, and other application metrics. 
appengine.v1beta4.version;basicScaling;object(BasicScaling);A module with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity. 
appengine.v1beta4.version;manualScaling;object(ManualScaling);A module with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. 
appengine.v1beta5.version;name;string; Full path to the Version resource in the API. Example: apps/myapp/services/default/versions/v1. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta5.version;id;string;Relative name of the version within the module. Example: v1. Version names can contain only lowercase letters, numbers, or hyphens. Reserved names: "default", "latest", and any name with the prefix "ah-". 
appengine.v1beta5.version;inboundServices[];enum(InboundServiceType);Before an application can receive email or XMPP messages, the application must be configured to enable the service. 
appengine.v1beta5.version;instanceClass;string; Instance class that is used to run this version. Valid values are: Defaults to F1 for AutomaticScaling and B1 for ManualScaling or BasicScaling.  
appengine.v1beta5.version;network;object(Network);Extra network settings. Only applicable for VM runtimes. 
appengine.v1beta5.version;resources;object(Resources);Machine resources for this version. Only applicable for VM runtimes. 
appengine.v1beta5.version;runtime;string;Desired runtime. Example: python27. 
appengine.v1beta5.version;threadsafe;boolean;Whether multiple requests can be dispatched to this version at once. 
appengine.v1beta5.version;vm;boolean;Whether to deploy this version in a container on a virtual machine. 
appengine.v1beta5.version;betaSettings;map (key: string, value: string); Metadata settings that are supplied to this version to enable beta runtime features. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1beta5.version;env;string; App Engine execution environment to use for this version. Defaults to 1.  
appengine.v1beta5.version;servingStatus;enum(ServingStatus); Current serving status of this version. Only the versions with a SERVING status create instances and can be billed. SERVING_STATUS_UNSPECIFIED is an invalid value. Defaults to SERVING.  
appengine.v1beta5.version;deployer;string; Email address of the user who created this version. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta5.version;creationTime;string (Timestamp format); Time that this version was created. A timestamp in RFC3339 UTC "Zulu" format, accurate to nanoseconds. Example: "2014-10-02T15:01:23.045123456Z". Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta5.version;diskUsageBytes;string (int64 format); Total size of version files hosted on App Engine disk in bytes. Note: This field is used in responses only. Any value specified here in a request is ignored.  
appengine.v1beta5.version;ignoreBinaryVerification;boolean;Whether the deployment should continue if binary verification fails. Only applicable if binary verification is enabled. 
appengine.v1beta5.version;overrideBinaryAuthorization;boolean;Whether the deployment should continue if binary verification fails. Only applicable if binary verification is enabled. 
appengine.v1beta5.version;handlers[];object(UrlMap); An ordered list of URL-matching patterns that should be applied to incoming requests. The first matching URL handles the request and other request handlers are not attempted. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;errorHandlers[];object(ErrorHandler); Custom static error pages. Limited to 10KB per page. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;libraries[];object(Library); Configuration for third-party Python runtime libraries required by the application. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;apiConfig;object(ApiConfigHandler); Serving configuration for Google Cloud Endpoints. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;envVariables;map (key: string, value: string); Environment variables made available to the application. Only returned in GET requests if view=FULL is set. An object containing a list of "key": value pairs. Example: { "name": "wrench", "mass": "1.3kg", "count": "3" }.  
appengine.v1beta5.version;defaultExpiration;string (Duration format); Duration that static files should be cached by web proxies and browsers. Only applicable if the corresponding StaticFilesHandler does not specify its own expiration time. Only returned in GET requests if view=FULL is set. A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".  
appengine.v1beta5.version;healthCheck;object(HealthCheck); Configures health checking for VM instances. Unhealthy instances are be stopped and replaced with new instances. Only applicable for VM runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;nobuildFilesRegex;string; Files that match this pattern will not be built into this version. Only applicable for Go runtimes. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;deployment;object(Deployment); Code and application artifacts that make up this version. Only returned in GET requests if view=FULL is set.  
appengine.v1beta5.version;endpointsApiService;object(EndpointsApiService); Cloud Endpoints configuration. If endpointsApiService is set, the Cloud Endpoints Extensible Service Proxy will be provided to serve the API implemented by the app.  
appengine.v1beta5.version;automaticScaling;object(AutomaticScaling);Automatic scaling is based on request rate, response latencies, and other application metrics. 
appengine.v1beta5.version;basicScaling;object(BasicScaling);A service with basic scaling will create an instance when the application receives a request. The instance will be turned down when the app becomes idle. Basic scaling is ideal for work that is intermittent or driven by user activity. 
appengine.v1beta5.version;manualScaling;object(ManualScaling);A service with manual scaling runs continuously, allowing you to perform complex initialization and rely on the state of its memory over time. 
bigquery.v2.dataset;access[];list;[Optional] An array of objects that define dataset access for one or more entities. You can set this property when inserting or updating a dataset in order to control who is allowed to access the data. If unspecified at dataset creation time, BigQuery adds default dataset access for the following entities: access.specialGroup: projectReaders; access.role: READER;  access.specialGroup: projectWriters; access.role: WRITER;  access.specialGroup: projectOwners; access.role: OWNER;  access.userByEmail: [dataset creator email]; access.role: OWNER; For more information about access control in BigQuery, see access control.
bigquery.v2.dataset;access[].domain;string;[Pick one] A domain to grant access to. Any users signed in with the domain specified will be granted the specified access. Example: "example.com".
bigquery.v2.dataset;access[].groupByEmail;string;[Pick one] An email address of a Google Group to grant access to.
bigquery.v2.dataset;access[].role;string;[Required] Describes the rights granted to the user specified by the other member of the access object. The following string values are supported: READER, WRITER, OWNER. For more information about access control in BigQuery, see access control.
bigquery.v2.dataset;access[].specialGroup;string;[Pick one] A special group to grant access to. Possible values include: projectOwners: Owners of the enclosing project.  projectReaders: Readers of the enclosing project.  projectWriters: Writers of the enclosing project.  allAuthenticatedUsers: All authenticated BigQuery users. For more information about access control in BigQuery, see access control.
bigquery.v2.dataset;access[].userByEmail;string;[Pick one] An email address of a user to grant access to. For example: fred@example.com.
bigquery.v2.dataset;access[].view;nested object;[Pick one] A view from a different dataset to grant access to. Queries executed against that view will have read access to tables in this dataset. The role field is not required when this field is set. If that view is updated by any user, access to the view needs to be granted again via an update operation.
bigquery.v2.dataset;access[].view.datasetId;string;[Required] The ID of the dataset containing this table.
bigquery.v2.dataset;access[].view.projectId;string;[Required] The ID of the project containing this table.
bigquery.v2.dataset;access[].view.tableId;string;[Required] The ID of the table. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
bigquery.v2.dataset;creationTime;long;[Output-only] The time when this dataset was created, in milliseconds since the epoch.
bigquery.v2.dataset;datasetReference;nested object;[Required] A reference that identifies the dataset.
bigquery.v2.dataset;datasetReference.datasetId;string;[Required] A unique ID for this dataset, without the project name. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
bigquery.v2.dataset;datasetReference.projectId;string;[Optional] The ID of the project containing this dataset.
bigquery.v2.dataset;defaultTableExpirationMs;long;[Optional] The default lifetime of all tables in the dataset, in milliseconds. The minimum value is 3600000 milliseconds (one hour). Once this property is set, all newly-created tables in the dataset will have an expirationTime property set to the creation time plus the value in this property, and changing the value will only affect new tables, not existing ones. When the expirationTime for a given table is reached, that table will be deleted automatically. If a table's expirationTime is modified or removed before the table expires, or if you provide an explicit expirationTime when creating a table, that value takes precedence over the default expiration time indicated by this property.
bigquery.v2.dataset;description;string;[Optional] A user-friendly description of the dataset.
bigquery.v2.dataset;etag;etag;[Output-only] A hash of the resource.
bigquery.v2.dataset;friendlyName;string;[Optional] A descriptive name for the dataset.
bigquery.v2.dataset;id;string;[Output-only] The fully-qualified unique name of the dataset in the format projectId:datasetId. The dataset name without the project name is given in the datasetId field. When creating a new dataset, leave this field blank, and instead specify the datasetId field.
bigquery.v2.dataset;kind;string;[Output-only] The resource type.
bigquery.v2.dataset;labels;object;The labels associated with this dataset. You can use these to organize and group your datasets. You can set this property when inserting or updating a dataset. See Labeling Datasets for more information.
bigquery.v2.dataset;labels.(key);string;None
bigquery.v2.dataset;lastModifiedTime;long;[Output-only] The date when this dataset or any of its tables was last modified, in milliseconds since the epoch.
bigquery.v2.dataset;location;string;The geographic location where the dataset should reside. Possible values include EU and US. The default value is US.
bigquery.v2.dataset;selfLink;string;[Output-only] A URL that can be used to access the resource again. You can use this URL in Get or Update requests to the resource.
bigquery.v2.table;creationTime;long;[Output-only] The time when this table was created, in milliseconds since the epoch.
bigquery.v2.table;description;string;[Optional] A user-friendly description of this table.
bigquery.v2.table;etag;etag;[Output-only] A hash of this resource.
bigquery.v2.table;expirationTime;long;[Optional] The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.
bigquery.v2.table;externalDataConfiguration;nested object;[Optional] Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.
bigquery.v2.table;externalDataConfiguration.autodetect;boolean;Try to detect schema and format options automatically. Any option specified explicitly will be honored.
bigquery.v2.table;externalDataConfiguration.bigtableOptions;nested object;[Optional] Additional options if sourceFormat is set to BIGTABLE.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[];list;[Optional] List of column families to expose in the table schema along with their types. This list restricts the column families that can be referenced in queries and specifies their value types. You can use this list to do type conversions - see the 'type' field for more details. If you leave this list empty, all column families are present in the table schema and their values are read as BYTES. During a query only the column families referenced in that query are read from Bigtable.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[];list;[Optional] Lists of columns that should be exposed as individual fields as opposed to a list of (column name, value) pairs. All columns whose qualifier matches a qualifier in this list can be accessed as .. Other columns can be accessed as a list through .Column field.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].encoding;string;[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. 'encoding' can also be set at the column family level. However, the setting at this level takes precedence if 'encoding' is set at both levels.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].fieldName;string;[Optional] If the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as the column field name and is used as field name in queries.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].onlyReadLatest;boolean;[Optional] If this is set, only the latest version of value in this column are exposed. 'onlyReadLatest' can also be set at the column family level. However, the setting at this level takes precedence if 'onlyReadLatest' is set at both levels.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].qualifierEncoded;bytes;[Required] Qualifier of the column. Columns in the parent column family that has this exact qualifier are exposed as . field. If the qualifier is valid UTF-8 string, it can be specified in the qualifier_string field. Otherwise, a base-64 encoded value must be set to qualifier_encoded. The column field name is the same as the column qualifier. However, if the qualifier is not a valid BigQuery field identifier i.e. does not match [a-zA-Z][a-zA-Z0-9_]*, a valid identifier must be provided as field_name.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].qualifierString;string;None
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].columns[].type;string;[Optional] The type to convert the value in cells of this column. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. 'type' can also be set at the column family level. However, the setting at this level takes precedence if 'type' is set at both levels.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].encoding;string;[Optional] The encoding of the values when the type is not STRING. Acceptable encoding values are: TEXT - indicates values are alphanumeric text strings. BINARY - indicates values are encoded using HBase Bytes.toBytes family of functions. This can be overridden for a specific column by listing that column in 'columns' and specifying an encoding for it.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].familyId;string;Identifier of the column family.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].onlyReadLatest;boolean;[Optional] If this is set only the latest version of value are exposed for all columns in this column family. This can be overridden for a specific column by listing that column in 'columns' and specifying a different setting for that column.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.columnFamilies[].type;string;[Optional] The type to convert the value in cells of this column family. The values are expected to be encoded using HBase Bytes.toBytes function when using the BINARY encoding value. Following BigQuery types are allowed (case-sensitive) - BYTES STRING INTEGER FLOAT BOOLEAN Default type is BYTES. This can be overridden for a specific column by listing that column in 'columns' and specifying a type for it.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.ignoreUnspecifiedColumnFamilies;boolean;[Optional] If field is true, then the column families that are not specified in columnFamilies list are not exposed in the table schema. Otherwise, they are read with BYTES type values. The default value is false.
bigquery.v2.table;externalDataConfiguration.bigtableOptions.readRowkeyAsString;boolean;[Optional] If field is true, then the rowkey column families will be read and converted to string. Otherwise they are read with BYTES type values and users need to manually cast them with CAST if necessary. The default value is false.
bigquery.v2.table;externalDataConfiguration.compression;string;[Optional] The compression type of the data source. Possible values include GZIP and NONE. The default value is NONE. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats.
bigquery.v2.table;externalDataConfiguration.csvOptions;nested object;Additional properties to set if sourceFormat is set to CSV.
bigquery.v2.table;externalDataConfiguration.csvOptions.allowJaggedRows;boolean;[Optional] Indicates if BigQuery should accept rows that are missing trailing optional columns. If true, BigQuery treats missing trailing columns as null values. If false, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false.
bigquery.v2.table;externalDataConfiguration.csvOptions.allowQuotedNewlines;boolean;[Optional] Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false.
bigquery.v2.table;externalDataConfiguration.csvOptions.encoding;string;[Optional] The character encoding of the data. The supported values are UTF-8 or ISO-8859-1. The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties.
bigquery.v2.table;externalDataConfiguration.csvOptions.fieldDelimiter;string;[Optional] The separator for fields in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. BigQuery also supports the escape sequence "\t" to specify a tab separator. The default value is a comma (',').
bigquery.v2.table;externalDataConfiguration.csvOptions.quote;string;[Optional] The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote ('"'). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true.
bigquery.v2.table;externalDataConfiguration.csvOptions.skipLeadingRows;long;[Optional] The number of rows at the top of a CSV file that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows in the file that should be skipped.
bigquery.v2.table;externalDataConfiguration.googleSheetsOptions;nested object;[Optional] Additional options if sourceFormat is set to GOOGLE_SHEETS.
bigquery.v2.table;externalDataConfiguration.googleSheetsOptions.skipLeadingRows;long;[Optional] The number of rows at the top of a sheet that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows that should be skipped. When autodetect is on, behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema.
bigquery.v2.table;externalDataConfiguration.ignoreUnknownValues;boolean;[Optional] Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing columns JSON: Named values that don't match any column names Google Cloud Bigtable: This setting is ignored. Google Cloud Datastore backups: This setting is ignored. Avro: This setting is ignored.
bigquery.v2.table;externalDataConfiguration.maxBadRecords;integer;[Optional] The maximum number of bad records that BigQuery can ignore when reading data. If the number of bad records exceeds this value, an invalid error is returned in the job result. The default value is 0, which requires that all records are valid. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups and Avro formats.
bigquery.v2.table;externalDataConfiguration.schema;nested object;[Optional] The schema for the data. Schema is required for CSV and JSON formats. Schema is disallowed for Google Cloud Bigtable, Cloud Datastore backups, and Avro formats.
bigquery.v2.table;externalDataConfiguration.schema.fields[];list;Describes the fields in a table.
bigquery.v2.table;externalDataConfiguration.schema.fields[].description;string;[Optional] The field description. The maximum length is 1,024 characters.
bigquery.v2.table;externalDataConfiguration.schema.fields[].fields[];list;[Optional] Describes the nested schema fields if the type property is set to RECORD.
bigquery.v2.table;externalDataConfiguration.schema.fields[].mode;string;[Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
bigquery.v2.table;externalDataConfiguration.schema.fields[].name;string;[Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.
bigquery.v2.table;externalDataConfiguration.schema.fields[].type;string;[Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME, RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as RECORD).
bigquery.v2.table;externalDataConfiguration.sourceFormat;string;[Required] The data format. For CSV files, specify "CSV". For Google sheets, specify "GOOGLE_SHEETS". For newline-delimited JSON, specify "NEWLINE_DELIMITED_JSON". For Avro files, specify "AVRO". For Google Cloud Datastore backups, specify "DATASTORE_BACKUP". [Beta] For Google Cloud Bigtable, specify "BIGTABLE".
bigquery.v2.table;externalDataConfiguration.sourceUris[];list;[Required] The fully-qualified URIs that point to your data in Google Cloud. For Google Cloud Storage URIs: Each URI can contain one '*' wildcard character and it must come after the 'bucket' name. Size limits related to load jobs apply to external data sources. For Google Cloud Bigtable URIs: Exactly one URI can be specified and it has be a fully specified and valid HTTPS URL for a Google Cloud Bigtable table. For Google Cloud Datastore backups, exactly one URI can be specified, and it must end with '.backup_info'. Also, the '*' wildcard character is not allowed.
bigquery.v2.table;friendlyName;string;[Optional] A descriptive name for this table.
bigquery.v2.table;id;string;[Output-only] An opaque ID uniquely identifying the table.
bigquery.v2.table;kind;bigquery#table;The type of resource ID.
bigquery.v2.table;labels;object;[Experimental] The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.
bigquery.v2.table;labels.(key);string;None
bigquery.v2.table;lastModifiedTime;unsigned long;[Output-only] The time when this table was last modified, in milliseconds since the epoch.
bigquery.v2.table;location;string;[Output-only] The geographic location where the table resides. This value is inherited from the dataset.
bigquery.v2.table;numBytes;long;[Output-only] The size of this table in bytes, excluding any data in the streaming buffer.
bigquery.v2.table;numLongTermBytes;long;[Output-only] The number of bytes in the table that are considered "long-term storage".
bigquery.v2.table;numRows;unsigned long;[Output-only] The number of rows of data in this table, excluding any data in the streaming buffer.
bigquery.v2.table;schema;nested object;[Optional] Describes the schema of this table.
bigquery.v2.table;schema.fields[];list;Describes the fields in a table.
bigquery.v2.table;schema.fields[].description;string;[Optional] The field description. The maximum length is 1,024 characters.
bigquery.v2.table;schema.fields[].fields[];list;[Optional] Describes the nested schema fields if the type property is set to RECORD.
bigquery.v2.table;schema.fields[].mode;string;[Optional] The field mode. Possible values include NULLABLE, REQUIRED and REPEATED. The default value is NULLABLE.
bigquery.v2.table;schema.fields[].name;string;[Required] The field name. The name must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_), and must start with a letter or underscore. The maximum length is 128 characters.
bigquery.v2.table;schema.fields[].type;string;[Required] The field data type. Possible values include STRING, BYTES, INTEGER, INT64 (same as INTEGER), FLOAT, FLOAT64 (same as FLOAT), BOOLEAN, BOOL (same as BOOLEAN), TIMESTAMP, DATE, TIME, DATETIME, RECORD (where RECORD indicates that the field contains a nested schema) or STRUCT (same as RECORD).
bigquery.v2.table;selfLink;string;[Output-only] A URL that can be used to access this resource again.
bigquery.v2.table;streamingBuffer;nested object;[Output-only] Contains information regarding this table's streaming buffer, if one is present. This field will be absent if the table is not being streamed to or if there is no data in the streaming buffer.
bigquery.v2.table;streamingBuffer.estimatedBytes;unsigned long;[Output-only] A lower-bound estimate of the number of bytes currently in the streaming buffer.
bigquery.v2.table;streamingBuffer.estimatedRows;unsigned long;[Output-only] A lower-bound estimate of the number of rows currently in the streaming buffer.
bigquery.v2.table;streamingBuffer.oldestEntryTime;unsigned long;[Output-only] Contains the timestamp of the oldest entry in the streaming buffer, in milliseconds since the epoch, if the streaming buffer is available.
bigquery.v2.table;tableReference;nested object;[Required] Reference describing the ID of this table.
bigquery.v2.table;tableReference.datasetId;string;[Required] The ID of the dataset containing this table.
bigquery.v2.table;tableReference.projectId;string;[Required] The ID of the project containing this table.
bigquery.v2.table;tableReference.tableId;string;[Required] The ID of the table. The ID must contain only letters (a-z, A-Z), numbers (0-9), or underscores (_). The maximum length is 1,024 characters.
bigquery.v2.table;timePartitioning;nested object;[Experimental] If specified, configures time-based partitioning for this table.
bigquery.v2.table;timePartitioning.expirationMs;long;[Optional] Number of milliseconds for which to keep the storage for a partition.
bigquery.v2.table;timePartitioning.type;string;[Required] The only type supported is DAY, which will generate one partition per day based on data loading time.
bigquery.v2.table;type;string;[Output-only] Describes the table type. The following values are supported: TABLE: A normal BigQuery table.  VIEW: A virtual table defined by a SQL query. For more information, see views. EXTERNAL: A table that references data stored in an external storage system, such as Google Cloud Storage.The default value is TABLE.
bigquery.v2.table;view;nested object;[Optional] The view definition.
bigquery.v2.table;view.query;string;[Required] A query that BigQuery executes when the view is referenced.
bigquery.v2.table;view.useLegacySql;boolean;Specifies whether to use BigQuery's legacy SQL for this view. The default value is true. If set to false, the view will use BigQuery's standard SQL: https://cloud.google.com/bigquery/sql-reference/ Queries and views that reference this view must use the same flag value.
bigquery.v2.table;view.userDefinedFunctionResources[];list;Describes user-defined function resources used in the query.
bigquery.v2.table;view.userDefinedFunctionResources[].inlineCode;string;[Pick one] An inline resource that contains code for a user-defined function (UDF). Providing a inline code resource is equivalent to providing a URI for a file containing the same code.
bigquery.v2.table;view.userDefinedFunctionResources[].resourceUri;string;[Pick one] A code resource to load from a Google Cloud Storage URI (gs://bucket/path).
clouduseraccounts.beta.group;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
clouduseraccounts.beta.group;description;string;An optional textual description of the resource; provided by the client when the resource is created.
clouduseraccounts.beta.group;id;unsigned long;[Output Only] Unique identifier for the resource; defined by the server.
clouduseraccounts.beta.group;kind;string;[Output Only] Type of the resource. Always clouduseraccounts#group for groups.
clouduseraccounts.beta.group;members[];list;[Output Only] A list of URLs to User resources who belong to the group. Users may only be members of groups in the same project.
clouduseraccounts.beta.group;name;string;Name of the resource; provided by the client when the resource is created.
clouduseraccounts.beta.group;selfLink;string;[Output Only] Server defined URL for the resource.
clouduseraccounts.beta.user;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
clouduseraccounts.beta.user;description;string;An optional textual description of the resource; provided by the client when the resource is created.
clouduseraccounts.beta.user;groups[];list;[Output Only] A list of URLs to Group resources who contain the user. Users are only members of groups in the same project.
clouduseraccounts.beta.user;id;unsigned long;[Output Only] Unique identifier for the resource; defined by the server.
clouduseraccounts.beta.user;kind;string;[Output Only] Type of the resource. Always clouduseraccounts#user for users.
clouduseraccounts.beta.user;name;string;Name of the resource; provided by the client when the resource is created.
clouduseraccounts.beta.user;owner;string;Email address of account's owner. This account will be validated to make sure it exists. The email can belong to any domain, but it must be tied to a Google account.
clouduseraccounts.beta.user;publicKeys[];list;[Output Only] Public keys that this user may use to login.
clouduseraccounts.beta.user;publicKeys[].creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
clouduseraccounts.beta.user;publicKeys[].description;string;An optional textual description of the resource; provided by the client when the resource is created.
clouduseraccounts.beta.user;publicKeys[].expirationTimestamp;string;Optional expiration timestamp. If provided, the timestamp must be in RFC3339 text format. If not provided, the public key never expires.
clouduseraccounts.beta.user;publicKeys[].fingerprint;string;[Output Only] The fingerprint of the key is defined by RFC4716 to be the MD5 digest of the public key.
clouduseraccounts.beta.user;publicKeys[].key;string;Public key text in SSH format, defined by RFC4253 section 6.6.
clouduseraccounts.beta.user;selfLink;string;[Output Only] Server defined URL for the resource.
compute.beta.address;address;string;The static external IP address represented by this resource.
compute.beta.address;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.address;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.address;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.address;ipVersion;string;The IP Version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
compute.beta.address;kind;string;[Output Only] Type of the resource. Always compute#address for addresses.
compute.beta.address;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.address;region;string;[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.
compute.beta.address;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.address;status;string;[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
compute.beta.address;users[];list;[Output Only] The URLs of the resources that are using this address.
compute.beta.autoscaler;autoscalingPolicy;nested object;The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
compute.beta.autoscaler;autoscalingPolicy.coolDownPeriodSec;integer;The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
compute.beta.autoscaler;autoscalingPolicy.cpuUtilization;nested object;Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
compute.beta.autoscaler;autoscalingPolicy.cpuUtilization.utilizationTarget;double;The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
compute.beta.autoscaler;autoscalingPolicy.customMetricUtilizations[];list;Configuration parameters of autoscaling based on a custom metric.
compute.beta.autoscaler;autoscalingPolicy.customMetricUtilizations[].metric;string;The identifier of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric. The metric must also have a label of compute.googleapis.com/resource_id with the value of the instance's unique ID, although this alone does not guarantee that the metric is valid. For example, the following is a valid metric: compute.googleapis.com/instance/network/received_bytes_count The following is not a valid metric because it does not increase or decrease based on usage: compute.googleapis.com/instance/cpu/reserved_cores
compute.beta.autoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTarget;double;Target value of the metric which autoscaler should maintain. Must be a positive value.
compute.beta.autoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTargetType;string;Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.
compute.beta.autoscaler;autoscalingPolicy.loadBalancingUtilization;nested object;Configuration parameters of autoscaling based on load balancer.
compute.beta.autoscaler;autoscalingPolicy.loadBalancingUtilization.utilizationTarget;double;Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.
compute.beta.autoscaler;autoscalingPolicy.maxNumReplicas;integer;The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
compute.beta.autoscaler;autoscalingPolicy.minNumReplicas;integer;The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.
compute.beta.autoscaler;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.autoscaler;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.autoscaler;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.autoscaler;kind;string;[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
compute.beta.autoscaler;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.autoscaler;region;string;[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
compute.beta.autoscaler;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.autoscaler;status;string;[Output Only] The status of the autoscaler configuration.
compute.beta.autoscaler;statusDetails[];list;[Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
compute.beta.autoscaler;statusDetails[].message;string;The status message.
compute.beta.autoscaler;statusDetails[].type;string;The type of error returned.
compute.beta.autoscaler;target;string;URL of the managed instance group that this autoscaler will scale.
compute.beta.autoscaler;zone;string;[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
compute.beta.backendBucket;bucketName;string;Cloud Storage bucket name.
compute.beta.backendBucket;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.backendBucket;description;string;An optional textual description of the resource; provided by the client when the resource is created.
compute.beta.backendBucket;enableCdn;boolean;If true, enable Cloud CDN for this BackendBucket.
compute.beta.backendBucket;id;unsigned long;[Output Only] Unique identifier for the resource; defined by the server.
compute.beta.backendBucket;kind;string;Type of the resource.
compute.beta.backendBucket;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.backendBucket;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.backendService;affinityCookieTtlSec;integer;Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.backendService;backends[];list;The list of backends that serve this BackendService.
compute.beta.backendService;backends[].balancingMode;string;Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL). This cannot be used for internal load balancing.
compute.beta.backendService;backends[].capacityScaler;float;A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0]. This cannot be used for internal load balancing.
compute.beta.backendService;backends[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.backendService;backends[].group;string;The fully-qualified URL of a zonal Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource. Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL. When the BackendService has load balancing scheme INTERNAL, the instance group must be in a zone within the same region as the BackendService.
compute.beta.backendService;backends[].maxConnections;integer;The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.beta.backendService;backends[].maxConnectionsPerInstance;integer;The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.beta.backendService;backends[].maxRate;integer;The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.beta.backendService;backends[].maxRatePerInstance;float;The max requests per second (RPS) that a single backend instance can handle.This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.beta.backendService;backends[].maxUtilization;float;Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0]. This cannot be used for internal load balancing.
compute.beta.backendService;cdnPolicy;nested object;Cloud CDN configuration for this BackendService.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy;nested object;The CacheKeyPolicy for this CdnPolicy.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy.includeHost;boolean;If true, requests to different hosts will be cached separately.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy.includeProtocol;boolean;If true, http and https requests will be cached separately.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy.includeQueryString;boolean;If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy.queryStringBlacklist[];list;Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
compute.beta.backendService;cdnPolicy.cacheKeyPolicy.queryStringWhitelist[];list;Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
compute.beta.backendService;connectionDraining;nested object;None
compute.beta.backendService;connectionDraining.drainingTimeoutSec;integer;Time for which instance will be drained (not accept new connections, but still work to finish started).
compute.beta.backendService;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.backendService;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.backendService;enableCDN;boolean;If true, enable Cloud CDN for this BackendService. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.backendService;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
compute.beta.backendService;healthChecks[];list;The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
compute.beta.backendService;iap;nested object;None
compute.beta.backendService;iap.enabled;boolean;Specifies if IAP is enabled for this backend service. The default value is false. If iap.enabled is true, the oauth2ClientId and oauth2ClientSecret properties must be set. If iap.enabled is false, the oauth2ClientId and oauth2ClientSecret properties aren't affected. You can temporarily disable IAP without unsetting those properties. Learn more about IAP
compute.beta.backendService;iap.oauth2ClientId;string;Specifies the client ID for use with OAuth 2.0.
compute.beta.backendService;iap.oauth2ClientSecret;string;Specifies the client secret for use with OAuth 2.0. This value can't be read via the API. Instead, the oauth2ClientSecretSha256 field is returned.
compute.beta.backendService;iap.oauth2ClientSecretSha256;string;In response bodies, the oauth2ClientSecret field is redacted. Instead, iap.oauth2ClientSecretSha256 supplies the SHA256 hash of the secret.
compute.beta.backendService;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.backendService;kind;string;[Output Only] Type of resource. Always compute#backendService for backend services.
compute.beta.backendService;loadBalancingScheme;string;None
compute.beta.backendService;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.backendService;port;integer;Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. This cannot be used for internal load balancing.
compute.beta.backendService;portName;string;Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.backendService;protocol;string;The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP. For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
compute.beta.backendService;region;string;[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.
compute.beta.backendService;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.backendService;sessionAffinity;string;Type of session affinity to use. The default is NONE. When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE. When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO. When the protocol is UDP, this field is not used.
compute.beta.backendService;timeoutSec;integer;How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.
compute.beta.disk;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.disk;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.disk;diskEncryptionKey;nested object;Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
compute.beta.disk;diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.disk;diskEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.disk;diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.disk;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.disk;kind;string;[Output Only] Type of the resource. Always compute#disk for disks.
compute.beta.disk;labelFingerprint;bytes;A fingerprint for the labels being applied to this disk, which is essentially a hash of the labels set used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make a get() request to retrieve a disk.
compute.beta.disk;labels;object;Labels to apply to this disk. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
compute.beta.disk;labels.(key);string;The key of a label.
compute.beta.disk;lastAttachTimestamp;string;[Output Only] Last attach timestamp in RFC3339 text format.
compute.beta.disk;lastDetachTimestamp;string;[Output Only] Last detach timestamp in RFC3339 text format.
compute.beta.disk;licenses[];list;Any applicable publicly visible licenses.
compute.beta.disk;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.disk;options;string;Internal use only.
compute.beta.disk;selfLink;string;[Output Only] Server-defined fully-qualified URL for this resource.
compute.beta.disk;sizeGb;long;Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk. If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot.
compute.beta.disk;sourceImage;string;The source image used to create this disk. If the source image is deleted, this field will not be set. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family
compute.beta.disk;sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
compute.beta.disk;sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.disk;sourceImageEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.disk;sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.disk;sourceImageId;string;[Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.
compute.beta.disk;sourceSnapshot;string;The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot projects/project/global/snapshots/snapshot global/snapshots/snapshot
compute.beta.disk;sourceSnapshotEncryptionKey;nested object;The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
compute.beta.disk;sourceSnapshotEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.disk;sourceSnapshotEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.disk;sourceSnapshotEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.disk;sourceSnapshotId;string;[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
compute.beta.disk;status;string;[Output Only] The status of disk creation.
compute.beta.disk;storageType;string;[Deprecated] Storage type of the persistent disk.
compute.beta.disk;type;string;URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
compute.beta.disk;users[];list;[Output Only] Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
compute.beta.disk;zone;string;[Output Only] URL of the zone where the disk resides.
compute.beta.firewall;allowed[];list;The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
compute.beta.firewall;allowed[].IPProtocol;string;The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number.
compute.beta.firewall;allowed[].ports[];list;An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
compute.beta.firewall;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.firewall;denied[];list;The list of DENY rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
compute.beta.firewall;denied[].IPProtocol;string;The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number.
compute.beta.firewall;denied[].ports[];list;An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
compute.beta.firewall;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.firewall;destinationRanges[];list;If destination ranges are specified, the firewall will apply only to traffic that has destination IP address in these ranges. These ranges must be expressed in CIDR format. Only IPv4 is supported.
compute.beta.firewall;direction;string;Direction of traffic to which this firewall applies; default is INGRESS. Note: For INGRESS traffic, it is NOT supported to specify destinationRanges; For EGRESS traffic, it is NOT supported to specify sourceRanges OR sourceTags.
compute.beta.firewall;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.firewall;kind;string;[Output Ony] Type of the resource. Always compute#firewall for firewall rules.
compute.beta.firewall;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.firewall;network;string;URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network projects/myproject/global/networks/my-network global/networks/default
compute.beta.firewall;priority;integer;Priority for this rule. This is an integer between 0 and 65535, both inclusive. When not specified, the value assumed is 1000. Relative priorities determine precedence of conflicting rules. Lower value of priority implies higher precedence (eg, a rule with priority 0 has higher precedence than a rule with priority 1). DENY rules take precedence over ALLOW rules having equal priority.
compute.beta.firewall;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.firewall;sourceRanges[];list;If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.
compute.beta.firewall;sourceTags[];list;If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.
compute.beta.firewall;targetTags[];list;A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.
compute.beta.forwardingRule;IPAddress;string;The IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IP from the same scope (global or regional) will be assigned. When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule. Only IPv4 is supported.
compute.beta.forwardingRule;IPProtocol;string;The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP. When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
compute.beta.forwardingRule;backendService;string;This field is not used for external load balancing. For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
compute.beta.forwardingRule;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.forwardingRule;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.forwardingRule;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.forwardingRule;ipVersion;string;The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for a global forwarding rule.
compute.beta.forwardingRule;kind;string;[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
compute.beta.forwardingRule;loadBalancingScheme;string;This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
compute.beta.forwardingRule;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.forwardingRule;network;string;This field is not used for external load balancing. For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
compute.beta.forwardingRule;portRange;string;This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges. Some types of forwarding target have constraints on the acceptable ports: TargetHttpProxy: 80, 8080 TargetHttpsProxy: 443 TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetVpnGateway: 500, 4500
compute.beta.forwardingRule;ports[];list;This field is used along with the backend_service field for internal load balancing. When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule. You may specify a maximum of up to 5 ports.
compute.beta.forwardingRule;region;string;[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.
compute.beta.forwardingRule;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.forwardingRule;subnetwork;string;This field is not used for external load balancing. For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule. If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
compute.beta.forwardingRule;target;string;The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. This field is not used for internal load balancing.
compute.beta.globalAddress;address;string;The static external IP address represented by this resource.
compute.beta.globalAddress;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.globalAddress;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.globalAddress;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.globalAddress;ipVersion;string;The IP Version that will be used by this address. Valid options are IPV4 or IPV6. This can only be specified for a global address.
compute.beta.globalAddress;kind;string;[Output Only] Type of the resource. Always compute#address for addresses.
compute.beta.globalAddress;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.globalAddress;region;string;[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.
compute.beta.globalAddress;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.globalAddress;status;string;[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
compute.beta.globalAddress;users[];list;[Output Only] The URLs of the resources that are using this address.
compute.beta.globalForwardingRule;IPAddress;string;The IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IP from the same scope (global or regional) will be assigned. When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule.
compute.beta.globalForwardingRule;IPProtocol;string;The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP. When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
compute.beta.globalForwardingRule;backendService;string;This field is not used for external load balancing. For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
compute.beta.globalForwardingRule;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.globalForwardingRule;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.globalForwardingRule;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.globalForwardingRule;ipVersion;string;The IP Version that will be used by this forwarding rule. Valid options are IPV4 or IPV6. This can only be specified for a global forwarding rule.
compute.beta.globalForwardingRule;kind;string;[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
compute.beta.globalForwardingRule;loadBalancingScheme;string;This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
compute.beta.globalForwardingRule;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.globalForwardingRule;network;string;This field is not used for external load balancing. For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
compute.beta.globalForwardingRule;portRange;string;This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges. Some types of forwarding target have constraints on the acceptable ports: TargetHttpProxy: 80, 8080 TargetHttpsProxy: 443 TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetVpnGateway: 500, 4500
compute.beta.globalForwardingRule;ports[];list;This field is used along with the backend_service field for internal load balancing. When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule. You may specify a maximum of up to 5 ports.
compute.beta.globalForwardingRule;region;string;[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.
compute.beta.globalForwardingRule;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.globalForwardingRule;subnetwork;string;This field is not used for external load balancing. For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule. If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
compute.beta.globalForwardingRule;target;string;The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. This field is not used for internal load balancing.
compute.beta.healthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.beta.healthCheck;creationTimestamp;string;[Output Only] Creation timestamp in 3339 text format.
compute.beta.healthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.healthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.beta.healthCheck;httpHealthCheck;nested object;None
compute.beta.healthCheck;httpHealthCheck.host;string;The value of the host header in the HTTP health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
compute.beta.healthCheck;httpHealthCheck.port;integer;The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
compute.beta.healthCheck;httpHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.beta.healthCheck;httpHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.beta.healthCheck;httpHealthCheck.requestPath;string;The request path of the HTTP health check request. The default value is /.
compute.beta.healthCheck;httpsHealthCheck;nested object;None
compute.beta.healthCheck;httpsHealthCheck.host;string;The value of the host header in the HTTPS health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
compute.beta.healthCheck;httpsHealthCheck.port;integer;The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
compute.beta.healthCheck;httpsHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.beta.healthCheck;httpsHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.beta.healthCheck;httpsHealthCheck.requestPath;string;The request path of the HTTPS health check request. The default value is /.
compute.beta.healthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.healthCheck;kind;string;Type of the resource.
compute.beta.healthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.healthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.healthCheck;sslHealthCheck;nested object;None
compute.beta.healthCheck;sslHealthCheck.port;integer;The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
compute.beta.healthCheck;sslHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.beta.healthCheck;sslHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.beta.healthCheck;sslHealthCheck.request;string;The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
compute.beta.healthCheck;sslHealthCheck.response;string;The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
compute.beta.healthCheck;tcpHealthCheck;nested object;None
compute.beta.healthCheck;tcpHealthCheck.port;integer;The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
compute.beta.healthCheck;tcpHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.beta.healthCheck;tcpHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.beta.healthCheck;tcpHealthCheck.request;string;The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
compute.beta.healthCheck;tcpHealthCheck.response;string;The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
compute.beta.healthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
compute.beta.healthCheck;type;string;Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
compute.beta.healthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.beta.httpHealthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.beta.httpHealthCheck;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.httpHealthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.httpHealthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.beta.httpHealthCheck;host;string;The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
compute.beta.httpHealthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.httpHealthCheck;kind;string;[Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health checks.
compute.beta.httpHealthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.httpHealthCheck;port;integer;The TCP port number for the HTTP health check request. The default value is 80.
compute.beta.httpHealthCheck;requestPath;string;The request path of the HTTP health check request. The default value is /.
compute.beta.httpHealthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.httpHealthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
compute.beta.httpHealthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.beta.httpsHealthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.beta.httpsHealthCheck;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.httpsHealthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.httpsHealthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.beta.httpsHealthCheck;host;string;The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
compute.beta.httpsHealthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.httpsHealthCheck;kind;string;Type of the resource.
compute.beta.httpsHealthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.httpsHealthCheck;port;integer;The TCP port number for the HTTPS health check request. The default value is 443.
compute.beta.httpsHealthCheck;requestPath;string;The request path of the HTTPS health check request. The default value is "/".
compute.beta.httpsHealthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.httpsHealthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have a greater value than checkIntervalSec.
compute.beta.httpsHealthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.beta.image;archiveSizeBytes;long;Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
compute.beta.image;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.image;deprecated;nested object;The deprecation status associated with this image.
compute.beta.image;deprecated.deleted;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.
compute.beta.image;deprecated.deprecated;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.
compute.beta.image;deprecated.obsolete;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.
compute.beta.image;deprecated.replacement;string;The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.
compute.beta.image;deprecated.state;string;The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
compute.beta.image;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.image;diskSizeGb;long;Size of the image when restored onto a persistent disk (in GB).
compute.beta.image;family;string;The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
compute.beta.image;guestOsFeatures[];list;A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE. For new Windows images, the server might also populate this field with the value WINDOWS, to indicate that this is a Windows image. This value is purely informational and does not enable or disable any features.
compute.beta.image;guestOsFeatures[].type;string;The type of supported feature. Currenty only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image. This value is purely informational and does not enable or disable any features.
compute.beta.image;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.image;imageEncryptionKey;nested object;Encrypts the image using a customer-supplied encryption key. After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
compute.beta.image;imageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.image;imageEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.image;imageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.image;kind;string;[Output Only] Type of the resource. Always compute#image for images.
compute.beta.image;labelFingerprint;bytes;A fingerprint for the labels being applied to this image, which is essentially a hash of the labels used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update labels. You must always provide an up-to-date fingerprint hash in order to update or change labels. To see the latest fingerprint, make a get() request to retrieve an image.
compute.beta.image;labels;object;Labels to apply to this image. These can be later modified by the setLabels method. Each label key/value pair must comply with RFC1035. Label values may be empty.
compute.beta.image;labels.(key);string;The key of a label.
compute.beta.image;licenses[];list;Any applicable license URI.
compute.beta.image;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.image;rawDisk;object;The parameters of the raw disk image.
compute.beta.image;rawDisk.containerType;string;The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
compute.beta.image;rawDisk.sha1Checksum;string;An optional SHA1 checksum of the disk image before unpackaging. This is provided by the client when the disk image is created.
compute.beta.image;rawDisk.source;string;The full Google Cloud Storage URL where the disk image is stored. You must provide either this property or the sourceDisk property but not both.
compute.beta.image;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.image;sourceDisk;string;URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk projects/project/zones/zone/disks/disk zones/zone/disks/disk
compute.beta.image;sourceDiskEncryptionKey;nested object;The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
compute.beta.image;sourceDiskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.image;sourceDiskEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.image;sourceDiskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.image;sourceDiskId;string;The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
compute.beta.image;sourceType;string;The type of the image used to create this disk. The default and only value is RAW
compute.beta.image;status;string;[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
compute.beta.instance;canIpForward;boolean;Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding.
compute.beta.instance;cpuPlatform;string;[Output Only] The CPU platform used by this instance.
compute.beta.instance;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.instance;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.instance;disks[];list;Array of disks associated with this instance. Persistent disks must be created before you can assign them.
compute.beta.instance;disks[].autoDelete;boolean;Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
compute.beta.instance;disks[].boot;boolean;Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
compute.beta.instance;disks[].deviceName;string;Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
compute.beta.instance;disks[].diskEncryptionKey;nested object;Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
compute.beta.instance;disks[].diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.instance;disks[].diskEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.instance;disks[].diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.instance;disks[].index;integer;Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.
compute.beta.instance;disks[].initializeParams;nested object;[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
compute.beta.instance;disks[].initializeParams.diskName;string;Specifies the disk name. If not specified, the default is to use the name of the instance.
compute.beta.instance;disks[].initializeParams.diskSizeGb;long;Specifies the size of the disk in base-2 GB.
compute.beta.instance;disks[].initializeParams.diskStorageType;string;[Deprecated] Storage type of the disk.
compute.beta.instance;disks[].initializeParams.diskType;string;Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType projects/project/zones/zone/diskTypes/diskType zones/zone/diskTypes/diskType Note that for InstanceTemplate, this is the name of the disk type, not URL.
compute.beta.instance;disks[].initializeParams.sourceImage;string;The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family If the source image is deleted later, this field will not be set.
compute.beta.instance;disks[].initializeParams.sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
compute.beta.instance;disks[].initializeParams.sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.instance;disks[].initializeParams.sourceImageEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.instance;disks[].initializeParams.sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.instance;disks[].interface;string;Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
compute.beta.instance;disks[].kind;string;[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
compute.beta.instance;disks[].licenses[];list;[Output Only] Any valid publicly visible licenses.
compute.beta.instance;disks[].mode;string;The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
compute.beta.instance;disks[].source;string;Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
compute.beta.instance;disks[].type;string;Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
compute.beta.instance;guestAccelerators[];list;List of the type and count of accelerator cards attached to the instance.
compute.beta.instance;guestAccelerators[].acceleratorCount;integer;The number of the guest accelerator cards exposed to this instance.
compute.beta.instance;guestAccelerators[].acceleratorType;string;Full or partial URL of the accelerator type resource to expose to this instance.
compute.beta.instance;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.instance;kind;string;[Output Only] Type of the resource. Always compute#instance for instances.
compute.beta.instance;labelFingerprint;bytes;A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata. To see the latest fingerprint, make get() request to the instance.
compute.beta.instance;labels;object;Labels to apply to this instance. These can be later modified by the setLabels method.
compute.beta.instance;labels.(key);string;The key of a label.
compute.beta.instance;machineType;string;Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
compute.beta.instance;metadata;nested object;The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
compute.beta.instance;metadata.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
compute.beta.instance;metadata.items[];list;Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
compute.beta.instance;metadata.items[].key;string;Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
compute.beta.instance;metadata.items[].value;string;Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.
compute.beta.instance;metadata.kind;string;[Output Only] Type of the resource. Always compute#metadata for metadata.
compute.beta.instance;name;string;The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.instance;networkInterfaces[];list;An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Only one interface is supported per instance.
compute.beta.instance;networkInterfaces[].accessConfigs[];list;An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
compute.beta.instance;networkInterfaces[].accessConfigs[].kind;string;[Output Only] Type of the resource. Always compute#accessConfig for access configs.
compute.beta.instance;networkInterfaces[].accessConfigs[].name;string;The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.
compute.beta.instance;networkInterfaces[].accessConfigs[].natIP;string;An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
compute.beta.instance;networkInterfaces[].accessConfigs[].type;string;The type of configuration. The default and only option is ONE_TO_ONE_NAT.
compute.beta.instance;networkInterfaces[].aliasIpRanges[];list;An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.
compute.beta.instance;networkInterfaces[].aliasIpRanges[].ipCidrRange;string;The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
compute.beta.instance;networkInterfaces[].aliasIpRanges[].subnetworkRangeName;string;Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.
compute.beta.instance;networkInterfaces[].kind;string;[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
compute.beta.instance;networkInterfaces[].name;string;[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.
compute.beta.instance;networkInterfaces[].network;string;URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred. This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/global/networks/network projects/project/global/networks/network global/networks/default
compute.beta.instance;networkInterfaces[].networkIP;string;An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
compute.beta.instance;networkInterfaces[].subnetwork;string;The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork regions/region/subnetworks/subnetwork
compute.beta.instance;scheduling;nested object;Sets the scheduling options for this instance.
compute.beta.instance;scheduling.automaticRestart;boolean;Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
compute.beta.instance;scheduling.onHostMaintenance;string;Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
compute.beta.instance;scheduling.preemptible;boolean;Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.
compute.beta.instance;selfLink;string;[Output Only] Server-defined URL for this resource.
compute.beta.instance;serviceAccounts[];list;A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
compute.beta.instance;serviceAccounts[].email;string;Email address of the service account.
compute.beta.instance;serviceAccounts[].scopes[];list;The list of scopes to be made available for this service account.
compute.beta.instance;status;string;[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.
compute.beta.instance;statusMessage;string;[Output Only] An optional, human-readable explanation of the status.
compute.beta.instance;tags;nested object;A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
compute.beta.instance;tags.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata. To see the latest fingerprint, make get() request to the instance.
compute.beta.instance;tags.items[];list;An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
compute.beta.instance;zone;string;[Output Only] URL of the zone where the instance resides.
compute.beta.instanceGroup;creationTimestamp;string;[Output Only] The creation timestamp for this instance group in RFC3339 text format.
compute.beta.instanceGroup;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.instanceGroup;fingerprint;bytes;[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
compute.beta.instanceGroup;id;unsigned long;[Output Only] A unique identifier for this instance group, generated by the server.
compute.beta.instanceGroup;kind;string;[Output Only] The resource type, which is always compute#instanceGroup for instance groups.
compute.beta.instanceGroup;name;string;The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.instanceGroup;namedPorts[];list;Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
compute.beta.instanceGroup;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.instanceGroup;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.beta.instanceGroup;network;string;The URL of the network to which all instances in the instance group belong.
compute.beta.instanceGroup;region;string;The URL of the region where the instance group is located (for regional resources).
compute.beta.instanceGroup;selfLink;string;[Output Only] The URL for this instance group. The server generates this URL.
compute.beta.instanceGroup;size;integer;[Output Only] The total number of instances in the instance group.
compute.beta.instanceGroup;subnetwork;string;The URL of the subnetwork to which all instances in the instance group belong.
compute.beta.instanceGroup;zone;string;[Output Only] The URL of the zone where the instance group is located (for zonal resources).
compute.beta.instanceGroupManager;autoHealingPolicies[];list;The autohealing policy for this managed instance group. You can specify only one value.
compute.beta.instanceGroupManager;autoHealingPolicies[].healthCheck;string;The URL for the health check that signals autohealing.
compute.beta.instanceGroupManager;autoHealingPolicies[].initialDelaySec;integer;The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
compute.beta.instanceGroupManager;baseInstanceName;string;The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
compute.beta.instanceGroupManager;creationTimestamp;string;[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
compute.beta.instanceGroupManager;currentActions;nested object;[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
compute.beta.instanceGroupManager;currentActions.abandoning;integer;[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
compute.beta.instanceGroupManager;currentActions.creating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
compute.beta.instanceGroupManager;currentActions.creatingWithoutRetries;integer;[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
compute.beta.instanceGroupManager;currentActions.deleting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
compute.beta.instanceGroupManager;currentActions.none;integer;[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
compute.beta.instanceGroupManager;currentActions.recreating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
compute.beta.instanceGroupManager;currentActions.refreshing;integer;[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
compute.beta.instanceGroupManager;currentActions.restarting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
compute.beta.instanceGroupManager;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.instanceGroupManager;failoverAction;string;The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
compute.beta.instanceGroupManager;fingerprint;bytes;[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.
compute.beta.instanceGroupManager;id;unsigned long;[Output Only] A unique identifier for this resource type. The server generates this identifier.
compute.beta.instanceGroupManager;instanceGroup;string;[Output Only] The URL of the Instance Group resource.
compute.beta.instanceGroupManager;instanceTemplate;string;The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
compute.beta.instanceGroupManager;kind;string;[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
compute.beta.instanceGroupManager;name;string;The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.instanceGroupManager;namedPorts[];list;Named ports configured for the Instance Groups complementary to this Instance Group Manager.
compute.beta.instanceGroupManager;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.instanceGroupManager;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.beta.instanceGroupManager;region;string;[Output Only] The URL of the region where the managed instance group resides (for regional resources).
compute.beta.instanceGroupManager;selfLink;string;[Output Only] The URL for this managed instance group. The server defines this URL.
compute.beta.instanceGroupManager;serviceAccount;string;Service account will be used as credentials for all operations performed by managed instance group on instances. The service accounts needs all permissions required to create and delete instances. When not specified, the service account {projectNumber}@cloudservices.gserviceaccount.com will be used.
compute.beta.instanceGroupManager;targetPools[];list;The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
compute.beta.instanceGroupManager;targetSize;integer;The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
compute.beta.instanceGroupManager;zone;string;[Output Only] The URL of the zone where the managed instance group is located (for zonal resources).
compute.beta.instanceTemplate;creationTimestamp;string;[Output Only] The creation timestamp for this instance template in RFC3339 text format.
compute.beta.instanceTemplate;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.instanceTemplate;id;unsigned long;[Output Only] A unique identifier for this instance template. The server defines this identifier.
compute.beta.instanceTemplate;kind;string;[Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
compute.beta.instanceTemplate;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.instanceTemplate;properties;nested object;The instance properties for this instance template.
compute.beta.instanceTemplate;properties.canIpForward;boolean;Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding for instances documentation for more information.
compute.beta.instanceTemplate;properties.description;string;An optional text description for the instances that are created from this instance template.
compute.beta.instanceTemplate;properties.disks[];list;An array of disks that are associated with the instances that are created from this template.
compute.beta.instanceTemplate;properties.disks[].autoDelete;boolean;Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
compute.beta.instanceTemplate;properties.disks[].boot;boolean;Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
compute.beta.instanceTemplate;properties.disks[].deviceName;string;Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
compute.beta.instanceTemplate;properties.disks[].diskEncryptionKey;nested object;Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
compute.beta.instanceTemplate;properties.disks[].diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.instanceTemplate;properties.disks[].diskEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.instanceTemplate;properties.disks[].diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.instanceTemplate;properties.disks[].index;integer;Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.
compute.beta.instanceTemplate;properties.disks[].initializeParams;nested object;[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
compute.beta.instanceTemplate;properties.disks[].initializeParams.diskName;string;Specifies the disk name. If not specified, the default is to use the name of the instance.
compute.beta.instanceTemplate;properties.disks[].initializeParams.diskSizeGb;long;Specifies the size of the disk in base-2 GB.
compute.beta.instanceTemplate;properties.disks[].initializeParams.diskStorageType;string;[Deprecated] Storage type of the disk.
compute.beta.instanceTemplate;properties.disks[].initializeParams.diskType;string;Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType projects/project/zones/zone/diskTypes/diskType zones/zone/diskTypes/diskType Note that for InstanceTemplate, this is the name of the disk type, not URL.
compute.beta.instanceTemplate;properties.disks[].initializeParams.sourceImage;string;The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family If the source image is deleted later, this field will not be set.
compute.beta.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
compute.beta.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.beta.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey.rsaEncryptedKey;string;Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit customer-supplied encryption key to either encrypt or decrypt this resource. The key must meet the following requirements before you can provide it to Compute Engine: The key is wrapped using a RSA public key certificate provided by Google. After being wrapped, the key must be encoded in RFC 4648 base64 encoding. Get the RSA public key certificate provided by Google at: https://cloud-certs.storage.googleapis.com/google-cloud-csek-ingress.pem
compute.beta.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.beta.instanceTemplate;properties.disks[].interface;string;Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
compute.beta.instanceTemplate;properties.disks[].kind;string;[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
compute.beta.instanceTemplate;properties.disks[].licenses[];list;[Output Only] Any valid publicly visible licenses.
compute.beta.instanceTemplate;properties.disks[].mode;string;The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
compute.beta.instanceTemplate;properties.disks[].source;string;Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
compute.beta.instanceTemplate;properties.disks[].type;string;Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
compute.beta.instanceTemplate;properties.labels;object;Labels to apply to instances that are created from this template.
compute.beta.instanceTemplate;properties.labels.(key);string;None
compute.beta.instanceTemplate;properties.machineType;string;The machine type to use for instances that are created from this template.
compute.beta.instanceTemplate;properties.metadata;nested object;The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
compute.beta.instanceTemplate;properties.metadata.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
compute.beta.instanceTemplate;properties.metadata.items[];list;Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
compute.beta.instanceTemplate;properties.metadata.items[].key;string;Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
compute.beta.instanceTemplate;properties.metadata.items[].value;string;Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.
compute.beta.instanceTemplate;properties.metadata.kind;string;[Output Only] Type of the resource. Always compute#metadata for metadata.
compute.beta.instanceTemplate;properties.networkInterfaces[];list;An array of network access configurations for this interface.
compute.beta.instanceTemplate;properties.networkInterfaces[].accessConfigs[];list;An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
compute.beta.instanceTemplate;properties.networkInterfaces[].accessConfigs[].kind;string;[Output Only] Type of the resource. Always compute#accessConfig for access configs.
compute.beta.instanceTemplate;properties.networkInterfaces[].accessConfigs[].name;string;Name of this access configuration.
compute.beta.instanceTemplate;properties.networkInterfaces[].accessConfigs[].natIP;string;An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
compute.beta.instanceTemplate;properties.networkInterfaces[].accessConfigs[].type;string;The type of configuration. The default and only option is ONE_TO_ONE_NAT.
compute.beta.instanceTemplate;properties.networkInterfaces[].aliasIpRanges[];list;An array of alias IP ranges for this network interface. Can only be specified for network interfaces on subnet-mode networks.
compute.beta.instanceTemplate;properties.networkInterfaces[].aliasIpRanges[].ipCidrRange;string;The IP CIDR range represented by this alias IP range. This IP CIDR range must belong to the specified subnetwork and cannot contain IP addresses reserved by system or used by other network interfaces. This range may be a single IP address (e.g. 10.2.3.4), a netmask (e.g. /24) or a CIDR format string (e.g. 10.1.2.0/24).
compute.beta.instanceTemplate;properties.networkInterfaces[].aliasIpRanges[].subnetworkRangeName;string;Optional subnetwork secondary range name specifying the secondary range from which to allocate the IP CIDR range for this alias IP range. If left unspecified, the primary range of the subnetwork will be used.
compute.beta.instanceTemplate;properties.networkInterfaces[].kind;string;[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
compute.beta.instanceTemplate;properties.networkInterfaces[].name;string;[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.
compute.beta.instanceTemplate;properties.networkInterfaces[].network;string;URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred. This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/global/networks/network projects/project/global/networks/network global/networks/default
compute.beta.instanceTemplate;properties.networkInterfaces[].networkIP;string;An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
compute.beta.instanceTemplate;properties.networkInterfaces[].subnetwork;string;The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork regions/region/subnetworks/subnetwork
compute.beta.instanceTemplate;properties.scheduling;nested object;Specifies the scheduling options for the instances that are created from this template.
compute.beta.instanceTemplate;properties.scheduling.automaticRestart;boolean;Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.
compute.beta.instanceTemplate;properties.scheduling.onHostMaintenance;string;Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
compute.beta.instanceTemplate;properties.scheduling.preemptible;boolean;Whether the instance is preemptible.
compute.beta.instanceTemplate;properties.serviceAccounts[];list;A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.
compute.beta.instanceTemplate;properties.serviceAccounts[].email;string;Email address of the service account.
compute.beta.instanceTemplate;properties.serviceAccounts[].scopes[];list;The list of scopes to be made available for this service account.
compute.beta.instanceTemplate;properties.tags;nested object;A list of tags to apply to the instances that are created from this template. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
compute.beta.instanceTemplate;properties.tags.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata. To see the latest fingerprint, make get() request to the instance.
compute.beta.instanceTemplate;properties.tags.items[];list;An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
compute.beta.instanceTemplate;selfLink;string;[Output Only] The URL for this instance template. The server defines this URL.
compute.beta.network;IPv4Range;string;The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
compute.beta.network;autoCreateSubnetworks;boolean;When set to true, the network is created in "auto subnet mode". When set to false, the network is in "custom subnet mode". In "auto subnet mode", a newly created network is assigned the default CIDR of 10.128.0.0/9 and it automatically creates one subnetwork per region.
compute.beta.network;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.network;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.network;gatewayIPv4;string;A gateway address for default routing to other networks. This value is read only and is selected by the Google Compute Engine, typically as the first usable address in the IPv4Range.
compute.beta.network;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.network;kind;string;[Output Only] Type of the resource. Always compute#network for networks.
compute.beta.network;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.network;peerings[];list;[Output Only] List of network peerings for the resource.
compute.beta.network;peerings[].autoCreateRoutes;boolean;Whether full mesh connectivity is created and managed automatically. When it is set to true, Google Compute Engine will automatically create and manage the routes between two networks when the state is ACTIVE. Otherwise, user needs to create routes manually to route packets to peer network.
compute.beta.network;peerings[].name;string;Name of this peering. Provided by the client when the peering is created. The name must comply with RFC1035. Specifically, the name must be 1-63 characters long and match regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all the following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.network;peerings[].network;string;The URL of the peer network. It can be either full URL or partial URL. The peer network may belong to a different project. If the partial URL does not contain project, it is assumed that the peer network is in the same project as the current network.
compute.beta.network;peerings[].state;string;[Output Only] State for the peering.
compute.beta.network;peerings[].stateDetails;string;[Output Only] Details about the current state of the peering.
compute.beta.network;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.network;subnetworks[];list;[Output Only] Server-defined fully-qualified URLs for all subnetworks in this network.
compute.beta.regionAutoscaler;autoscalingPolicy;nested object;The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
compute.beta.regionAutoscaler;autoscalingPolicy.coolDownPeriodSec;integer;The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
compute.beta.regionAutoscaler;autoscalingPolicy.cpuUtilization;nested object;Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
compute.beta.regionAutoscaler;autoscalingPolicy.cpuUtilization.utilizationTarget;double;The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
compute.beta.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[];list;Configuration parameters of autoscaling based on a custom metric.
compute.beta.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].metric;string;The identifier of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric. The metric must also have a label of compute.googleapis.com/resource_id with the value of the instance's unique ID, although this alone does not guarantee that the metric is valid. For example, the following is a valid metric: compute.googleapis.com/instance/network/received_bytes_count The following is not a valid metric because it does not increase or decrease based on usage: compute.googleapis.com/instance/cpu/reserved_cores
compute.beta.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTarget;double;Target value of the metric which autoscaler should maintain. Must be a positive value.
compute.beta.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTargetType;string;Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.
compute.beta.regionAutoscaler;autoscalingPolicy.loadBalancingUtilization;nested object;Configuration parameters of autoscaling based on load balancer.
compute.beta.regionAutoscaler;autoscalingPolicy.loadBalancingUtilization.utilizationTarget;double;Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.
compute.beta.regionAutoscaler;autoscalingPolicy.maxNumReplicas;integer;The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
compute.beta.regionAutoscaler;autoscalingPolicy.minNumReplicas;integer;The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.
compute.beta.regionAutoscaler;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.regionAutoscaler;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.regionAutoscaler;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.regionAutoscaler;kind;string;[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
compute.beta.regionAutoscaler;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.regionAutoscaler;region;string;[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
compute.beta.regionAutoscaler;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.regionAutoscaler;status;string;[Output Only] The status of the autoscaler configuration.
compute.beta.regionAutoscaler;statusDetails[];list;[Output Only] Human-readable details about the current state of the autoscaler. Read the documentation for Commonly returned status messages for examples of status messages you might encounter.
compute.beta.regionAutoscaler;statusDetails[].message;string;The status message.
compute.beta.regionAutoscaler;statusDetails[].type;string;The type of error returned.
compute.beta.regionAutoscaler;target;string;URL of the managed instance group that this autoscaler will scale.
compute.beta.regionAutoscaler;zone;string;[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
compute.beta.regionBackendService;affinityCookieTtlSec;integer;Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.regionBackendService;backends[];list;The list of backends that serve this BackendService.
compute.beta.regionBackendService;backends[].balancingMode;string;Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL). This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].capacityScaler;float;A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0]. This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.regionBackendService;backends[].group;string;The fully-qualified URL of a zonal Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource. Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL. When the BackendService has load balancing scheme INTERNAL, the instance group must be in a zone within the same region as the BackendService.
compute.beta.regionBackendService;backends[].maxConnections;integer;The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].maxConnectionsPerInstance;integer;The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].maxRate;integer;The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].maxRatePerInstance;float;The max requests per second (RPS) that a single backend instance can handle.This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.beta.regionBackendService;backends[].maxUtilization;float;Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0]. This cannot be used for internal load balancing.
compute.beta.regionBackendService;connectionDraining;nested object;None
compute.beta.regionBackendService;connectionDraining.drainingTimeoutSec;integer;Time for which instance will be drained (not accept new connections, but still work to finish started).
compute.beta.regionBackendService;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.regionBackendService;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.regionBackendService;enableCDN;boolean;If true, enable Cloud CDN for this BackendService. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.regionBackendService;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
compute.beta.regionBackendService;healthChecks[];list;The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
compute.beta.regionBackendService;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.regionBackendService;kind;string;[Output Only] Type of resource. Always compute#backendService for backend services.
compute.beta.regionBackendService;loadBalancingScheme;string;None
compute.beta.regionBackendService;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.regionBackendService;port;integer;Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. This cannot be used for internal load balancing.
compute.beta.regionBackendService;portName;string;Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL. When the load balancing scheme is INTERNAL, this field is not used.
compute.beta.regionBackendService;protocol;string;The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, TCP and SSL. The default is HTTP. For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
compute.beta.regionBackendService;region;string;[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.
compute.beta.regionBackendService;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.regionBackendService;sessionAffinity;string;Type of session affinity to use. The default is NONE. When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE. When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO. When the protocol is UDP, this field is not used.
compute.beta.regionBackendService;timeoutSec;integer;How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.
compute.beta.regionInstanceGroup;creationTimestamp;string;[Output Only] The creation timestamp for this instance group in RFC3339 text format.
compute.beta.regionInstanceGroup;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.regionInstanceGroup;fingerprint;bytes;[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
compute.beta.regionInstanceGroup;id;unsigned long;[Output Only] A unique identifier for this instance group, generated by the server.
compute.beta.regionInstanceGroup;kind;string;[Output Only] The resource type, which is always compute#instanceGroup for instance groups.
compute.beta.regionInstanceGroup;name;string;The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.regionInstanceGroup;namedPorts[];list;Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
compute.beta.regionInstanceGroup;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.regionInstanceGroup;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.beta.regionInstanceGroup;network;string;The URL of the network to which all instances in the instance group belong.
compute.beta.regionInstanceGroup;region;string;The URL of the region where the instance group is located (for regional resources).
compute.beta.regionInstanceGroup;selfLink;string;[Output Only] The URL for this instance group. The server generates this URL.
compute.beta.regionInstanceGroup;size;integer;[Output Only] The total number of instances in the instance group.
compute.beta.regionInstanceGroup;subnetwork;string;The URL of the subnetwork to which all instances in the instance group belong.
compute.beta.regionInstanceGroup;zone;string;[Output Only] The URL of the zone where the instance group is located (for zonal resources).
compute.beta.regionInstanceGroupManager;autoHealingPolicies[];list;The autohealing policy for this managed instance group. You can specify only one value.
compute.beta.regionInstanceGroupManager;autoHealingPolicies[].healthCheck;string;The URL for the health check that signals autohealing.
compute.beta.regionInstanceGroupManager;autoHealingPolicies[].initialDelaySec;integer;The number of seconds that the managed instance group waits before it applies autohealing policies to new instances or recently recreated instances. This initial delay allows instances to initialize and run their startup scripts before the instance group determines that they are UNHEALTHY. This prevents the managed instance group from recreating its instances prematurely. This value must be from range [0, 3600].
compute.beta.regionInstanceGroupManager;baseInstanceName;string;The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
compute.beta.regionInstanceGroupManager;creationTimestamp;string;[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
compute.beta.regionInstanceGroupManager;currentActions;nested object;[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
compute.beta.regionInstanceGroupManager;currentActions.abandoning;integer;[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
compute.beta.regionInstanceGroupManager;currentActions.creating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
compute.beta.regionInstanceGroupManager;currentActions.creatingWithoutRetries;integer;[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
compute.beta.regionInstanceGroupManager;currentActions.deleting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
compute.beta.regionInstanceGroupManager;currentActions.none;integer;[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
compute.beta.regionInstanceGroupManager;currentActions.recreating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
compute.beta.regionInstanceGroupManager;currentActions.refreshing;integer;[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
compute.beta.regionInstanceGroupManager;currentActions.restarting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
compute.beta.regionInstanceGroupManager;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.regionInstanceGroupManager;failoverAction;string;The action to perform in case of zone failure. Only one value is supported, NO_FAILOVER. The default is NO_FAILOVER.
compute.beta.regionInstanceGroupManager;fingerprint;bytes;[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.
compute.beta.regionInstanceGroupManager;id;unsigned long;[Output Only] A unique identifier for this resource type. The server generates this identifier.
compute.beta.regionInstanceGroupManager;instanceGroup;string;[Output Only] The URL of the Instance Group resource.
compute.beta.regionInstanceGroupManager;instanceTemplate;string;The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
compute.beta.regionInstanceGroupManager;kind;string;[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
compute.beta.regionInstanceGroupManager;name;string;The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.regionInstanceGroupManager;namedPorts[];list;Named ports configured for the Instance Groups complementary to this Instance Group Manager.
compute.beta.regionInstanceGroupManager;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.beta.regionInstanceGroupManager;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.beta.regionInstanceGroupManager;region;string;[Output Only] The URL of the region where the managed instance group resides (for regional resources).
compute.beta.regionInstanceGroupManager;selfLink;string;[Output Only] The URL for this managed instance group. The server defines this URL.
compute.beta.regionInstanceGroupManager;serviceAccount;string;Service account will be used as credentials for all operations performed by managed instance group on instances. The service accounts needs all permissions required to create and delete instances. When not specified, the service account {projectNumber}@cloudservices.gserviceaccount.com will be used.
compute.beta.regionInstanceGroupManager;targetPools[];list;The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
compute.beta.regionInstanceGroupManager;targetSize;integer;The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
compute.beta.regionInstanceGroupManager;zone;string;[Output Only] The URL of the zone where the managed instance group is located (for zonal resources).
compute.beta.route;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.route;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.route;destRange;string;The destination range of outgoing packets that this route applies to. Only IPv4 is supported.
compute.beta.route;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.route;kind;string;[Output Only] Type of this resource. Always compute#routes for Route resources.
compute.beta.route;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.route;network;string;Fully-qualified URL of the network that this route applies to.
compute.beta.route;nextHopGateway;string;The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/<project-id>/global/gateways/default-internet-gateway
compute.beta.route;nextHopInstance;string;The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
compute.beta.route;nextHopIp;string;The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
compute.beta.route;nextHopNetwork;string;[Output Only] The URL of the local network if it should handle matching packets.
compute.beta.route;nextHopVpnTunnel;string;The URL to a VpnTunnel that should handle matching packets.
compute.beta.route;priority;unsigned integer;The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.
compute.beta.route;selfLink;string;[Output Only] Server-defined fully-qualified URL for this resource.
compute.beta.route;tags[];list;A list of instance tags to which this route applies.
compute.beta.route;warnings[];list;[Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
compute.beta.route;warnings[].code;string;[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
compute.beta.route;warnings[].data[];list;[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
compute.beta.route;warnings[].data[].key;string;[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
compute.beta.route;warnings[].data[].value;string;[Output Only] A warning data value corresponding to the key.
compute.beta.route;warnings[].message;string;[Output Only] A human-readable description of the warning code.
compute.beta.router;bgp;nested object;BGP information specific to this router.
compute.beta.router;bgp.asn;unsigned integer;Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.
compute.beta.router;bgpPeers[];list;BGP information that needs to be configured into the routing stack to establish the BGP peering. It must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273.
compute.beta.router;bgpPeers[].advertisedRoutePriority;unsigned integer;The priority of routes advertised to this BGP peer. In the case where there is more than one matching route of maximum length, the routes with lowest priority value win.
compute.beta.router;bgpPeers[].interfaceName;string;Name of the interface the BGP peer is associated with.
compute.beta.router;bgpPeers[].ipAddress;string;IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
compute.beta.router;bgpPeers[].name;string;Name of this BGP peer. The name must be 1-63 characters long and comply with RFC1035.
compute.beta.router;bgpPeers[].peerAsn;unsigned integer;Peer BGP Autonomous System Number (ASN). For VPN use case, this value can be different for every tunnel.
compute.beta.router;bgpPeers[].peerIpAddress;string;IP address of the BGP interface outside Google cloud. Only IPv4 is supported.
compute.beta.router;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.router;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.router;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.router;interfaces[];list;Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP address and IP address range (e.g. ipRange), or both.
compute.beta.router;interfaces[].ipRange;string;IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.
compute.beta.router;interfaces[].linkedVpnTunnel;string;URI of linked VPN tunnel. It must be in the same region as the router. Each interface can have at most one linked resource.
compute.beta.router;interfaces[].name;string;Name of this interface entry. The name must be 1-63 characters long and comply with RFC1035.
compute.beta.router;kind;string;[Output Only] Type of resource. Always compute#router for routers.
compute.beta.router;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.router;network;string;URI of the network to which this router belongs.
compute.beta.router;region;string;[Output Only] URI of the region where the router resides.
compute.beta.router;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.sslCertificate;certificate;string;A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
compute.beta.sslCertificate;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.sslCertificate;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.sslCertificate;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.sslCertificate;kind;string;[Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
compute.beta.sslCertificate;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.sslCertificate;privateKey;string;A write-only private key in PEM format. Only insert requests will include this field.
compute.beta.sslCertificate;selfLink;string;[Output only] Server-defined URL for the resource.
compute.beta.subnetwork;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.subnetwork;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.subnetwork;gatewayAddress;string;[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork.
compute.beta.subnetwork;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.subnetwork;ipCidrRange;string;The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported.
compute.beta.subnetwork;kind;string;[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.
compute.beta.subnetwork;name;string;The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.subnetwork;network;string;The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. Only networks that are in the distributed mode can have subnetworks.
compute.beta.subnetwork;privateIpGoogleAccess;boolean;Whether the VMs in this subnet can access Google services without assigned external IP addresses.
compute.beta.subnetwork;region;string;URL of the region where the Subnetwork resides.
compute.beta.subnetwork;secondaryIpRanges[];list;An array of configurations for secondary IP ranges for VM instances contained in this subnetwork. The primary IP of such VM must belong to the primary ipCidrRange of the subnetwork. The alias IPs may belong to either primary or secondary ranges.
compute.beta.subnetwork;secondaryIpRanges[].ipCidrRange;string;The range of IP addresses belonging to this subnetwork secondary range. Provide this property when you create the subnetwork. Ranges must be unique and non-overlapping with all primary and secondary IP ranges within a network. Only IPv4 is supported.
compute.beta.subnetwork;secondaryIpRanges[].rangeName;string;The name associated with this subnetwork secondary range, used when adding an alias IP range to a VM instance. The name must be 1-63 characters long, and comply with RFC1035. The name must be unique within the subnetwork.
compute.beta.subnetwork;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetHttpProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetHttpProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetHttpProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetHttpProxy;kind;string;[Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.
compute.beta.targetHttpProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetHttpProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetHttpProxy;urlMap;string;URL to the UrlMap resource that defines the mapping from URL to the BackendService.
compute.beta.targetHttpsProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetHttpsProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetHttpsProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetHttpsProxy;kind;string;[Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.
compute.beta.targetHttpsProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetHttpsProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetHttpsProxy;sslCertificates[];list;URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.
compute.beta.targetHttpsProxy;urlMap;string;A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map: https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map projects/project/global/urlMaps/url-map global/urlMaps/url-map
compute.beta.targetInstance;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetInstance;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetInstance;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetInstance;instance;string;A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance projects/project/zones/zone/instances/instance zones/zone/instances/instance
compute.beta.targetInstance;kind;string;[Output Only] The type of the resource. Always compute#targetInstance for target instances.
compute.beta.targetInstance;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetInstance;natPolicy;string;NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
compute.beta.targetInstance;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetInstance;zone;string;[Output Only] URL of the zone where the target instance resides.
compute.beta.targetPool;backupPool;string;This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]. backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
compute.beta.targetPool;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetPool;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetPool;failoverRatio;float;This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1]. If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
compute.beta.targetPool;healthChecks[];list;The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. An empty list means all member instances will be considered healthy at all times. Only HttpHealthChecks are supported. Only one health check may be specified.
compute.beta.targetPool;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetPool;instances[];list;A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool.
compute.beta.targetPool;kind;string;[Output Only] Type of the resource. Always compute#targetPool for target pools.
compute.beta.targetPool;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetPool;region;string;[Output Only] URL of the region where the target pool resides.
compute.beta.targetPool;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetPool;sessionAffinity;string;Sesssion affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
compute.beta.targetSslProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetSslProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetSslProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetSslProxy;kind;string;[Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.
compute.beta.targetSslProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetSslProxy;proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.beta.targetSslProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetSslProxy;service;string;URL to the BackendService resource.
compute.beta.targetSslProxy;sslCertificates[];list;URLs to SslCertificate resources that are used to authenticate connections to Backends. Currently exactly one SSL certificate must be specified.
compute.beta.targetVpnGateway;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.targetVpnGateway;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.targetVpnGateway;forwardingRules[];list;[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated to a VPN gateway.
compute.beta.targetVpnGateway;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.targetVpnGateway;kind;string;[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
compute.beta.targetVpnGateway;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.targetVpnGateway;network;string;URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
compute.beta.targetVpnGateway;region;string;[Output Only] URL of the region where the target VPN gateway resides.
compute.beta.targetVpnGateway;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.targetVpnGateway;status;string;[Output Only] The status of the VPN gateway.
compute.beta.targetVpnGateway;tunnels[];list;[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using compute.vpntunnels.insert method and associated to a VPN gateway.
compute.beta.urlMap;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.urlMap;defaultService;string;The URL of the BackendService resource if none of the hostRules match.
compute.beta.urlMap;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.urlMap;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.
compute.beta.urlMap;hostRules[];list;The list of HostRules to use against the URL.
compute.beta.urlMap;hostRules[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.urlMap;hostRules[].hosts[];list;The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or ..
compute.beta.urlMap;hostRules[].pathMatcher;string;The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
compute.beta.urlMap;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.urlMap;kind;string;[Output Only] Type of the resource. Always compute#urlMaps for url maps.
compute.beta.urlMap;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.urlMap;pathMatchers[];list;The list of named PathMatchers to use against the URL.
compute.beta.urlMap;pathMatchers[].defaultService;string;The full or partial URL to the BackendService resource. This will be used if none of the pathRules defined by this PathMatcher is matched by the URL's path portion. For example, the following are all valid URLs to a BackendService resource: https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService compute/v1/projects/project/global/backendServices/backendService global/backendServices/backendService
compute.beta.urlMap;pathMatchers[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.urlMap;pathMatchers[].name;string;The name to which this PathMatcher is referred by the HostRule.
compute.beta.urlMap;pathMatchers[].pathRules[];list;The list of path rules.
compute.beta.urlMap;pathMatchers[].pathRules[].paths[];list;The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.
compute.beta.urlMap;pathMatchers[].pathRules[].service;string;The URL of the BackendService resource if this rule is matched.
compute.beta.urlMap;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.urlMap;tests[];list;The list of expected URL mappings. Request to update this UrlMap will succeed only if all of the test cases pass.
compute.beta.urlMap;tests[].description;string;Description of this test case.
compute.beta.urlMap;tests[].host;string;Host portion of the URL.
compute.beta.urlMap;tests[].path;string;Path portion of the URL.
compute.beta.urlMap;tests[].service;string;Expected BackendService resource the given URL should be mapped to.
compute.beta.vpnTunnel;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.beta.vpnTunnel;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.beta.vpnTunnel;detailedStatus;string;[Output Only] Detailed status message for the VPN tunnel.
compute.beta.vpnTunnel;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.beta.vpnTunnel;ikeVersion;integer;IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.
compute.beta.vpnTunnel;kind;string;[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
compute.beta.vpnTunnel;localTrafficSelector[];list;Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
compute.beta.vpnTunnel;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.beta.vpnTunnel;peerIp;string;IP address of the peer VPN gateway. Only IPv4 is supported.
compute.beta.vpnTunnel;region;string;[Output Only] URL of the region where the VPN tunnel resides.
compute.beta.vpnTunnel;remoteTrafficSelector[];list;Remote traffic selectors to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
compute.beta.vpnTunnel;router;string;URL of router resource to be used for dynamic routing.
compute.beta.vpnTunnel;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.beta.vpnTunnel;sharedSecret;string;Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
compute.beta.vpnTunnel;sharedSecretHash;string;Hash of the shared secret.
compute.beta.vpnTunnel;status;string;[Output Only] The status of the VPN tunnel.
compute.beta.vpnTunnel;targetVpnGateway;string;URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
compute.v1.address;address;string;The static external IP address represented by this resource. Only IPv4 is supported.
compute.v1.address;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.address;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.address;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.address;kind;string;[Output Only] Type of the resource. Always compute#address for addresses.
compute.v1.address;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.address;region;string;[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.
compute.v1.address;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.address;status;string;[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
compute.v1.address;users[];list;[Output Only] The URLs of the resources that are using this address.
compute.v1.autoscaler;autoscalingPolicy;nested object;The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
compute.v1.autoscaler;autoscalingPolicy.coolDownPeriodSec;integer;The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
compute.v1.autoscaler;autoscalingPolicy.cpuUtilization;nested object;Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
compute.v1.autoscaler;autoscalingPolicy.cpuUtilization.utilizationTarget;double;The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
compute.v1.autoscaler;autoscalingPolicy.customMetricUtilizations[];list;Configuration parameters of autoscaling based on a custom metric.
compute.v1.autoscaler;autoscalingPolicy.customMetricUtilizations[].metric;string;The identifier of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric. The metric must also have a label of compute.googleapis.com/resource_id with the value of the instance's unique ID, although this alone does not guarantee that the metric is valid. For example, the following is a valid metric: compute.googleapis.com/instance/network/received_bytes_count The following is not a valid metric because it does not increase or decrease based on usage: compute.googleapis.com/instance/cpu/reserved_cores
compute.v1.autoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTarget;double;Target value of the metric which autoscaler should maintain. Must be a positive value.
compute.v1.autoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTargetType;string;Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.
compute.v1.autoscaler;autoscalingPolicy.loadBalancingUtilization;nested object;Configuration parameters of autoscaling based on load balancer.
compute.v1.autoscaler;autoscalingPolicy.loadBalancingUtilization.utilizationTarget;double;Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.
compute.v1.autoscaler;autoscalingPolicy.maxNumReplicas;integer;The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
compute.v1.autoscaler;autoscalingPolicy.minNumReplicas;integer;The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.
compute.v1.autoscaler;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.autoscaler;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.autoscaler;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.autoscaler;kind;string;[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
compute.v1.autoscaler;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.autoscaler;region;string;[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
compute.v1.autoscaler;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.autoscaler;target;string;URL of the managed instance group that this autoscaler will scale.
compute.v1.autoscaler;zone;string;[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
compute.v1.backendService;affinityCookieTtlSec;integer;Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.backendService;backends[];list;The list of backends that serve this BackendService.
compute.v1.backendService;backends[].balancingMode;string;Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL). This cannot be used for internal load balancing.
compute.v1.backendService;backends[].capacityScaler;float;A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0]. This cannot be used for internal load balancing.
compute.v1.backendService;backends[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.backendService;backends[].group;string;The fully-qualified URL of a zonal Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource. Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL. When the BackendService has load balancing scheme INTERNAL, the instance group must be in a zone within the same region as the BackendService.
compute.v1.backendService;backends[].maxConnections;integer;The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.v1.backendService;backends[].maxConnectionsPerInstance;integer;The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.v1.backendService;backends[].maxRate;integer;The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.v1.backendService;backends[].maxRatePerInstance;float;The max requests per second (RPS) that a single backend instance can handle.This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.v1.backendService;backends[].maxUtilization;float;Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0]. This cannot be used for internal load balancing.
compute.v1.backendService;cdnPolicy;nested object;Cloud CDN configuration for this BackendService.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy;nested object;The CacheKeyPolicy for this CdnPolicy.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy.includeHost;boolean;If true, requests to different hosts will be cached separately.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy.includeProtocol;boolean;If true, http and https requests will be cached separately.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy.includeQueryString;boolean;If true, include query string parameters in the cache key according to query_string_whitelist and query_string_blacklist. If neither is set, the entire query string will be included. If false, the query string will be excluded from the cache key entirely.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy.queryStringBlacklist[];list;Names of query string parameters to exclude in cache keys. All other parameters will be included. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
compute.v1.backendService;cdnPolicy.cacheKeyPolicy.queryStringWhitelist[];list;Names of query string parameters to include in cache keys. All other parameters will be excluded. Either specify query_string_whitelist or query_string_blacklist, not both. '&' and '=' will be percent encoded and not treated as delimiters.
compute.v1.backendService;connectionDraining;nested object;None
compute.v1.backendService;connectionDraining.drainingTimeoutSec;integer;Time for which instance will be drained (not accept new connections, but still work to finish started).
compute.v1.backendService;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.backendService;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.backendService;enableCDN;boolean;If true, enable Cloud CDN for this BackendService. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.backendService;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
compute.v1.backendService;healthChecks[];list;The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
compute.v1.backendService;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.backendService;kind;string;[Output Only] Type of resource. Always compute#backendService for backend services.
compute.v1.backendService;loadBalancingScheme;string;None
compute.v1.backendService;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.backendService;port;integer;Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. This cannot be used for internal load balancing.
compute.v1.backendService;portName;string;Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.backendService;protocol;string;The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP. For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
compute.v1.backendService;region;string;[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.
compute.v1.backendService;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.backendService;sessionAffinity;string;Type of session affinity to use. The default is NONE. When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE. When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO. When the protocol is UDP, this field is not used.
compute.v1.backendService;timeoutSec;integer;How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds. Valid range is [1, 86400].
compute.v1.disk;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.disk;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.disk;diskEncryptionKey;nested object;Encrypts the disk using a customer-supplied encryption key. After you encrypt a disk with a customer-supplied key, you must provide the same key if you use the disk later (e.g. to create a disk snapshot or an image, or to attach the disk to a virtual machine). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the disk, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later.
compute.v1.disk;diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.disk;diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.disk;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.disk;kind;string;[Output Only] Type of the resource. Always compute#disk for disks.
compute.v1.disk;lastAttachTimestamp;string;[Output Only] Last attach timestamp in RFC3339 text format.
compute.v1.disk;lastDetachTimestamp;string;[Output Only] Last detach timestamp in RFC3339 text format.
compute.v1.disk;licenses[];list;Any applicable publicly visible licenses.
compute.v1.disk;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.disk;options;string;Internal use only.
compute.v1.disk;selfLink;string;[Output Only] Server-defined fully-qualified URL for this resource.
compute.v1.disk;sizeGb;long;Size of the persistent disk, specified in GB. You can specify this field when creating a persistent disk using the sourceImage or sourceSnapshot parameter, or specify it alone to create an empty persistent disk. If you specify this field along with sourceImage or sourceSnapshot, the value of sizeGb must not be less than the size of the sourceImage or the size of the snapshot.
compute.v1.disk;sourceImage;string;The source image used to create this disk. If the source image is deleted, this field will not be set. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family
compute.v1.disk;sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key.
compute.v1.disk;sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.disk;sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.disk;sourceImageId;string;[Output Only] The ID value of the image used to create this disk. This value identifies the exact image that was used to create this persistent disk. For example, if you created the persistent disk from an image that was later deleted and recreated under the same name, the source image ID would identify the exact version of the image that was used.
compute.v1.disk;sourceSnapshot;string;The source snapshot used to create this disk. You can provide this as a partial or full URL to the resource. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/global/snapshots/snapshot projects/project/global/snapshots/snapshot global/snapshots/snapshot
compute.v1.disk;sourceSnapshotEncryptionKey;nested object;The customer-supplied encryption key of the source snapshot. Required if the source snapshot is protected by a customer-supplied encryption key.
compute.v1.disk;sourceSnapshotEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.disk;sourceSnapshotEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.disk;sourceSnapshotId;string;[Output Only] The unique ID of the snapshot used to create this disk. This value identifies the exact snapshot that was used to create this persistent disk. For example, if you created the persistent disk from a snapshot that was later deleted and recreated under the same name, the source snapshot ID would identify the exact version of the snapshot that was used.
compute.v1.disk;status;string;[Output Only] The status of disk creation.
compute.v1.disk;type;string;URL of the disk type resource describing which disk type to use to create the disk. Provide this when creating the disk.
compute.v1.disk;users[];list;[Output Only] Links to the users of the disk (attached instances) in form: project/zones/zone/instances/instance
compute.v1.disk;zone;string;[Output Only] URL of the zone where the disk resides.
compute.v1.firewall;allowed[];list;The list of ALLOW rules specified by this firewall. Each rule specifies a protocol and port-range tuple that describes a permitted connection.
compute.v1.firewall;allowed[].IPProtocol;string;The IP protocol to which this rule applies. The protocol type is required when creating a firewall rule. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number.
compute.v1.firewall;allowed[].ports[];list;An optional list of ports to which this rule applies. This field is only applicable for UDP or TCP protocol. Each entry must be either an integer or a range. If not specified, this rule applies to connections through any port. Example inputs include: ["22"], ["80","443"], and ["12345-12349"].
compute.v1.firewall;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.firewall;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.firewall;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.firewall;kind;string;[Output Ony] Type of the resource. Always compute#firewall for firewall rules.
compute.v1.firewall;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.firewall;network;string;URL of the network resource for this firewall rule. If not specified when creating a firewall rule, the default network is used: global/networks/default If you choose to specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/myproject/global/networks/my-network projects/myproject/global/networks/my-network global/networks/default
compute.v1.firewall;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.firewall;sourceRanges[];list;If source ranges are specified, the firewall will apply only to traffic that has source IP address in these ranges. These ranges must be expressed in CIDR format. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply. Only IPv4 is supported.
compute.v1.firewall;sourceTags[];list;If source tags are specified, the firewall will apply only to traffic with source IP that belongs to a tag listed in source tags. Source tags cannot be used to control traffic to an instance's external IP address. Because tags are associated with an instance, not an IP address. One or both of sourceRanges and sourceTags may be set. If both properties are set, the firewall will apply to traffic that has source IP address within sourceRanges OR the source IP that belongs to a tag listed in the sourceTags property. The connection does not need to match both properties for the firewall to apply.
compute.v1.firewall;targetTags[];list;A list of instance tags indicating sets of instances located in the network that may make network connections as specified in allowed[]. If no targetTags are specified, the firewall rule applies to all instances on the specified network.
compute.v1.forwardingRule;IPAddress;string;The IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IP from the same scope (global or regional) will be assigned. When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule. Only IPv4 is supported.
compute.v1.forwardingRule;IPProtocol;string;The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP. When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
compute.v1.forwardingRule;backendService;string;This field is not used for external load balancing. For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
compute.v1.forwardingRule;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.forwardingRule;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.forwardingRule;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.forwardingRule;kind;string;[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
compute.v1.forwardingRule;loadBalancingScheme;string;This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
compute.v1.forwardingRule;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.forwardingRule;network;string;This field is not used for external load balancing. For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
compute.v1.forwardingRule;portRange;string;This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges. Some types of forwarding target have constraints on the acceptable ports: TargetHttpProxy: 80, 8080 TargetHttpsProxy: 443 TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetVpnGateway: 500, 4500
compute.v1.forwardingRule;ports[];list;This field is used along with the backend_service field for internal load balancing. When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule. You may specify a maximum of up to 5 ports.
compute.v1.forwardingRule;region;string;[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.
compute.v1.forwardingRule;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.forwardingRule;subnetwork;string;This field is not used for external load balancing. For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule. If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
compute.v1.forwardingRule;target;string;The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. This field is not used for internal load balancing.
compute.v1.globalAddress;address;string;The static external IP address represented by this resource. Only IPv4 is supported.
compute.v1.globalAddress;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.globalAddress;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.globalAddress;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.globalAddress;kind;string;[Output Only] Type of the resource. Always compute#address for addresses.
compute.v1.globalAddress;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.globalAddress;region;string;[Output Only] URL of the region where the regional address resides. This field is not applicable to global addresses.
compute.v1.globalAddress;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.globalAddress;status;string;[Output Only] The status of the address, which can be either IN_USE or RESERVED. An address that is RESERVED is currently reserved and available to use. An IN_USE address is currently being used by another resource and is not available.
compute.v1.globalAddress;users[];list;[Output Only] The URLs of the resources that are using this address.
compute.v1.globalForwardingRule;IPAddress;string;The IP address that this forwarding rule is serving on behalf of. For global forwarding rules, the address must be a global IP. For regional forwarding rules, the address must live in the same region as the forwarding rule. By default, this field is empty and an ephemeral IP from the same scope (global or regional) will be assigned. When the load balancing scheme is INTERNAL, this can only be an RFC 1918 IP address belonging to the network/subnetwork configured for the forwarding rule. A reserved address cannot be used. If the field is empty, the IP address will be automatically allocated from the internal IP range of the subnetwork or network configured for this forwarding rule. Only IPv4 is supported.
compute.v1.globalForwardingRule;IPProtocol;string;The IP protocol to which this rule applies. Valid options are TCP, UDP, ESP, AH, SCTP or ICMP. When the load balancing scheme is INTERNAL, only TCP and UDP are valid.
compute.v1.globalForwardingRule;backendService;string;This field is not used for external load balancing. For internal load balancing, this field identifies the BackendService resource to receive the matched traffic.
compute.v1.globalForwardingRule;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.globalForwardingRule;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.globalForwardingRule;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.globalForwardingRule;kind;string;[Output Only] Type of the resource. Always compute#forwardingRule for Forwarding Rule resources.
compute.v1.globalForwardingRule;loadBalancingScheme;string;This signifies what the ForwardingRule will be used for and can only take the following values: INTERNAL, EXTERNAL The value of INTERNAL means that this will be used for Internal Network Load Balancing (TCP, UDP). The value of EXTERNAL means that this will be used for External Load Balancing (HTTP(S) LB, External TCP/UDP LB, SSL Proxy)
compute.v1.globalForwardingRule;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.globalForwardingRule;network;string;This field is not used for external load balancing. For internal load balancing, this field identifies the network that the load balanced IP should belong to for this Forwarding Rule. If this field is not specified, the default network will be used.
compute.v1.globalForwardingRule;portRange;string;This field is used along with the target field for TargetHttpProxy, TargetHttpsProxy, TargetSslProxy, TargetTcpProxy, TargetVpnGateway, TargetPool, TargetInstance. Applicable only when IPProtocol is TCP, UDP, or SCTP, only packets addressed to ports in the specified range will be forwarded to target. Forwarding rules with the same [IPAddress, IPProtocol] pair must have disjoint port ranges. Some types of forwarding target have constraints on the acceptable ports: TargetHttpProxy: 80, 8080 TargetHttpsProxy: 443 TargetTcpProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetSslProxy: 25, 43, 110, 143, 195, 443, 465, 587, 700, 993, 995 TargetVpnGateway: 500, 4500
compute.v1.globalForwardingRule;ports[];list;This field is used along with the backend_service field for internal load balancing. When the load balancing scheme is INTERNAL, a single port or a comma separated list of ports can be configured. Only packets addressed to these ports will be forwarded to the backends configured with this forwarding rule. You may specify a maximum of up to 5 ports.
compute.v1.globalForwardingRule;region;string;[Output Only] URL of the region where the regional forwarding rule resides. This field is not applicable to global forwarding rules.
compute.v1.globalForwardingRule;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.globalForwardingRule;subnetwork;string;This field is not used for external load balancing. For internal load balancing, this field identifies the subnetwork that the load balanced IP should belong to for this Forwarding Rule. If the network specified is in auto subnet mode, this field is optional. However, if the network is in custom subnet mode, a subnetwork must be specified.
compute.v1.globalForwardingRule;target;string;The URL of the target resource to receive the matched traffic. For regional forwarding rules, this target must live in the same region as the forwarding rule. For global forwarding rules, this target must be a global load balancing resource. The forwarded traffic must be of a type appropriate to the target object. This field is not used for internal load balancing.
compute.v1.healthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.v1.healthCheck;creationTimestamp;string;[Output Only] Creation timestamp in 3339 text format.
compute.v1.healthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.healthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.v1.healthCheck;httpHealthCheck;nested object;None
compute.v1.healthCheck;httpHealthCheck.host;string;The value of the host header in the HTTP health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
compute.v1.healthCheck;httpHealthCheck.port;integer;The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
compute.v1.healthCheck;httpHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.v1.healthCheck;httpHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.v1.healthCheck;httpHealthCheck.requestPath;string;The request path of the HTTP health check request. The default value is /.
compute.v1.healthCheck;httpsHealthCheck;nested object;None
compute.v1.healthCheck;httpsHealthCheck.host;string;The value of the host header in the HTTPS health check request. If left empty (default value), the IP on behalf of which this health check is performed will be used.
compute.v1.healthCheck;httpsHealthCheck.port;integer;The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
compute.v1.healthCheck;httpsHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.v1.healthCheck;httpsHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.v1.healthCheck;httpsHealthCheck.requestPath;string;The request path of the HTTPS health check request. The default value is /.
compute.v1.healthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.healthCheck;kind;string;Type of the resource.
compute.v1.healthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.healthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.healthCheck;sslHealthCheck;nested object;None
compute.v1.healthCheck;sslHealthCheck.port;integer;The TCP port number for the health check request. The default value is 443. Valid values are 1 through 65535.
compute.v1.healthCheck;sslHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.v1.healthCheck;sslHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.v1.healthCheck;sslHealthCheck.request;string;The application data to send once the SSL connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
compute.v1.healthCheck;sslHealthCheck.response;string;The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
compute.v1.healthCheck;tcpHealthCheck;nested object;None
compute.v1.healthCheck;tcpHealthCheck.port;integer;The TCP port number for the health check request. The default value is 80. Valid values are 1 through 65535.
compute.v1.healthCheck;tcpHealthCheck.portName;string;Port name as defined in InstanceGroup#NamedPort#name. If both port and port_name are defined, port takes precedence.
compute.v1.healthCheck;tcpHealthCheck.proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.v1.healthCheck;tcpHealthCheck.request;string;The application data to send once the TCP connection has been established (default value is empty). If both request and response are empty, the connection establishment alone will indicate health. The request data can only be ASCII.
compute.v1.healthCheck;tcpHealthCheck.response;string;The bytes to match against the beginning of the response data. If left empty (the default value), any response will indicate health. The response data can only be ASCII.
compute.v1.healthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
compute.v1.healthCheck;type;string;Specifies the type of the healthCheck, either TCP, SSL, HTTP or HTTPS. If not specified, the default is TCP. Exactly one of the protocol-specific health check field must be specified, which must match type field.
compute.v1.healthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.v1.httpHealthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.v1.httpHealthCheck;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.httpHealthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.httpHealthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.v1.httpHealthCheck;host;string;The value of the host header in the HTTP health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
compute.v1.httpHealthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.httpHealthCheck;kind;string;[Output Only] Type of the resource. Always compute#httpHealthCheck for HTTP health checks.
compute.v1.httpHealthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.httpHealthCheck;port;integer;The TCP port number for the HTTP health check request. The default value is 80.
compute.v1.httpHealthCheck;requestPath;string;The request path of the HTTP health check request. The default value is /.
compute.v1.httpHealthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.httpHealthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have greater value than checkIntervalSec.
compute.v1.httpHealthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.v1.httpsHealthCheck;checkIntervalSec;integer;How often (in seconds) to send a health check. The default value is 5 seconds.
compute.v1.httpsHealthCheck;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.httpsHealthCheck;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.httpsHealthCheck;healthyThreshold;integer;A so-far unhealthy instance will be marked healthy after this many consecutive successes. The default value is 2.
compute.v1.httpsHealthCheck;host;string;The value of the host header in the HTTPS health check request. If left empty (default value), the public IP on behalf of which this health check is performed will be used.
compute.v1.httpsHealthCheck;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.httpsHealthCheck;kind;string;Type of the resource.
compute.v1.httpsHealthCheck;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.httpsHealthCheck;port;integer;The TCP port number for the HTTPS health check request. The default value is 443.
compute.v1.httpsHealthCheck;requestPath;string;The request path of the HTTPS health check request. The default value is "/".
compute.v1.httpsHealthCheck;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.httpsHealthCheck;timeoutSec;integer;How long (in seconds) to wait before claiming failure. The default value is 5 seconds. It is invalid for timeoutSec to have a greater value than checkIntervalSec.
compute.v1.httpsHealthCheck;unhealthyThreshold;integer;A so-far healthy instance will be marked unhealthy after this many consecutive failures. The default value is 2.
compute.v1.image;archiveSizeBytes;long;Size of the image tar.gz archive stored in Google Cloud Storage (in bytes).
compute.v1.image;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.image;deprecated;nested object;The deprecation status associated with this image.
compute.v1.image;deprecated.deleted;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DELETED. This is only informational and the status will not change unless the client explicitly changes it.
compute.v1.image;deprecated.deprecated;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to DEPRECATED. This is only informational and the status will not change unless the client explicitly changes it.
compute.v1.image;deprecated.obsolete;string;An optional RFC3339 timestamp on or after which the state of this resource is intended to change to OBSOLETE. This is only informational and the status will not change unless the client explicitly changes it.
compute.v1.image;deprecated.replacement;string;The URL of the suggested replacement for a deprecated resource. The suggested replacement resource must be the same kind of resource as the deprecated resource.
compute.v1.image;deprecated.state;string;The deprecation state of this resource. This can be DEPRECATED, OBSOLETE, or DELETED. Operations which create a new resource using a DEPRECATED resource will return successfully, but with a warning indicating the deprecated resource and recommending its replacement. Operations which use OBSOLETE or DELETED resources will be rejected and result in an error.
compute.v1.image;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.image;diskSizeGb;long;Size of the image when restored onto a persistent disk (in GB).
compute.v1.image;family;string;The name of the image family to which this image belongs. You can create disks by specifying an image family instead of a specific image name. The image family always returns its latest image that is not deprecated. The name of the image family must comply with RFC1035.
compute.v1.image;guestOsFeatures[];list;A list of features to enable on the guest OS. Applicable for bootable images only. Currently, only one feature can be enabled, VIRTIO_SCSI_MULTIQUEUE, which allows each virtual CPU to have its own queue. For Windows images, you can only enable VIRTIO_SCSI_MULTIQUEUE on images with driver version 1.2.0.1621 or higher. Linux images with kernel versions 3.17 and higher will support VIRTIO_SCSI_MULTIQUEUE. For new Windows images, the server might also populate this field with the value WINDOWS, to indicate that this is a Windows image. This value is purely informational and does not enable or disable any features.
compute.v1.image;guestOsFeatures[].type;string;The type of supported feature. Currenty only VIRTIO_SCSI_MULTIQUEUE is supported. For newer Windows images, the server might also populate this property with the value WINDOWS to indicate that this is a Windows image. This value is purely informational and does not enable or disable any features.
compute.v1.image;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.image;imageEncryptionKey;nested object;Encrypts the image using a customer-supplied encryption key. After you encrypt an image with a customer-supplied key, you must provide the same key if you use the image later (e.g. to create a disk from the image). Customer-supplied encryption keys do not protect access to metadata of the disk. If you do not provide an encryption key when creating the image, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the image later.
compute.v1.image;imageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.image;imageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.image;kind;string;[Output Only] Type of the resource. Always compute#image for images.
compute.v1.image;licenses[];list;Any applicable license URI.
compute.v1.image;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.image;rawDisk;object;The parameters of the raw disk image.
compute.v1.image;rawDisk.containerType;string;The format used to encode and transmit the block device, which should be TAR. This is just a container and transmission format and not a runtime format. Provided by the client when the disk image is created.
compute.v1.image;rawDisk.sha1Checksum;string;An optional SHA1 checksum of the disk image before unpackaging. This is provided by the client when the disk image is created.
compute.v1.image;rawDisk.source;string;The full Google Cloud Storage URL where the disk image is stored. You must provide either this property or the sourceDisk property but not both.
compute.v1.image;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.image;sourceDisk;string;URL of the source disk used to create this image. This can be a full or valid partial URL. You must provide either this property or the rawDisk.source property but not both to create an image. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/disks/disk projects/project/zones/zone/disks/disk zones/zone/disks/disk
compute.v1.image;sourceDiskEncryptionKey;nested object;The customer-supplied encryption key of the source disk. Required if the source disk is protected by a customer-supplied encryption key.
compute.v1.image;sourceDiskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.image;sourceDiskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.image;sourceDiskId;string;The ID value of the disk used to create this image. This value may be used to determine whether the image was taken from the current or a previous instance of a given disk name.
compute.v1.image;sourceType;string;The type of the image used to create this disk. The default and only value is RAW
compute.v1.image;status;string;[Output Only] The status of the image. An image can be used to create other resources, such as instances, only after the image has been successfully created and the status is set to READY. Possible values are FAILED, PENDING, or READY.
compute.v1.instance;canIpForward;boolean;Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to forward routes. For more information, see Enabling IP Forwarding.
compute.v1.instance;cpuPlatform;string;[Output Only] The CPU platform used by this instance.
compute.v1.instance;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.instance;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.instance;disks[];list;Array of disks associated with this instance. Persistent disks must be created before you can assign them.
compute.v1.instance;disks[].autoDelete;boolean;Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
compute.v1.instance;disks[].boot;boolean;Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
compute.v1.instance;disks[].deviceName;string;Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
compute.v1.instance;disks[].diskEncryptionKey;nested object;Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
compute.v1.instance;disks[].diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.instance;disks[].diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.instance;disks[].index;integer;Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.
compute.v1.instance;disks[].initializeParams;nested object;[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
compute.v1.instance;disks[].initializeParams.diskName;string;Specifies the disk name. If not specified, the default is to use the name of the instance.
compute.v1.instance;disks[].initializeParams.diskSizeGb;long;Specifies the size of the disk in base-2 GB.
compute.v1.instance;disks[].initializeParams.diskType;string;Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType projects/project/zones/zone/diskTypes/diskType zones/zone/diskTypes/diskType Note that for InstanceTemplate, this is the name of the disk type, not URL.
compute.v1.instance;disks[].initializeParams.sourceImage;string;The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family If the source image is deleted later, this field will not be set.
compute.v1.instance;disks[].initializeParams.sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
compute.v1.instance;disks[].initializeParams.sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.instance;disks[].initializeParams.sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.instance;disks[].interface;string;Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
compute.v1.instance;disks[].kind;string;[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
compute.v1.instance;disks[].licenses[];list;[Output Only] Any valid publicly visible licenses.
compute.v1.instance;disks[].mode;string;The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
compute.v1.instance;disks[].source;string;Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
compute.v1.instance;disks[].type;string;Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
compute.v1.instance;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.instance;kind;string;[Output Only] Type of the resource. Always compute#instance for instances.
compute.v1.instance;machineType;string;Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the client when the instance is created. For example, the following is a valid partial url to a predefined machine type: zones/us-central1-f/machineTypes/n1-standard-1 To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB): zones/zone/machineTypes/custom-CPUS-MEMORY For example: zones/us-central1-f/machineTypes/custom-4-5120 For a full list of restrictions, read the Specifications for custom machine types.
compute.v1.instance;metadata;nested object;The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys.
compute.v1.instance;metadata.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
compute.v1.instance;metadata.items[];list;Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
compute.v1.instance;metadata.items[].key;string;Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
compute.v1.instance;metadata.items[].value;string;Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.
compute.v1.instance;metadata.kind;string;[Output Only] Type of the resource. Always compute#metadata for metadata.
compute.v1.instance;name;string;The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.instance;networkInterfaces[];list;An array of configurations for this interface. This specifies how this interface is configured to interact with other network services, such as connecting to the internet. Only one interface is supported per instance.
compute.v1.instance;networkInterfaces[].accessConfigs[];list;An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
compute.v1.instance;networkInterfaces[].accessConfigs[].kind;string;[Output Only] Type of the resource. Always compute#accessConfig for access configs.
compute.v1.instance;networkInterfaces[].accessConfigs[].name;string;The name of this access configuration. The default and recommended name is External NAT but you can use any arbitrary string you would like. For example, My external IP or Network Access.
compute.v1.instance;networkInterfaces[].accessConfigs[].natIP;string;An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
compute.v1.instance;networkInterfaces[].accessConfigs[].type;string;The type of configuration. The default and only option is ONE_TO_ONE_NAT.
compute.v1.instance;networkInterfaces[].kind;string;[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
compute.v1.instance;networkInterfaces[].name;string;[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.
compute.v1.instance;networkInterfaces[].network;string;URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred. This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/global/networks/network projects/project/global/networks/network global/networks/default
compute.v1.instance;networkInterfaces[].networkIP;string;An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
compute.v1.instance;networkInterfaces[].subnetwork;string;The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork regions/region/subnetworks/subnetwork
compute.v1.instance;scheduling;nested object;Sets the scheduling options for this instance.
compute.v1.instance;scheduling.automaticRestart;boolean;Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted. By default, this is set to true so an instance is automatically restarted if it is terminated by Compute Engine.
compute.v1.instance;scheduling.onHostMaintenance;string;Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
compute.v1.instance;scheduling.preemptible;boolean;Defines whether the instance is preemptible. This can only be set during instance creation, it cannot be set or changed after the instance has been created.
compute.v1.instance;selfLink;string;[Output Only] Server-defined URL for this resource.
compute.v1.instance;serviceAccounts[];list;A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported. Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See Service Accounts for more information.
compute.v1.instance;serviceAccounts[].email;string;Email address of the service account.
compute.v1.instance;serviceAccounts[].scopes[];list;The list of scopes to be made available for this service account.
compute.v1.instance;status;string;[Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, SUSPENDING, SUSPENDED, and TERMINATED.
compute.v1.instance;statusMessage;string;[Output Only] An optional, human-readable explanation of the status.
compute.v1.instance;tags;nested object;A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
compute.v1.instance;tags.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata. To see the latest fingerprint, make get() request to the instance.
compute.v1.instance;tags.items[];list;An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
compute.v1.instance;zone;string;[Output Only] URL of the zone where the instance resides.
compute.v1.instanceGroup;creationTimestamp;string;[Output Only] The creation timestamp for this instance group in RFC3339 text format.
compute.v1.instanceGroup;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.instanceGroup;fingerprint;bytes;[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
compute.v1.instanceGroup;id;unsigned long;[Output Only] A unique identifier for this instance group, generated by the server.
compute.v1.instanceGroup;kind;string;[Output Only] The resource type, which is always compute#instanceGroup for instance groups.
compute.v1.instanceGroup;name;string;The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.instanceGroup;namedPorts[];list;Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
compute.v1.instanceGroup;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.instanceGroup;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.v1.instanceGroup;network;string;The URL of the network to which all instances in the instance group belong.
compute.v1.instanceGroup;region;string;The URL of the region where the instance group is located (for regional resources).
compute.v1.instanceGroup;selfLink;string;[Output Only] The URL for this instance group. The server generates this URL.
compute.v1.instanceGroup;size;integer;[Output Only] The total number of instances in the instance group.
compute.v1.instanceGroup;subnetwork;string;The URL of the subnetwork to which all instances in the instance group belong.
compute.v1.instanceGroup;zone;string;[Output Only] The URL of the zone where the instance group is located (for zonal resources).
compute.v1.instanceGroupManager;baseInstanceName;string;The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
compute.v1.instanceGroupManager;creationTimestamp;string;[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
compute.v1.instanceGroupManager;currentActions;nested object;[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
compute.v1.instanceGroupManager;currentActions.abandoning;integer;[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
compute.v1.instanceGroupManager;currentActions.creating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
compute.v1.instanceGroupManager;currentActions.creatingWithoutRetries;integer;[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
compute.v1.instanceGroupManager;currentActions.deleting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
compute.v1.instanceGroupManager;currentActions.none;integer;[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
compute.v1.instanceGroupManager;currentActions.recreating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
compute.v1.instanceGroupManager;currentActions.refreshing;integer;[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
compute.v1.instanceGroupManager;currentActions.restarting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
compute.v1.instanceGroupManager;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.instanceGroupManager;fingerprint;bytes;[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.
compute.v1.instanceGroupManager;id;unsigned long;[Output Only] A unique identifier for this resource type. The server generates this identifier.
compute.v1.instanceGroupManager;instanceGroup;string;[Output Only] The URL of the Instance Group resource.
compute.v1.instanceGroupManager;instanceTemplate;string;The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
compute.v1.instanceGroupManager;kind;string;[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
compute.v1.instanceGroupManager;name;string;The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.instanceGroupManager;namedPorts[];list;Named ports configured for the Instance Groups complementary to this Instance Group Manager.
compute.v1.instanceGroupManager;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.instanceGroupManager;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.v1.instanceGroupManager;region;string;[Output Only] The URL of the region where the managed instance group resides (for regional resources).
compute.v1.instanceGroupManager;selfLink;string;[Output Only] The URL for this managed instance group. The server defines this URL.
compute.v1.instanceGroupManager;targetPools[];list;The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
compute.v1.instanceGroupManager;targetSize;integer;The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
compute.v1.instanceGroupManager;zone;string;[Output Only] The URL of the zone where the managed instance group is located (for zonal resources).
compute.v1.instanceTemplate;creationTimestamp;string;[Output Only] The creation timestamp for this instance template in RFC3339 text format.
compute.v1.instanceTemplate;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.instanceTemplate;id;unsigned long;[Output Only] A unique identifier for this instance template. The server defines this identifier.
compute.v1.instanceTemplate;kind;string;[Output Only] The resource type, which is always compute#instanceTemplate for instance templates.
compute.v1.instanceTemplate;name;string;Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.instanceTemplate;properties;nested object;The instance properties for this instance template.
compute.v1.instanceTemplate;properties.canIpForward;boolean;Enables instances created based on this template to send packets with source IP addresses other than their own and receive packets with destination IP addresses other than their own. If these instances will be used as an IP gateway or it will be set as the next-hop in a Route resource, specify true. If unsure, leave this set to false. See the Enable IP forwarding for instances documentation for more information.
compute.v1.instanceTemplate;properties.description;string;An optional text description for the instances that are created from this instance template.
compute.v1.instanceTemplate;properties.disks[];list;An array of disks that are associated with the instances that are created from this template.
compute.v1.instanceTemplate;properties.disks[].autoDelete;boolean;Specifies whether the disk will be auto-deleted when the instance is deleted (but not when the disk is detached from the instance).
compute.v1.instanceTemplate;properties.disks[].boot;boolean;Indicates that this is a boot disk. The virtual machine will use the first partition of the disk for its root filesystem.
compute.v1.instanceTemplate;properties.disks[].deviceName;string;Specifies a unique device name of your choice that is reflected into the /dev/disk/by-id/google-* tree of a Linux operating system running within the instance. This name can be used to reference the device for mounting, resizing, and so on, from within the instance. If not specified, the server chooses a default device name to apply to this disk, in the form persistent-disks-x, where x is a number assigned by Google Compute Engine. This field is only applicable for persistent disks.
compute.v1.instanceTemplate;properties.disks[].diskEncryptionKey;nested object;Encrypts or decrypts a disk using a customer-supplied encryption key. If you are creating a new disk, this field encrypts the new disk using an encryption key that you provide. If you are attaching an existing disk that is already encrypted, this field decrypts the disk using the customer-supplied encryption key. If you encrypt a disk using a customer-supplied key, you must provide the same key again when you attempt to use this resource at a later time. For example, you must provide the key when you create a snapshot or an image from the disk or when you attach the disk to a virtual machine instance. If you do not provide an encryption key, then the disk will be encrypted using an automatically generated key and you do not need to provide a key to use the disk later. Instance templates do not store customer-supplied encryption keys, so you cannot use your own keys to encrypt disks in a managed instance group.
compute.v1.instanceTemplate;properties.disks[].diskEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.instanceTemplate;properties.disks[].diskEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.instanceTemplate;properties.disks[].index;integer;Assigns a zero-based index to this disk, where 0 is reserved for the boot disk. For example, if you have many disks attached to an instance, each disk would have a unique index number. If not specified, the server will choose an appropriate value.
compute.v1.instanceTemplate;properties.disks[].initializeParams;nested object;[Input Only] Specifies the parameters for a new disk that will be created alongside the new instance. Use initialization parameters to create boot disks or local SSDs attached to the new instance. This property is mutually exclusive with the source property; you can only define one or the other, but not both.
compute.v1.instanceTemplate;properties.disks[].initializeParams.diskName;string;Specifies the disk name. If not specified, the default is to use the name of the instance. If provided, the instance template can only create one virtual machine instance per zone.
compute.v1.instanceTemplate;properties.disks[].initializeParams.diskSizeGb;long;Specifies the size of the disk in base-2 GB.
compute.v1.instanceTemplate;properties.disks[].initializeParams.diskType;string;Specifies the disk type to use to create the instance. If not specified, the default is pd-standard, specified using the full URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/pd-standard Other values include pd-ssd and local-ssd. If you define this field, you can provide either the full or partial URL. For example, the following are valid values: https://www.googleapis.com/compute/v1/projects/project/zones/zone/diskTypes/diskType projects/project/zones/zone/diskTypes/diskType zones/zone/diskTypes/diskType Note that for InstanceTemplate, this is the name of the disk type, not URL.
compute.v1.instanceTemplate;properties.disks[].initializeParams.sourceImage;string;The source image to create this disk. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. To create a disk with one of the public operating system images, specify the image by its family name. For example, specify family/debian-8 to use the latest Debian 8 image: projects/debian-cloud/global/images/family/debian-8 Alternatively, use a specific version of a public operating system image: projects/debian-cloud/global/images/debian-8-jessie-vYYYYMMDD To create a disk with a private image that you created, specify the image name in the following format: global/images/my-private-image You can also specify a private image by its image family, which returns the latest version of the image in that family. Replace the image name with family/family-name: global/images/family/my-private-family If the source image is deleted later, this field will not be set.
compute.v1.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey;nested object;The customer-supplied encryption key of the source image. Required if the source image is protected by a customer-supplied encryption key. Instance templates do not store customer-supplied encryption keys, so you cannot create disks for instances in a managed instance group if the source images are encrypted with your own keys.
compute.v1.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey.rawKey;string;Specifies a 256-bit customer-supplied encryption key, encoded in RFC 4648 base64 to either encrypt or decrypt this resource.
compute.v1.instanceTemplate;properties.disks[].initializeParams.sourceImageEncryptionKey.sha256;string;[Output only] The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied encryption key that protects this resource.
compute.v1.instanceTemplate;properties.disks[].interface;string;Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI. Persistent disks must always use SCSI and the request will fail if you attempt to attach a persistent disk in any other format than SCSI. Local SSDs can use either NVME or SCSI. For performance characteristics of SCSI over NVMe, see Local SSD performance.
compute.v1.instanceTemplate;properties.disks[].kind;string;[Output Only] Type of the resource. Always compute#attachedDisk for attached disks.
compute.v1.instanceTemplate;properties.disks[].licenses[];list;[Output Only] Any valid publicly visible licenses.
compute.v1.instanceTemplate;properties.disks[].mode;string;The mode in which to attach this disk, either READ_WRITE or READ_ONLY. If not specified, the default is to attach the disk in READ_WRITE mode.
compute.v1.instanceTemplate;properties.disks[].source;string;Specifies a valid partial or full URL to an existing Persistent Disk resource. When creating a new instance, one of initializeParams.sourceImage or disks.source is required. If desired, you can also attach existing non-root persistent disks using this property. This field is only applicable for persistent disks. Note that for InstanceTemplate, specify the disk name, not the URL for the disk.
compute.v1.instanceTemplate;properties.disks[].type;string;Specifies the type of the disk, either SCRATCH or PERSISTENT. If not specified, the default is PERSISTENT.
compute.v1.instanceTemplate;properties.machineType;string;Name of the machine type resource describing which machine type to use to host the instances created based on this template. Notice this differs from how the machine type is specified in the Compute Engine API, as the machine type name is required for instance templates, whereas the machine type URL is required in the API. For example, n1-standard-1.
compute.v1.instanceTemplate;properties.metadata;nested object;The metadata key/value pairs to assign to instances that are created from this template. These pairs can consist of custom metadata or predefined keys. See Project and instance metadata for more information.
compute.v1.instanceTemplate;properties.metadata.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata.
compute.v1.instanceTemplate;properties.metadata.items[];list;Array of key/value pairs. The total size of all keys and values must be less than 512 KB.
compute.v1.instanceTemplate;properties.metadata.items[].key;string;Key for the metadata entry. Keys must conform to the following regexp: [a-zA-Z0-9-_]+, and be less than 128 bytes in length. This is reflected as part of a URL in the metadata server. Additionally, to avoid ambiguity, keys must not conflict with any other metadata keys for the project.
compute.v1.instanceTemplate;properties.metadata.items[].value;string;Value for the metadata entry. These are free-form strings, and only have meaning as interpreted by the image running in the instance. The only restriction placed on values is that their size must be less than or equal to 32768 bytes.
compute.v1.instanceTemplate;properties.metadata.kind;string;[Output Only] Type of the resource. Always compute#metadata for metadata.
compute.v1.instanceTemplate;properties.networkInterfaces[];list;An array of network access configurations for this interface.
compute.v1.instanceTemplate;properties.networkInterfaces[].accessConfigs[];list;An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have no external internet access.
compute.v1.instanceTemplate;properties.networkInterfaces[].accessConfigs[].kind;string;[Output Only] Type of the resource. Always compute#accessConfig for access configs.
compute.v1.instanceTemplate;properties.networkInterfaces[].accessConfigs[].name;string;Name of this access configuration.
compute.v1.instanceTemplate;properties.networkInterfaces[].accessConfigs[].natIP;string;An external IP address associated with this instance. Specify an unused static external IP address available to the project or leave this field undefined to use an IP from a shared ephemeral IP address pool. If you specify a static external IP address, it must live in the same region as the zone of the instance.
compute.v1.instanceTemplate;properties.networkInterfaces[].accessConfigs[].type;string;The type of configuration. The default and only option is ONE_TO_ONE_NAT.
compute.v1.instanceTemplate;properties.networkInterfaces[].kind;string;[Output Only] Type of the resource. Always compute#networkInterface for network interfaces.
compute.v1.instanceTemplate;properties.networkInterfaces[].name;string;[Output Only] The name of the network interface, generated by the server. For network devices, these are eth0, eth1, etc.
compute.v1.instanceTemplate;properties.networkInterfaces[].network;string;URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is used; if the network is not specified but the subnetwork is specified, the network is inferred. This field is optional when creating a firewall rule. If not specified when creating a firewall rule, the default network global/networks/default is used. If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/global/networks/network projects/project/global/networks/network global/networks/default
compute.v1.instanceTemplate;properties.networkInterfaces[].networkIP;string;An IPv4 internal network address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system.
compute.v1.instanceTemplate;properties.networkInterfaces[].subnetwork;string;The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not provide this property. If the network is in auto subnet mode, providing the subnetwork is optional. If the network is in custom subnet mode, then this field should be specified. If you specify this property, you can specify the subnetwork as a full or partial URL. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork regions/region/subnetworks/subnetwork
compute.v1.instanceTemplate;properties.scheduling;nested object;Specifies the scheduling options for the instances that are created from this template.
compute.v1.instanceTemplate;properties.scheduling.automaticRestart;boolean;Specifies whether the instance should be automatically restarted if it is terminated by Compute Engine (not terminated by a user). You can only set the automatic restart option for standard instances. Preemptible instances cannot be automatically restarted.
compute.v1.instanceTemplate;properties.scheduling.onHostMaintenance;string;Defines the maintenance behavior for this instance. For standard instances, the default behavior is MIGRATE. For preemptible instances, the default and only possible behavior is TERMINATE. For more information, see Setting Instance Scheduling Options.
compute.v1.instanceTemplate;properties.scheduling.preemptible;boolean;Whether the instance is preemptible.
compute.v1.instanceTemplate;properties.serviceAccounts[];list;A list of service accounts with specified scopes. Access tokens for these service accounts are available to the instances that are created from this template. Use metadata queries to obtain the access tokens for these instances.
compute.v1.instanceTemplate;properties.serviceAccounts[].email;string;Email address of the service account.
compute.v1.instanceTemplate;properties.serviceAccounts[].scopes[];list;The list of scopes to be made available for this service account.
compute.v1.instanceTemplate;properties.tags;nested object;A list of tags to apply to the instances that are created from this template. The tags identify valid sources or targets for network firewalls. The setTags method can modify this list of tags. Each tag within the list must comply with RFC1035.
compute.v1.instanceTemplate;properties.tags.fingerprint;bytes;Specifies a fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in order to update or change metadata. To see the latest fingerprint, make get() request to the instance.
compute.v1.instanceTemplate;properties.tags.items[];list;An array of tags. Each tag must be 1-63 characters long, and comply with RFC1035.
compute.v1.instanceTemplate;selfLink;string;[Output Only] The URL for this instance template. The server defines this URL.
compute.v1.network;IPv4Range;string;The range of internal addresses that are legal on this network. This range is a CIDR specification, for example: 192.168.0.0/16. Provided by the client when the network is created.
compute.v1.network;autoCreateSubnetworks;boolean;When set to true, the network is created in "auto subnet mode". When set to false, the network is in "custom subnet mode". In "auto subnet mode", a newly created network is assigned the default CIDR of 10.128.0.0/9 and it automatically creates one subnetwork per region.
compute.v1.network;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.network;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.network;gatewayIPv4;string;A gateway address for default routing to other networks. This value is read only and is selected by the Google Compute Engine, typically as the first usable address in the IPv4Range.
compute.v1.network;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.network;kind;string;[Output Only] Type of the resource. Always compute#network for networks.
compute.v1.network;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.network;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.network;subnetworks[];list;[Output Only] Server-defined fully-qualified URLs for all subnetworks in this network.
compute.v1.regionAutoscaler;autoscalingPolicy;nested object;The configuration parameters for the autoscaling algorithm. You can define one or more of the policies for an autoscaler: cpuUtilization, customMetricUtilizations, and loadBalancingUtilization. If none of these are specified, the default will be to autoscale based on cpuUtilization to 0.6 or 60%.
compute.v1.regionAutoscaler;autoscalingPolicy.coolDownPeriodSec;integer;The number of seconds that the autoscaler should wait before it starts collecting information from a new instance. This prevents the autoscaler from collecting information when the instance is initializing, during which the collected usage would not be reliable. The default time autoscaler waits is 60 seconds. Virtual machine initialization times might vary because of numerous factors. We recommend that you test how long an instance may take to initialize. To do this, create an instance and time the startup process.
compute.v1.regionAutoscaler;autoscalingPolicy.cpuUtilization;nested object;Defines the CPU utilization policy that allows the autoscaler to scale based on the average CPU utilization of a managed instance group.
compute.v1.regionAutoscaler;autoscalingPolicy.cpuUtilization.utilizationTarget;double;The target CPU utilization that the autoscaler should maintain. Must be a float value in the range (0, 1]. If not specified, the default is 0.6. If the CPU level is below the target utilization, the autoscaler scales down the number of instances until it reaches the minimum number of instances you specified or until the average CPU of your instances reaches the target utilization. If the average CPU is above the target utilization, the autoscaler scales up until it reaches the maximum number of instances you specified or until the average utilization reaches the target utilization.
compute.v1.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[];list;Configuration parameters of autoscaling based on a custom metric.
compute.v1.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].metric;string;The identifier of the Stackdriver Monitoring metric. The metric cannot have negative values and should be a utilization metric, which means that the number of virtual machines handling requests should increase or decrease proportionally to the metric. The metric must also have a label of compute.googleapis.com/resource_id with the value of the instance's unique ID, although this alone does not guarantee that the metric is valid. For example, the following is a valid metric: compute.googleapis.com/instance/network/received_bytes_count The following is not a valid metric because it does not increase or decrease based on usage: compute.googleapis.com/instance/cpu/reserved_cores
compute.v1.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTarget;double;Target value of the metric which autoscaler should maintain. Must be a positive value.
compute.v1.regionAutoscaler;autoscalingPolicy.customMetricUtilizations[].utilizationTargetType;string;Defines how target utilization value is expressed for a Stackdriver Monitoring metric. Either GAUGE, DELTA_PER_SECOND, or DELTA_PER_MINUTE. If not specified, the default is GAUGE.
compute.v1.regionAutoscaler;autoscalingPolicy.loadBalancingUtilization;nested object;Configuration parameters of autoscaling based on load balancer.
compute.v1.regionAutoscaler;autoscalingPolicy.loadBalancingUtilization.utilizationTarget;double;Fraction of backend capacity utilization (set in HTTP(s) load balancing configuration) that autoscaler should maintain. Must be a positive float value. If not defined, the default is 0.8.
compute.v1.regionAutoscaler;autoscalingPolicy.maxNumReplicas;integer;The maximum number of instances that the autoscaler can scale up to. This is required when creating or updating an autoscaler. The maximum number of replicas should not be lower than minimal number of replicas.
compute.v1.regionAutoscaler;autoscalingPolicy.minNumReplicas;integer;The minimum number of replicas that the autoscaler can scale down to. This cannot be less than 0. If not provided, autoscaler will choose a default value depending on maximum number of instances allowed.
compute.v1.regionAutoscaler;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.regionAutoscaler;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.regionAutoscaler;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.regionAutoscaler;kind;string;[Output Only] Type of the resource. Always compute#autoscaler for autoscalers.
compute.v1.regionAutoscaler;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.regionAutoscaler;region;string;[Output Only] URL of the region where the instance group resides (for autoscalers living in regional scope).
compute.v1.regionAutoscaler;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.regionAutoscaler;target;string;URL of the managed instance group that this autoscaler will scale.
compute.v1.regionAutoscaler;zone;string;[Output Only] URL of the zone where the instance group resides (for autoscalers living in zonal scope).
compute.v1.regionBackendService;affinityCookieTtlSec;integer;Lifetime of cookies in seconds if session_affinity is GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts only until the end of the browser session (or equivalent). The maximum allowed value for TTL is one day. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.regionBackendService;backends[];list;The list of backends that serve this BackendService.
compute.v1.regionBackendService;backends[].balancingMode;string;Specifies the balancing mode for this backend. For global HTTP(S) or TCP/SSL load balancing, the default is UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S)) and CONNECTION (for TCP/SSL). This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].capacityScaler;float;A multiplier applied to the group's maximum servicing capacity (based on UTILIZATION, RATE or CONNECTION). Default value is 1, which means the group will serve up to 100% of its configured capacity (depending on balancingMode). A setting of 0 means the group is completely drained, offering 0% of its available Capacity. Valid range is [0.0,1.0]. This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.regionBackendService;backends[].group;string;The fully-qualified URL of a zonal Instance Group resource. This instance group defines the list of instances that serve traffic. Member virtual machine instances from each instance group must live in the same zone as the instance group itself. No two backends in a backend service are allowed to use same Instance Group resource. Note that you must specify an Instance Group resource using the fully-qualified URL, rather than a partial URL. When the BackendService has load balancing scheme INTERNAL, the instance group must be in a zone within the same region as the BackendService.
compute.v1.regionBackendService;backends[].maxConnections;integer;The max number of simultaneous connections for the group. Can be used with either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].maxConnectionsPerInstance;integer;The max number of simultaneous connections that a single backend instance can handle. This is used to calculate the capacity of the group. Can be used in either CONNECTION or UTILIZATION balancing modes. For CONNECTION mode, either maxConnections or maxConnectionsPerInstance must be set. This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].maxRate;integer;The max requests per second (RPS) of the group. Can be used with either RATE or UTILIZATION balancing modes, but required if RATE mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].maxRatePerInstance;float;The max requests per second (RPS) that a single backend instance can handle.This is used to calculate the capacity of the group. Can be used in either balancing mode. For RATE mode, either maxRate or maxRatePerInstance must be set. This cannot be used for internal load balancing.
compute.v1.regionBackendService;backends[].maxUtilization;float;Used when balancingMode is UTILIZATION. This ratio defines the CPU utilization target for the group. The default is 0.8. Valid range is [0.0, 1.0]. This cannot be used for internal load balancing.
compute.v1.regionBackendService;connectionDraining;nested object;None
compute.v1.regionBackendService;connectionDraining.drainingTimeoutSec;integer;Time for which instance will be drained (not accept new connections, but still work to finish started).
compute.v1.regionBackendService;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.regionBackendService;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.regionBackendService;enableCDN;boolean;If true, enable Cloud CDN for this BackendService. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.regionBackendService;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a BackendService. An up-to-date fingerprint must be provided in order to update the BackendService.
compute.v1.regionBackendService;healthChecks[];list;The list of URLs to the HttpHealthCheck or HttpsHealthCheck resource for health checking this BackendService. Currently at most one health check can be specified, and a health check is required. For internal load balancing, a URL to a HealthCheck resource must be specified instead.
compute.v1.regionBackendService;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.regionBackendService;kind;string;[Output Only] Type of resource. Always compute#backendService for backend services.
compute.v1.regionBackendService;loadBalancingScheme;string;None
compute.v1.regionBackendService;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.regionBackendService;port;integer;Deprecated in favor of portName. The TCP port to connect on the backend. The default value is 80. This cannot be used for internal load balancing.
compute.v1.regionBackendService;portName;string;Name of backend port. The same name should appear in the instance groups referenced by this service. Required when the load balancing scheme is EXTERNAL. When the load balancing scheme is INTERNAL, this field is not used.
compute.v1.regionBackendService;protocol;string;The protocol this BackendService uses to communicate with backends. Possible values are HTTP, HTTPS, TCP, and SSL. The default is HTTP. For internal load balancing, the possible values are TCP and UDP, and the default is TCP.
compute.v1.regionBackendService;region;string;[Output Only] URL of the region where the regional backend service resides. This field is not applicable to global backend services.
compute.v1.regionBackendService;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.regionBackendService;sessionAffinity;string;Type of session affinity to use. The default is NONE. When the load balancing scheme is EXTERNAL, can be NONE, CLIENT_IP, or GENERATED_COOKIE. When the load balancing scheme is INTERNAL, can be NONE, CLIENT_IP, CLIENT_IP_PROTO, or CLIENT_IP_PORT_PROTO. When the protocol is UDP, this field is not used.
compute.v1.regionBackendService;timeoutSec;integer;How many seconds to wait for the backend before considering it a failed request. Default is 30 seconds.
compute.v1.regionInstanceGroup;creationTimestamp;string;[Output Only] The creation timestamp for this instance group in RFC3339 text format.
compute.v1.regionInstanceGroup;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.regionInstanceGroup;fingerprint;bytes;[Output Only] The fingerprint of the named ports. The system uses this fingerprint to detect conflicts when multiple users change the named ports concurrently.
compute.v1.regionInstanceGroup;id;unsigned long;[Output Only] A unique identifier for this instance group, generated by the server.
compute.v1.regionInstanceGroup;kind;string;[Output Only] The resource type, which is always compute#instanceGroup for instance groups.
compute.v1.regionInstanceGroup;name;string;The name of the instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.regionInstanceGroup;namedPorts[];list;Assigns a name to a port number. For example: {name: "http", port: 80} This allows the system to reference ports by the assigned name instead of a port number. Named ports can also contain multiple ports. For example: [{name: "http", port: 80},{name: "http", port: 8080}] Named ports apply to all instances in this instance group.
compute.v1.regionInstanceGroup;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.regionInstanceGroup;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.v1.regionInstanceGroup;network;string;The URL of the network to which all instances in the instance group belong.
compute.v1.regionInstanceGroup;region;string;The URL of the region where the instance group is located (for regional resources).
compute.v1.regionInstanceGroup;selfLink;string;[Output Only] The URL for this instance group. The server generates this URL.
compute.v1.regionInstanceGroup;size;integer;[Output Only] The total number of instances in the instance group.
compute.v1.regionInstanceGroup;subnetwork;string;The URL of the subnetwork to which all instances in the instance group belong.
compute.v1.regionInstanceGroup;zone;string;[Output Only] The URL of the zone where the instance group is located (for zonal resources).
compute.v1.regionInstanceGroupManager;baseInstanceName;string;The base instance name to use for instances in this group. The value must be 1-58 characters long. Instances are named by appending a hyphen and a random four-character string to the base instance name. The base instance name must comply with RFC1035.
compute.v1.regionInstanceGroupManager;creationTimestamp;string;[Output Only] The creation timestamp for this managed instance group in RFC3339 text format.
compute.v1.regionInstanceGroupManager;currentActions;nested object;[Output Only] The list of instance actions and the number of instances in this managed instance group that are scheduled for each of those actions.
compute.v1.regionInstanceGroupManager;currentActions.abandoning;integer;[Output Only] The total number of instances in the managed instance group that are scheduled to be abandoned. Abandoning an instance removes it from the managed instance group without deleting it.
compute.v1.regionInstanceGroupManager;currentActions.creating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be created or are currently being created. If the group fails to create any of these instances, it tries again until it creates the instance successfully. If you have disabled creation retries, this field will not be populated; instead, the creatingWithoutRetries field will be populated.
compute.v1.regionInstanceGroupManager;currentActions.creatingWithoutRetries;integer;[Output Only] The number of instances that the managed instance group will attempt to create. The group attempts to create each instance only once. If the group fails to create any of these instances, it decreases the group's targetSize value accordingly.
compute.v1.regionInstanceGroupManager;currentActions.deleting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be deleted or are currently being deleted.
compute.v1.regionInstanceGroupManager;currentActions.none;integer;[Output Only] The number of instances in the managed instance group that are running and have no scheduled actions.
compute.v1.regionInstanceGroupManager;currentActions.recreating;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be recreated or are currently being being recreated. Recreating an instance deletes the existing root persistent disk and creates a new disk from the image that is defined in the instance template.
compute.v1.regionInstanceGroupManager;currentActions.refreshing;integer;[Output Only] The number of instances in the managed instance group that are being reconfigured with properties that do not require a restart or a recreate action. For example, setting or removing target pools for the instance.
compute.v1.regionInstanceGroupManager;currentActions.restarting;integer;[Output Only] The number of instances in the managed instance group that are scheduled to be restarted or are currently being restarted.
compute.v1.regionInstanceGroupManager;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.regionInstanceGroupManager;fingerprint;bytes;[Output Only] The fingerprint of the resource data. You can use this optional field for optimistic locking when you update the resource.
compute.v1.regionInstanceGroupManager;id;unsigned long;[Output Only] A unique identifier for this resource type. The server generates this identifier.
compute.v1.regionInstanceGroupManager;instanceGroup;string;[Output Only] The URL of the Instance Group resource.
compute.v1.regionInstanceGroupManager;instanceTemplate;string;The URL of the instance template that is specified for this managed instance group. The group uses this template to create all new instances in the managed instance group.
compute.v1.regionInstanceGroupManager;kind;string;[Output Only] The resource type, which is always compute#instanceGroupManager for managed instance groups.
compute.v1.regionInstanceGroupManager;name;string;The name of the managed instance group. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.regionInstanceGroupManager;namedPorts[];list;Named ports configured for the Instance Groups complementary to this Instance Group Manager.
compute.v1.regionInstanceGroupManager;namedPorts[].name;string;The name for this named port. The name must be 1-63 characters long, and comply with RFC1035.
compute.v1.regionInstanceGroupManager;namedPorts[].port;integer;The port number, which can be a value between 1 and 65535.
compute.v1.regionInstanceGroupManager;region;string;[Output Only] The URL of the region where the managed instance group resides (for regional resources).
compute.v1.regionInstanceGroupManager;selfLink;string;[Output Only] The URL for this managed instance group. The server defines this URL.
compute.v1.regionInstanceGroupManager;targetPools[];list;The URLs for all TargetPool resources to which instances in the instanceGroup field are added. The target pools automatically apply to all of the instances in the managed instance group.
compute.v1.regionInstanceGroupManager;targetSize;integer;The target number of running instances for this managed instance group. Deleting or abandoning instances reduces this number. Resizing the group changes this number.
compute.v1.regionInstanceGroupManager;zone;string;[Output Only] The URL of the zone where the managed instance group is located (for zonal resources).
compute.v1.route;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.route;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.route;destRange;string;The destination range of outgoing packets that this route applies to. Only IPv4 is supported.
compute.v1.route;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.route;kind;string;[Output Only] Type of this resource. Always compute#routes for Route resources.
compute.v1.route;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.route;network;string;Fully-qualified URL of the network that this route applies to.
compute.v1.route;nextHopGateway;string;The URL to a gateway that should handle matching packets. You can only specify the internet gateway using a full or partial valid URL: projects/<project-id>/global/gateways/default-internet-gateway
compute.v1.route;nextHopInstance;string;The URL to an instance that should handle matching packets. You can specify this as a full or partial URL. For example: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/
compute.v1.route;nextHopIp;string;The network IP address of an instance that should handle matching packets. Only IPv4 is supported.
compute.v1.route;nextHopNetwork;string;[Output Only] The URL of the local network if it should handle matching packets.
compute.v1.route;nextHopVpnTunnel;string;The URL to a VpnTunnel that should handle matching packets.
compute.v1.route;priority;unsigned integer;The priority of this route. Priority is used to break ties in cases where there is more than one matching route of equal prefix length. In the case of two routes with equal prefix length, the one with the lowest-numbered priority value wins. Default value is 1000. Valid range is 0 through 65535.
compute.v1.route;selfLink;string;[Output Only] Server-defined fully-qualified URL for this resource.
compute.v1.route;tags[];list;A list of instance tags to which this route applies.
compute.v1.route;warnings[];list;[Output Only] If potential misconfigurations are detected for this route, this field will be populated with warning messages.
compute.v1.route;warnings[].code;string;[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response.
compute.v1.route;warnings[].data[];list;[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" }
compute.v1.route;warnings[].data[].key;string;[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding).
compute.v1.route;warnings[].data[].value;string;[Output Only] A warning data value corresponding to the key.
compute.v1.route;warnings[].message;string;[Output Only] A human-readable description of the warning code.
compute.v1.router;bgp;nested object;BGP information specific to this router.
compute.v1.router;bgp.asn;unsigned integer;Local BGP Autonomous System Number (ASN). Must be an RFC6996 private ASN, either 16-bit or 32-bit. The value will be fixed for this router resource. All VPN tunnels that link to this router will have the same local ASN.
compute.v1.router;bgpPeers[];list;BGP information that needs to be configured into the routing stack to establish the BGP peering. It must specify peer ASN and either interface name, IP, or peer IP. Please refer to RFC4273.
compute.v1.router;bgpPeers[].advertisedRoutePriority;unsigned integer;The priority of routes advertised to this BGP peer. In the case where there is more than one matching route of maximum length, the routes with lowest priority value win.
compute.v1.router;bgpPeers[].interfaceName;string;Name of the interface the BGP peer is associated with.
compute.v1.router;bgpPeers[].ipAddress;string;IP address of the interface inside Google Cloud Platform. Only IPv4 is supported.
compute.v1.router;bgpPeers[].name;string;Name of this BGP peer. The name must be 1-63 characters long and comply with RFC1035.
compute.v1.router;bgpPeers[].peerAsn;unsigned integer;Peer BGP Autonomous System Number (ASN). For VPN use case, this value can be different for every tunnel.
compute.v1.router;bgpPeers[].peerIpAddress;string;IP address of the BGP interface outside Google cloud. Only IPv4 is supported.
compute.v1.router;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.router;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.router;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.router;interfaces[];list;Router interfaces. Each interface requires either one linked resource (e.g. linkedVpnTunnel), or IP address and IP address range (e.g. ipRange), or both.
compute.v1.router;interfaces[].ipRange;string;IP address and range of the interface. The IP range must be in the RFC3927 link-local IP space. The value must be a CIDR-formatted string, for example: 169.254.0.1/30. NOTE: Do not truncate the address as it represents the IP address of the interface.
compute.v1.router;interfaces[].linkedVpnTunnel;string;URI of linked VPN tunnel. It must be in the same region as the router. Each interface can have at most one linked resource.
compute.v1.router;interfaces[].name;string;Name of this interface entry. The name must be 1-63 characters long and comply with RFC1035.
compute.v1.router;kind;string;[Output Only] Type of resource. Always compute#router for routers.
compute.v1.router;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.router;network;string;URI of the network to which this router belongs.
compute.v1.router;region;string;[Output Only] URI of the region where the router resides.
compute.v1.router;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.sslCertificate;certificate;string;A local certificate file. The certificate must be in PEM format. The certificate chain must be no greater than 5 certs long. The chain must include at least one intermediate cert.
compute.v1.sslCertificate;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.sslCertificate;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.sslCertificate;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.sslCertificate;kind;string;[Output Only] Type of the resource. Always compute#sslCertificate for SSL certificates.
compute.v1.sslCertificate;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.sslCertificate;privateKey;string;A write-only private key in PEM format. Only insert requests will include this field.
compute.v1.sslCertificate;selfLink;string;[Output only] Server-defined URL for the resource.
compute.v1.subnetwork;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.subnetwork;description;string;An optional description of this resource. Provide this property when you create the resource. This field can be set only at resource creation time.
compute.v1.subnetwork;gatewayAddress;string;[Output Only] The gateway address for default routes to reach destination addresses outside this subnetwork. This field can be set only at resource creation time.
compute.v1.subnetwork;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.subnetwork;ipCidrRange;string;The range of internal addresses that are owned by this subnetwork. Provide this property when you create the subnetwork. For example, 10.0.0.0/8 or 192.168.0.0/16. Ranges must be unique and non-overlapping within a network. Only IPv4 is supported. This field can be set only at resource creation time.
compute.v1.subnetwork;kind;string;[Output Only] Type of the resource. Always compute#subnetwork for Subnetwork resources.
compute.v1.subnetwork;name;string;The name of the resource, provided by the client when initially creating the resource. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.subnetwork;network;string;The URL of the network to which this subnetwork belongs, provided by the client when initially creating the subnetwork. Only networks that are in the distributed mode can have subnetworks. This field can be set only at resource creation time.
compute.v1.subnetwork;privateIpGoogleAccess;boolean;Whether the VMs in this subnet can access Google services without assigned external IP addresses. This field can be both set at resource creation time and updated using setPrivateIpGoogleAccess.
compute.v1.subnetwork;region;string;URL of the region where the Subnetwork resides. This field can be set only at resource creation time.
compute.v1.subnetwork;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetHttpProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetHttpProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetHttpProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetHttpProxy;kind;string;[Output Only] Type of resource. Always compute#targetHttpProxy for target HTTP proxies.
compute.v1.targetHttpProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetHttpProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetHttpProxy;urlMap;string;A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map: https://www.googleapis.com/compute/v1/projects/project/global/urlMaps/url-map projects/project/global/urlMaps/url-map global/urlMaps/url-map
compute.v1.targetHttpsProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetHttpsProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetHttpsProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetHttpsProxy;kind;string;[Output Only] Type of resource. Always compute#targetHttpsProxy for target HTTPS proxies.
compute.v1.targetHttpsProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetHttpsProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetHttpsProxy;sslCertificates[];list;URLs to SslCertificate resources that are used to authenticate connections between users and the load balancer. Currently, exactly one SSL certificate must be specified.
compute.v1.targetHttpsProxy;urlMap;string;A fully-qualified or valid partial URL to the UrlMap resource that defines the mapping from URL to the BackendService. For example, the following are all valid URLs for specifying a URL map: https://www.googleapis.compute/v1/projects/project/global/urlMaps/url-map projects/project/global/urlMaps/url-map global/urlMaps/url-map
compute.v1.targetInstance;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetInstance;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetInstance;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetInstance;instance;string;A URL to the virtual machine instance that handles traffic for this target instance. When creating a target instance, you can provide the fully-qualified URL or a valid partial URL to the desired virtual machine. For example, the following are all valid URLs: https://www.googleapis.com/compute/v1/projects/project/zones/zone/instances/instance projects/project/zones/zone/instances/instance zones/zone/instances/instance
compute.v1.targetInstance;kind;string;[Output Only] The type of the resource. Always compute#targetInstance for target instances.
compute.v1.targetInstance;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetInstance;natPolicy;string;NAT option controlling how IPs are NAT'ed to the instance. Currently only NO_NAT (default value) is supported.
compute.v1.targetInstance;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetInstance;zone;string;[Output Only] URL of the zone where the target instance resides.
compute.v1.targetPool;backupPool;string;This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool, and its failoverRatio field is properly set to a value between [0, 1]. backupPool and failoverRatio together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below failoverRatio, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio and backupPool are not set, or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
compute.v1.targetPool;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetPool;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetPool;failoverRatio;float;This field is applicable only when the containing target pool is serving a forwarding rule as the primary pool (i.e., not as a backup pool to some other target pool). The value of the field must be in [0, 1]. If set, backupPool must also be set. They together define the fallback behavior of the primary target pool: if the ratio of the healthy instances in the primary pool is at or below this number, traffic arriving at the load-balanced IP will be directed to the backup pool. In case where failoverRatio is not set or all the instances in the backup pool are unhealthy, the traffic will be directed back to the primary pool in the "force" mode, where traffic will be spread to the healthy instances with the best effort, or to all instances when no instance is healthy.
compute.v1.targetPool;healthChecks[];list;The URL of the HttpHealthCheck resource. A member instance in this pool is considered healthy if and only if the health checks pass. An empty list means all member instances will be considered healthy at all times. Only HttpHealthChecks are supported. Only one health check may be specified.
compute.v1.targetPool;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetPool;instances[];list;A list of resource URLs to the virtual machine instances serving this pool. They must live in zones contained in the same region as this pool.
compute.v1.targetPool;kind;string;[Output Only] Type of the resource. Always compute#targetPool for target pools.
compute.v1.targetPool;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetPool;region;string;[Output Only] URL of the region where the target pool resides.
compute.v1.targetPool;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetPool;sessionAffinity;string;Sesssion affinity option, must be one of the following values: NONE: Connections from the same client IP may go to any instance in the pool. CLIENT_IP: Connections from the same client IP will go to the same instance in the pool while that instance remains healthy. CLIENT_IP_PROTO: Connections from the same client IP with the same IP protocol will go to the same instance in the pool while that instance remains healthy.
compute.v1.targetSslProxy;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetSslProxy;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetSslProxy;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetSslProxy;kind;string;[Output Only] Type of the resource. Always compute#targetSslProxy for target SSL proxies.
compute.v1.targetSslProxy;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetSslProxy;proxyHeader;string;Specifies the type of proxy header to append before sending data to the backend, either NONE or PROXY_V1. The default is NONE.
compute.v1.targetSslProxy;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetSslProxy;service;string;URL to the BackendService resource.
compute.v1.targetSslProxy;sslCertificates[];list;URLs to SslCertificate resources that are used to authenticate connections to Backends. Currently exactly one SSL certificate must be specified.
compute.v1.targetVpnGateway;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.targetVpnGateway;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.targetVpnGateway;forwardingRules[];list;[Output Only] A list of URLs to the ForwardingRule resources. ForwardingRules are created using compute.forwardingRules.insert and associated to a VPN gateway.
compute.v1.targetVpnGateway;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.targetVpnGateway;kind;string;[Output Only] Type of resource. Always compute#targetVpnGateway for target VPN gateways.
compute.v1.targetVpnGateway;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.targetVpnGateway;network;string;URL of the network to which this VPN gateway is attached. Provided by the client when the VPN gateway is created.
compute.v1.targetVpnGateway;region;string;[Output Only] URL of the region where the target VPN gateway resides.
compute.v1.targetVpnGateway;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.targetVpnGateway;status;string;[Output Only] The status of the VPN gateway.
compute.v1.targetVpnGateway;tunnels[];list;[Output Only] A list of URLs to VpnTunnel resources. VpnTunnels are created using compute.vpntunnels.insert method and associated to a VPN gateway.
compute.v1.urlMap;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.urlMap;defaultService;string;The URL of the BackendService resource to use if none of the hostRules match. You can provide the fully-qualified or valid partial URL to the backend service resource: https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backend projects/project/global/backendServices/backend global/backendServices/backend
compute.v1.urlMap;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.urlMap;fingerprint;bytes;Fingerprint of this resource. A hash of the contents stored in this object. This field is used in optimistic locking. This field will be ignored when inserting a UrlMap. An up-to-date fingerprint must be provided in order to update the UrlMap.
compute.v1.urlMap;hostRules[];list;The list of HostRules to use against the URL.
compute.v1.urlMap;hostRules[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.urlMap;hostRules[].hosts[];list;The list of host patterns to match. They must be valid hostnames, except * will match any string of ([a-z0-9-.]*). In that case, * must be the first character and must be followed in the pattern by either - or ..
compute.v1.urlMap;hostRules[].pathMatcher;string;The name of the PathMatcher to use to match the path portion of the URL if the hostRule matches the URL's host portion.
compute.v1.urlMap;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.urlMap;kind;string;[Output Only] Type of the resource. Always compute#urlMaps for url maps.
compute.v1.urlMap;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.urlMap;pathMatchers[];list;The list of named PathMatchers to use against the URL.
compute.v1.urlMap;pathMatchers[].defaultService;string;The full or partial URL to the BackendService resource. This will be used if none of the pathRules defined by this PathMatcher is matched by the URL's path portion. For example, the following are all valid URLs to a BackendService resource: https://www.googleapis.com/compute/v1/projects/project/global/backendServices/backendService compute/v1/projects/project/global/backendServices/backendService global/backendServices/backendService
compute.v1.urlMap;pathMatchers[].description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.urlMap;pathMatchers[].name;string;The name to which this PathMatcher is referred by the HostRule.
compute.v1.urlMap;pathMatchers[].pathRules[];list;The list of path rules.
compute.v1.urlMap;pathMatchers[].pathRules[].paths[];list;The list of path patterns to match. Each must start with / and the only place a * is allowed is at the end following a /. The string fed to the path matcher does not include any text after the first ? or #, and those chars are not allowed here.
compute.v1.urlMap;pathMatchers[].pathRules[].service;string;The full or partial URL of the BackendService resource if this rule is matched.
compute.v1.urlMap;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.urlMap;tests[];list;The list of expected URL mappings. Request to update this UrlMap will succeed only if all of the test cases pass.
compute.v1.urlMap;tests[].description;string;Description of this test case.
compute.v1.urlMap;tests[].host;string;Host portion of the URL.
compute.v1.urlMap;tests[].path;string;Path portion of the URL.
compute.v1.urlMap;tests[].service;string;Expected BackendService resource the given URL should be mapped to.
compute.v1.vpnTunnel;creationTimestamp;string;[Output Only] Creation timestamp in RFC3339 text format.
compute.v1.vpnTunnel;description;string;An optional description of this resource. Provide this property when you create the resource.
compute.v1.vpnTunnel;detailedStatus;string;[Output Only] Detailed status message for the VPN tunnel.
compute.v1.vpnTunnel;id;unsigned long;[Output Only] The unique identifier for the resource. This identifier is defined by the server.
compute.v1.vpnTunnel;ikeVersion;integer;IKE protocol version to use when establishing the VPN tunnel with peer VPN gateway. Acceptable IKE versions are 1 or 2. Default version is 2.
compute.v1.vpnTunnel;kind;string;[Output Only] Type of resource. Always compute#vpnTunnel for VPN tunnels.
compute.v1.vpnTunnel;localTrafficSelector[];list;Local traffic selector to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
compute.v1.vpnTunnel;name;string;Name of the resource. Provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]*[a-z0-9])? which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
compute.v1.vpnTunnel;peerIp;string;IP address of the peer VPN gateway. Only IPv4 is supported.
compute.v1.vpnTunnel;region;string;[Output Only] URL of the region where the VPN tunnel resides.
compute.v1.vpnTunnel;remoteTrafficSelector[];list;Remote traffic selectors to use when establishing the VPN tunnel with peer VPN gateway. The value should be a CIDR formatted string, for example: 192.168.0.0/16. The ranges should be disjoint. Only IPv4 is supported.
compute.v1.vpnTunnel;router;string;URL of router resource to be used for dynamic routing.
compute.v1.vpnTunnel;selfLink;string;[Output Only] Server-defined URL for the resource.
compute.v1.vpnTunnel;sharedSecret;string;Shared secret used to set the secure session between the Cloud VPN gateway and the peer VPN gateway.
compute.v1.vpnTunnel;sharedSecretHash;string;Hash of the shared secret.
compute.v1.vpnTunnel;status;string;[Output Only] The status of the VPN tunnel.
compute.v1.vpnTunnel;targetVpnGateway;string;URL of the VPN gateway with which this VPN tunnel is associated. Provided by the client when the VPN tunnel is created.
dns.v1.managedZone;creationTime;string;The time that this resource was created on the server. This is in RFC3339 text format. Output only.
dns.v1.managedZone;description;string;A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.
dns.v1.managedZone;dnsName;string;The DNS name of this managed zone, for instance "example.com.".
dns.v1.managedZone;id;unsigned long;Unique identifier for the resource; defined by the server (output only)
dns.v1.managedZone;kind;string;Identifies what kind of resource this is. Value: the fixed string "dns#managedZone".
dns.v1.managedZone;name;string;User assigned name for this resource. Must be unique within the project. The name must be 1-32 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.
dns.v1.managedZone;nameServerSet;string;Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users will leave this field unset.
dns.v1.managedZone;nameServers[];list;Delegate your managed_zone to these virtual name servers; defined by the server (output only)
sqladmin.v1beta4.database;charset;string;The MySQL charset value.
sqladmin.v1beta4.database;collation;string;The MySQL collation value.
sqladmin.v1beta4.database;etag;etag;HTTP 1.1 Entity tag for the resource.
sqladmin.v1beta4.database;instance;string;The name of the Cloud SQL instance. This does not include the project ID.
sqladmin.v1beta4.database;kind;string;This is always sql#database.
sqladmin.v1beta4.database;name;string;The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.
sqladmin.v1beta4.database;project;string;The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.
sqladmin.v1beta4.database;selfLink;string;The URI of this resource.
sqladmin.v1beta4.instance;backendType;string;FIRST_GEN: First Generation instance. MySQL only. SECOND_GEN: Second Generation instance or PostgreSQL instance. EXTERNAL: A database server that is not managed by Google.
sqladmin.v1beta4.instance;connectionName;string;Connection name of the Cloud SQL instance used in connection strings.
sqladmin.v1beta4.instance;currentDiskSize;long;The current disk usage of the instance in bytes. This property has been deprecated. Users should use the "cloudsql.googleapis.com/database/disk/bytes_used" metric in Cloud Monitoring API instead. Please see https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ for details.
sqladmin.v1beta4.instance;databaseVersion;string;The database engine type and version. For First Generation instances, can be MYSQL_5_5, or MYSQL_5_6. For Second Generation instances, can be MYSQL_5_6 or MYSQL_5_7. Defaults to MYSQL_5_6. The databaseVersion property can not be changed after instance creation.
sqladmin.v1beta4.instance;etag;etag;HTTP 1.1 Entity tag for the resource.
sqladmin.v1beta4.instance;failoverReplica;object;The name and status of the failover replica. This property is applicable only to Second Generation instances.
sqladmin.v1beta4.instance;failoverReplica.available;boolean;The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The master can only failover to the falover replica when the status is true.
sqladmin.v1beta4.instance;failoverReplica.name;string;The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances.
sqladmin.v1beta4.instance;instanceType;string;The instance type. This can be one of the following. CLOUD_SQL_INSTANCE: A Cloud SQL instance that is not replicating from a master. ON_PREMISES_INSTANCE: An instance running on the customer's premises. READ_REPLICA_INSTANCE: A Cloud SQL instance configured as a read-replica.
sqladmin.v1beta4.instance;ipAddresses[];list;The assigned IP addresses for the instance.
sqladmin.v1beta4.instance;ipAddresses[].ipAddress;string;The IP address assigned.
sqladmin.v1beta4.instance;ipAddresses[].timeToRetire;datetime;The due time for this IP to be retired in RFC 3339 format, for example 2012-11-15T16:19:00.094Z. This field is only available when the IP is scheduled to be retired.
sqladmin.v1beta4.instance;ipAddresses[].type;string;The type of this IP address. A PRIMARY address is an address that can accept incoming connections. An OUTGOING address is the source address of connections originating from the instance, if supported.
sqladmin.v1beta4.instance;ipv6Address;string;The IPv6 address assigned to the instance. This property is applicable only to First Generation instances.
sqladmin.v1beta4.instance;kind;string;This is always sql#instance.
sqladmin.v1beta4.instance;masterInstanceName;string;The name of the instance which will act as master in the replication setup.
sqladmin.v1beta4.instance;maxDiskSize;long;The maximum disk size of the instance in bytes.
sqladmin.v1beta4.instance;name;string;Name of the Cloud SQL instance. This does not include the project ID.
sqladmin.v1beta4.instance;onPremisesConfiguration;nested object;Configuration specific to on-premises instances.
sqladmin.v1beta4.instance;onPremisesConfiguration.hostPort;string;The host and port of the on-premises instance in host:port format
sqladmin.v1beta4.instance;onPremisesConfiguration.kind;string;This is always sql#onPremisesConfiguration.
sqladmin.v1beta4.instance;project;string;The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable.
sqladmin.v1beta4.instance;region;string;The geographical region. Defaults to us-central or us-central1 depending on the instance type (First Generation or Second Generation/PostgreSQL). For a complete list of valid values, see Instance Locations. The region cannot be changed after instance creation.
sqladmin.v1beta4.instance;replicaConfiguration;nested object;Configuration specific to failover replicas and read replicas.
sqladmin.v1beta4.instance;replicaConfiguration.failoverTarget;boolean;Specifies if the replica is the failover target. If the field is set to true the replica will be designated as a failover replica. In case the master instance fails, the replica instance will be promoted as the new master instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the master instance.
sqladmin.v1beta4.instance;replicaConfiguration.kind;string;This is always sql#replicaConfiguration.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration;nested object;MySQL specific configuration when replicating from a MySQL on-premises master. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named master.info in the data directory.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.caCertificate;string;PEM representation of the trusted CA's x509 certificate.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.clientCertificate;string;PEM representation of the slave's x509 certificate.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.clientKey;string;PEM representation of the slave's private key. The corresponsing public key is encoded in the client's certificate.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.connectRetryInterval;integer;Seconds to wait between connect retries. MySQL's default is 60 seconds.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.dumpFilePath;string;Path to a SQL dump file in Google Cloud Storage from which the slave instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps should have the binlog co-ordinates from which replication should begin. This can be accomplished by setting --master-data to 1 when using mysqldump.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.kind;string;This is always sql#mysqlReplicaConfiguration.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.masterHeartbeatPeriod;long;Interval in milliseconds between replication heartbeats.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.password;string;The password for the replication connection.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.sslCipher;string;A list of permissible ciphers to use for SSL encryption.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.username;string;The username for the replication connection.
sqladmin.v1beta4.instance;replicaConfiguration.mysqlReplicaConfiguration.verifyServerCertificate;boolean;Whether or not to check the master's Common Name value in the certificate that it sends during the SSL handshake.
sqladmin.v1beta4.instance;replicaNames[];list;The replicas of the instance.
sqladmin.v1beta4.instance;selfLink;string;The URI of this resource.
sqladmin.v1beta4.instance;serverCaCert;nested object;SSL configuration.
sqladmin.v1beta4.instance;serviceAccountEmailAddress;string;The service account email address assigned to the instance. This property is applicable only to Second Generation instances.
sqladmin.v1beta4.instance;settings;nested object;The user settings.
sqladmin.v1beta4.instance;settings.activationPolicy;string;The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: ALWAYS: The instance is in a functioning state. The activation policy determines whether the instance responds to connection requests or not. NEVER: The instance is off; it is not activated, even if a connection request arrives. ON_DEMAND: The instance responds to incoming requests, and turns itself off when not in use. Instances with PER_USE pricing turn off after 15 minutes of inactivity. Instances with PER_PACKAGE pricing turn off after 12 hours of inactivity.
sqladmin.v1beta4.instance;settings.authorizedGaeApplications[];list;The App Engine app IDs that can access this instance. This property is only applicable to First Generation instances.
sqladmin.v1beta4.instance;settings.availabilityType;string;Reserved for future use.
sqladmin.v1beta4.instance;settings.backupConfiguration;nested object;The daily backup configuration for the instance.
sqladmin.v1beta4.instance;settings.backupConfiguration.binaryLogEnabled;boolean;Whether binary log is enabled. If backup configuration is disabled, binary log must be disabled as well.
sqladmin.v1beta4.instance;settings.backupConfiguration.enabled;boolean;Whether this configuration is enabled.
sqladmin.v1beta4.instance;settings.backupConfiguration.kind;string;This is always sql#backupConfiguration.
sqladmin.v1beta4.instance;settings.backupConfiguration.startTime;string;Start time for the daily backup configuration in UTC timezone in the 24 hour format - HH:MM.
sqladmin.v1beta4.instance;settings.crashSafeReplicationEnabled;boolean;Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property is only applicable to First Generation instances.
sqladmin.v1beta4.instance;settings.dataDiskSizeGb;long;The size of data disk, in GB. The data disk size minimum is 10GB. Applies only to Second Generation instances.
sqladmin.v1beta4.instance;settings.dataDiskType;string;The type of data disk: PD_SSD (default) or PD_HDD. Applies only to Second Generation instances.
sqladmin.v1beta4.instance;settings.databaseFlags[];list;The database flags passed to the instance at startup.
sqladmin.v1beta4.instance;settings.databaseFlags[].name;string;The name of the flag. These flags are passed at instance startup. Flags should be specified with underscores, not hyphens. For more information, see Configuring Cloud SQL Flags in the Cloud SQL documentation, as well as the official MySQL documentation for server options and system variables, or the PostgreSQL documentation for server configuration.
sqladmin.v1beta4.instance;settings.databaseFlags[].value;string;The value of the flag. Booleans should be set to on for true and off for false. This field must be omitted if the flag doesn't take a value.
sqladmin.v1beta4.instance;settings.databaseReplicationEnabled;boolean;Configuration specific to read replica instances. Indicates whether replication is enabled or not.
sqladmin.v1beta4.instance;settings.ipConfiguration;nested object;The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.
sqladmin.v1beta4.instance;settings.ipConfiguration.authorizedNetworks[];list;The list of external networks that are allowed to connect to the instance using the IP. In CIDR notation, also known as 'slash' notation (e.g. 192.168.100.0/24).
sqladmin.v1beta4.instance;settings.ipConfiguration.authorizedNetworks[].expirationTime;datetime;The time when this access control entry expires in RFC 3339 format, for example 2012-11-15T16:19:00.094Z.
sqladmin.v1beta4.instance;settings.ipConfiguration.authorizedNetworks[].kind;string;This is always sql#aclEntry.
sqladmin.v1beta4.instance;settings.ipConfiguration.authorizedNetworks[].name;string;An optional label to identify this entry.
sqladmin.v1beta4.instance;settings.ipConfiguration.authorizedNetworks[].value;string;The whitelisted value for the access control list. For example, to grant access to a client from an external IP (IPv4 or IPv6) address or subnet, use that address or subnet here.
sqladmin.v1beta4.instance;settings.ipConfiguration.ipv4Enabled;boolean;Whether the instance should be assigned an IP address or not.
sqladmin.v1beta4.instance;settings.ipConfiguration.requireSsl;boolean;Whether the mysqld should default to 'REQUIRE X509' for users connecting over IP.
sqladmin.v1beta4.instance;settings.kind;string;This is always sql#settings.
sqladmin.v1beta4.instance;settings.labels[];list;Reserved for future use.
sqladmin.v1beta4.instance;settings.labels[].key;string;Reserved for future use.
sqladmin.v1beta4.instance;settings.labels[].value;string;Reserved for future use.
sqladmin.v1beta4.instance;settings.locationPreference;nested object;The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Google Compute Engine zone for better performance.
sqladmin.v1beta4.instance;settings.locationPreference.followGaeApplication;string;The App Engine application to follow, it must be in the same region as the Cloud SQL instance.
sqladmin.v1beta4.instance;settings.locationPreference.kind;string;This is always sql#locationPreference.
sqladmin.v1beta4.instance;settings.locationPreference.zone;string;The preferred Compute Engine zone (e.g. us-centra1-a, us-central1-b, etc.).
sqladmin.v1beta4.instance;settings.maintenanceWindow;nested object;The maintenance window for this instance. This specifies when the instance may be restarted for maintenance purposes. Applies only to Second Generation instances.
sqladmin.v1beta4.instance;settings.maintenanceWindow.day;integer;day of week (1-7), starting on Monday.
sqladmin.v1beta4.instance;settings.maintenanceWindow.hour;integer;hour of day - 0 to 23.
sqladmin.v1beta4.instance;settings.maintenanceWindow.kind;string;This is always sql#maintenanceWindow.
sqladmin.v1beta4.instance;settings.maintenanceWindow.updateTrack;string;None
sqladmin.v1beta4.instance;settings.pricingPlan;string;The pricing plan for this instance. This can be either PER_USE or PACKAGE. Only PER_USE is supported for Second Generation instances.
sqladmin.v1beta4.instance;settings.replicationType;string;The type of replication this instance uses. This can be either ASYNCHRONOUS or SYNCHRONOUS.
sqladmin.v1beta4.instance;settings.settingsVersion;long;The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.
sqladmin.v1beta4.instance;settings.storageAutoResize;boolean;Configuration to increase storage size automatically. The default value is true. Applies only to Second Generation instances.
sqladmin.v1beta4.instance;settings.storageAutoResizeLimit;long;The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit. Applies only to Second Generation instances.
sqladmin.v1beta4.instance;settings.tier;string;The tier or machine type for this instance, for example db-n1-standard-1. For MySQL instances, this field determines whether the instance is Second Generation (recommended) or First Generation. For more information, see pricing.
sqladmin.v1beta4.instance;state;string;The current serving state of the Cloud SQL instance. This can be one of the following. RUNNABLE: The instance is running, or is ready to run when accessed. SUSPENDED: The instance is not available, for example due to problems with billing. PENDING_CREATE: The instance is being created. MAINTENANCE: The instance is down for maintenance. FAILED: The instance creation failed. UNKNOWN_STATE: The state of the instance is unknown.
sqladmin.v1beta4.instance;suspensionReason[];list;If the instance state is SUSPENDED, the reason for the suspension. Potential values: BILLING_ISSUE, INTERNAL_MAINTENANCE, and OPERATIONAL_ISSUE.
storage.v1.bucket;acl[];list;Access controls on the bucket, containing one or more bucketAccessControls Resources.
storage.v1.bucket;cors[];list;The bucket's Cross-Origin Resource Sharing (CORS) configuration.
storage.v1.bucket;cors[].maxAgeSeconds;integer;The value, in seconds, to return in the Access-Control-Max-Age header used in preflight responses.
storage.v1.bucket;cors[].method[];list;The list of HTTP methods on which to include CORS response headers, (GET, OPTIONS, POST, etc) Note: "*" is permitted in the list of methods, and means "any method".
storage.v1.bucket;cors[].origin[];list;The list of Origins eligible to receive CORS response headers. Note: "*" is permitted in the list of origins, and means "any Origin".
storage.v1.bucket;cors[].responseHeader[];list;The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.
storage.v1.bucket;defaultObjectAcl[];list;Default access controls to apply to new objects when no ACL is provided.
storage.v1.bucket;defaultObjectAcl[].bucket;string;The name of the bucket.
storage.v1.bucket;defaultObjectAcl[].domain;string;The domain associated with the entity, if any.
storage.v1.bucket;defaultObjectAcl[].email;string;The email address associated with the entity, if any.
storage.v1.bucket;defaultObjectAcl[].entity;string;The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com. The group example@googlegroups.com would be group-example@googlegroups.com. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
storage.v1.bucket;defaultObjectAcl[].entityId;string;The ID for the entity, if any.
storage.v1.bucket;defaultObjectAcl[].etag;string;HTTP 1.1 Entity tag for the access-control entry.
storage.v1.bucket;defaultObjectAcl[].generation;long;The content generation of the object, if applied to an object.
storage.v1.bucket;defaultObjectAcl[].id;string;The ID of the access-control entry.
storage.v1.bucket;defaultObjectAcl[].kind;string;The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
storage.v1.bucket;defaultObjectAcl[].object;string;The name of the object, if applied to an object.
storage.v1.bucket;defaultObjectAcl[].projectTeam;object;The project team associated with the entity, if any.
storage.v1.bucket;defaultObjectAcl[].projectTeam.projectNumber;string;The project number.
storage.v1.bucket;defaultObjectAcl[].projectTeam.team;string;The team. Acceptable values are: "editors" "owners" "viewers"
storage.v1.bucket;defaultObjectAcl[].role;string;The access permission for the entity. Acceptable values are: "OWNER" "READER"
storage.v1.bucket;defaultObjectAcl[].selfLink;string;The link to this access-control entry.
storage.v1.bucket;etag;string;HTTP 1.1 Entity tag for the bucket.
storage.v1.bucket;id;string;The ID of the bucket. For buckets, the id and name properities are the same.
storage.v1.bucket;kind;string;The kind of item this is. For buckets, this is always storage#bucket.
storage.v1.bucket;labels;object;User-provided labels, in key/value pairs.
storage.v1.bucket;labels.(key);string;An individual label entry.
storage.v1.bucket;lifecycle;object;The bucket's lifecycle configuration. See lifecycle management for more information.
storage.v1.bucket;lifecycle.rule[];list;A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.
storage.v1.bucket;lifecycle.rule[].action;object;The action to take.
storage.v1.bucket;lifecycle.rule[].action.storageClass;string;Target storage class. Required iff the type of the action is SetStorageClass.
storage.v1.bucket;lifecycle.rule[].action.type;string;Type of the action. Currently, only Delete and SetStorageClass are supported. Acceptable values are: "Delete" "SetStorageClass"
storage.v1.bucket;lifecycle.rule[].condition;object;The condition(s) under which the action will be taken.
storage.v1.bucket;lifecycle.rule[].condition.age;integer;Age of an object (in days). This condition is satisfied when an object reaches the specified age.
storage.v1.bucket;lifecycle.rule[].condition.createdBefore;date;A date in RFC 3339 format with only the date part (for instance, "2013-01-15"). This condition is satisfied when an object is created before midnight of the specified date in UTC.
storage.v1.bucket;lifecycle.rule[].condition.isLive;boolean;Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects.
storage.v1.bucket;lifecycle.rule[].condition.matchesStorageClass[];list;Objects having any of the storage classes specified by this condition will be matched. Values include MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, and DURABLE_REDUCED_AVAILABILITY.
storage.v1.bucket;lifecycle.rule[].condition.numNewerVersions;integer;Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.
storage.v1.bucket;location;string;The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Defaults to US. See the developer's guide for the authoritative list.
storage.v1.bucket;logging;object;The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.
storage.v1.bucket;logging.logBucket;string;The destination bucket where the current bucket's logs should be placed.
storage.v1.bucket;logging.logObjectPrefix;string;A prefix for log object names.
storage.v1.bucket;metageneration;long;The metadata generation of this bucket.
storage.v1.bucket;name;string;The name of the bucket.
storage.v1.bucket;owner;object;The owner of the bucket. This is always the project team's owner group.
storage.v1.bucket;owner.entity;string;The entity, in the form project-owner-projectId.
storage.v1.bucket;owner.entityId;string;The ID for the entity.
storage.v1.bucket;projectNumber;unsigned long;The project number of the project the bucket belongs to.
storage.v1.bucket;selfLink;string;The URI of this bucket.
storage.v1.bucket;storageClass;string;The bucket's default storage class, used whenever no storageClass is specified for a newly-created object. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Values include MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, and DURABLE_REDUCED_AVAILABILITY. If this value is not specified when the bucket is created, it will default to STANDARD. For more information, see storage classes.
storage.v1.bucket;timeCreated;datetime;The creation time of the bucket in RFC 3339 format.
storage.v1.bucket;updated;datetime;The modification time of the bucket in RFC 3339 format.
storage.v1.bucket;versioning;object;The bucket's versioning configuration.
storage.v1.bucket;versioning.enabled;boolean;While set to true, versioning is fully enabled for this bucket.
storage.v1.bucket;website;object;The bucket's website configuration, controlling how the service behaves when accessing bucket contents as a web site. See the Static Website Examples for more information.
storage.v1.bucket;website.mainPageSuffix;string;If the requested object path is missing, the service will ensure the path has a trailing '/', append this suffix, and attempt to retrieve the resulting object. This allows the creation of index.html objects to represent directory pages.
storage.v1.bucket;website.notFoundPage;string;If the requested object path is missing, and any mainPageSuffix object is missing, if applicable, the service will return the named object from this bucket as the content for a 404 Not Found result.
storage.v1.bucketAccessControl;bucket;string;The name of the bucket.
storage.v1.bucketAccessControl;domain;string;The domain associated with the entity, if any.
storage.v1.bucketAccessControl;email;string;The email address associated with the entity, if any.
storage.v1.bucketAccessControl;entity;string;The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com. The group example@googlegroups.com would be group-example@googlegroups.com. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
storage.v1.bucketAccessControl;entityId;string;The ID for the entity, if any.
storage.v1.bucketAccessControl;etag;string;HTTP 1.1 Entity tag for the access-control entry.
storage.v1.bucketAccessControl;id;string;The ID of the access-control entry.
storage.v1.bucketAccessControl;kind;string;The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.
storage.v1.bucketAccessControl;projectTeam;object;The project team associated with the entity, if any.
storage.v1.bucketAccessControl;projectTeam.projectNumber;string;The project number.
storage.v1.bucketAccessControl;projectTeam.team;string;The team. Acceptable values are: "editors" "owners" "viewers"
storage.v1.bucketAccessControl;role;string;The access permission for the entity. Acceptable values are: "OWNER" "READER" "WRITER"
storage.v1.bucketAccessControl;selfLink;string;The link to this access-control entry.
storage.v1.defaultObjectAccessControl;bucket;string;The name of the bucket.
storage.v1.defaultObjectAccessControl;domain;string;The domain associated with the entity, if any.
storage.v1.defaultObjectAccessControl;email;string;The email address associated with the entity, if any.
storage.v1.defaultObjectAccessControl;entity;string;The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com. The group example@googlegroups.com would be group-example@googlegroups.com. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
storage.v1.defaultObjectAccessControl;entityId;string;The ID for the entity, if any.
storage.v1.defaultObjectAccessControl;etag;string;HTTP 1.1 Entity tag for the access-control entry.
storage.v1.defaultObjectAccessControl;generation;long;The content generation of the object, if applied to an object.
storage.v1.defaultObjectAccessControl;id;string;The ID of the access-control entry.
storage.v1.defaultObjectAccessControl;kind;string;The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
storage.v1.defaultObjectAccessControl;object;string;The name of the object, if applied to an object.
storage.v1.defaultObjectAccessControl;projectTeam;object;The project team associated with the entity, if any.
storage.v1.defaultObjectAccessControl;projectTeam.projectNumber;string;The project number.
storage.v1.defaultObjectAccessControl;projectTeam.team;string;The team. Acceptable values are: "editors" "owners" "viewers"
storage.v1.defaultObjectAccessControl;role;string;The access permission for the entity. Acceptable values are: "OWNER" "READER"
storage.v1.defaultObjectAccessControl;selfLink;string;The link to this access-control entry.
storage.v1.object;acl[];list;Access controls on the object, containing one or more objectAccessControls Resources.
storage.v1.object;acl[].bucket;string;The name of the bucket.
storage.v1.object;acl[].domain;string;The domain associated with the entity, if any.
storage.v1.object;acl[].email;string;The email address associated with the entity, if any.
storage.v1.object;acl[].entity;string;The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com. The group example@googlegroups.com would be group-example@googlegroups.com. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
storage.v1.object;acl[].entityId;string;The ID for the entity, if any.
storage.v1.object;acl[].etag;string;HTTP 1.1 Entity tag for the access-control entry.
storage.v1.object;acl[].generation;long;The content generation of the object, if applied to an object.
storage.v1.object;acl[].id;string;The ID of the access-control entry.
storage.v1.object;acl[].kind;string;The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
storage.v1.object;acl[].object;string;The name of the object, if applied to an object.
storage.v1.object;acl[].projectTeam;object;The project team associated with the entity, if any.
storage.v1.object;acl[].projectTeam.projectNumber;string;The project number.
storage.v1.object;acl[].projectTeam.team;string;The team. Acceptable values are: "editors" "owners" "viewers"
storage.v1.object;acl[].role;string;The access permission for the entity. Acceptable values are: "OWNER" "READER"
storage.v1.object;acl[].selfLink;string;The link to this access-control entry.
storage.v1.object;bucket;string;The name of the bucket containing this object.
storage.v1.object;cacheControl;string;Cache-Control directive for the object data. If omitted, and the object is accessible to all anonymous users, the default will be public, max-age=3600.
storage.v1.object;componentCount;integer;Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 1024, counting 1 for each non-composite component object and componentCount for each composite component object. Note: componentCount is included in the metadata for composite objects only.
storage.v1.object;contentDisposition;string;Content-Disposition of the object data.
storage.v1.object;contentEncoding;string;Content-Encoding of the object data.
storage.v1.object;contentLanguage;string;Content-Language of the object data.
storage.v1.object;contentType;string;Content-Type of the object data. If contentType is not specified, object downloads will be served as application/octet-stream.
storage.v1.object;crc32c;string;CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64 in big-endian byte order. For more information about using the CRC32c checksum, see Hashes and ETags: Best Practices.
storage.v1.object;customerEncryption;object;Metadata of customer-supplied encryption key, if the object is encrypted by such a key.
storage.v1.object;customerEncryption.encryptionAlgorithm;string;The encryption algorithm.
storage.v1.object;customerEncryption.keySha256;string;SHA256 hash value of the encryption key.
storage.v1.object;etag;string;HTTP 1.1 Entity tag for the object.
storage.v1.object;generation;long;The content generation of this object. Used for object versioning.
storage.v1.object;id;string;The ID of the object, including the bucket name, object name, and generation number.
storage.v1.object;kind;string;The kind of item this is. For objects, this is always storage#object.
storage.v1.object;md5Hash;string;MD5 hash of the data; encoded using base64. For more information about using the MD5 hash, see Hashes and ETags: Best Practices.
storage.v1.object;mediaLink;string;Media download link.
storage.v1.object;metadata;object;User-provided metadata, in key/value pairs.
storage.v1.object;metadata.(key);string;An individual metadata entry.
storage.v1.object;metageneration;long;The version of the metadata for this object at this generation. Used for preconditions and for detecting changes in metadata. A metageneration number is only meaningful in the context of a particular generation of a particular object.
storage.v1.object;name;string;The name of the object. Required if not specified by URL parameter.
storage.v1.object;owner;object;The owner of the object. This will always be the uploader of the object.
storage.v1.object;owner.entity;string;The entity, in the form user-userId.
storage.v1.object;owner.entityId;string;The ID for the entity.
storage.v1.object;selfLink;string;The link to this object.
storage.v1.object;size;unsigned long;Content-Length of the data in bytes.
storage.v1.object;storageClass;string;Storage class of the object.
storage.v1.object;timeCreated;datetime;The creation time of the object in RFC 3339 format.
storage.v1.object;timeDeleted;datetime;The deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.
storage.v1.object;timeStorageClassUpdated;datetime;The time at which the object's storage class was last changed. When the object is initially created, it will be set to timeCreated.
storage.v1.object;updated;datetime;The modification time of the object metadata in RFC 3339 format.
storage.v1.objectAccessControl;bucket;string;The name of the bucket.
storage.v1.objectAccessControl;domain;string;The domain associated with the entity, if any.
storage.v1.objectAccessControl;email;string;The email address associated with the entity, if any.
storage.v1.objectAccessControl;entity;string;The entity holding the permission, in one of the following forms: user-userId user-email group-groupId group-email domain-domain project-team-projectId allUsers allAuthenticatedUsers Examples: The user liz@example.com would be user-liz@example.com. The group example@googlegroups.com would be group-example@googlegroups.com. To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com.
storage.v1.objectAccessControl;entityId;string;The ID for the entity, if any.
storage.v1.objectAccessControl;etag;string;HTTP 1.1 Entity tag for the access-control entry.
storage.v1.objectAccessControl;generation;long;The content generation of the object, if applied to an object.
storage.v1.objectAccessControl;id;string;The ID of the access-control entry.
storage.v1.objectAccessControl;kind;string;The kind of item this is. For object access control entries, this is always storage#objectAccessControl.
storage.v1.objectAccessControl;object;string;The name of the object, if applied to an object.
storage.v1.objectAccessControl;projectTeam;object;The project team associated with the entity, if any.
storage.v1.objectAccessControl;projectTeam.projectNumber;string;The project number.
storage.v1.objectAccessControl;projectTeam.team;string;The team. Acceptable values are: "editors" "owners" "viewers"
storage.v1.objectAccessControl;role;string;The access permission for the entity. Acceptable values are: "OWNER" "READER"
storage.v1.objectAccessControl;selfLink;string;The link to this access-control entry.
